version: 2
jobs:
  build_PROD:
    docker:
      - image: cimg/node:14.21.3
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-prod-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Install HighestGoodNetworkApp's NodeJS dependencies
          command: 'sudo npm install'
      - run:
          name: Run react build
          command: 'sudo REACT_APP_APIENDPOINT=$APIENDPOINT_PROD REACT_APP_DEF_PWD=$REACT_APP_DEF_PWD REACT_APP_SENTRY_URL=$SENTRY_URL_PROD SKIP_PREFLIGHT_CHECK=true NODE_OPTIONS="$NODE_OPTIONS --max_old_space_size=4096" npm run build --prod && sudo mv build/index.html build/200.html'
      - run:
          name: Export error log if 'Build the React client' failed
          command: |
            mkdir -p /tmp/err_logs
            cp -r /home/circleci/.npm/_logs/* /tmp/err_logs
          when: on_fail
      - store_artifacts:
          path: /tmp/err_logs
      - run:
          name: Create ZIP archive of build directory
          command: zip -r build.zip build   
      - run:
          name: Calculate SHA256 hash of build.zip and place output into build/hash.txt
          command: sha256sum build.zip > build/hash.txt
      - run:
          name: Create 200.html for (required for client-side routing support on Surge)
          command: cp build/index.html build/200.html 
      - run:
          name: Deploy app
          command: ./node_modules/.bin/surge --domain $SURGE_DOMAIN_PROD --project ./build
      - run:
          name: Deploy app
          command: ./node_modules/.bin/surge --domain $SURGE_DOMAIN_PROD1 --project ./build
      - save_cache:
          key: v1-prod-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules

  build_development:
    docker:
      # Change from ubuntu:20.04 to cimg/node:14.21.3.
      # cimg convient image comes with node, yarn, and other pre-installed software.
      # This will remove the steps of install node, yarn, and other software.
      - image: cimg/node:14.21.3
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          keys:
            #   Update the key from v1-dependencies-{{ checksum "package-lock.json" }} to v1.1-dependencies-{{ checksum "package-lock.json" }} since the base image switched.
            #   Otherwise, we would have persmission issues while retriving the cache saved from the preivous image
            - v1.1-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Install HighestGoodNetworkApp's NodeJS dependencies
          command: npm install
      - run:
          name: Build the React client
          command: export REACT_APP_APIENDPOINT=$APIENDPOINT_DEV REACT_APP_DEF_PWD=$REACT_APP_DEF_PWD REACT_APP_SENTRY_URL=$SENTRY_URL_DEV SKIP_PREFLIGHT_CHECK=true NODE_OPTIONS="$NODE_OPTIONS --max_old_space_size=4096" && npm run build --prod
      - run:
          name: Export error log if 'Build the React client' failed
          command: |
            mkdir -p /tmp/err_logs
            cp -r /home/circleci/.npm/_logs/* /tmp/err_logs
          when: on_fail
      - store_artifacts:
          path: /tmp/err_logs
      - run:
          name: Create ZIP archive of build directory
          command: zip -r build.zip build
      - run:
          name: Calculate SHA256 hash of build.zip and place output into build/hash.txt
          command: sha256sum build.zip > build/hash.txt
      - run:
          name: Create 200.html for (required for client-side routing support on Surge)
          command: cp build/index.html build/200.html
      - run:
          name: Deploy compiled app to surge.sh on $SURGE_DOMAIN_DEV
          command: ./node_modules/.bin/surge --domain $SURGE_DOMAIN_DEV --project ./build
      - run:
          name: Deploy compiled app to surge.sh on $SURGE_DOMAIN_DEV1
          command: ./node_modules/.bin/surge --domain $SURGE_DOMAIN_DEV1 --project ./build
      - save_cache:
          key: v1.1-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules

  build_beta:
    docker:
      # - image: ubuntu:20.04
      - image: cimg/node:14.21.3
    resource_class: large
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-beta-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Install HighestGoodNetworkApp's NodeJS dependencies
          command: npm install
      - run:
          name: Build the React client
          command: export REACT_APP_APIENDPOINT=$APIENDPOINT_BETA REACT_APP_DEF_PWD=$REACT_APP_DEF_PWD SKIP_PREFLIGHT_CHECK=true NODE_OPTIONS="$NODE_OPTIONS --max_old_space_size=4096" && npm run build --prod
      - run:
          name: Export error log if 'Build the React client' failed
          command: |
            mkdir -p /tmp/err_logs
            cp -r /home/circleci/.npm/_logs/* /tmp/err_logs
          when: on_fail
      - store_artifacts:
          path: /tmp/err_logs
      - run:
          name: Create ZIP archive of build directory
          command: zip -r build.zip build
      - run:
          name: Calculate SHA256 hash of build.zip and place output into build/hash.txt
          command: sha256sum build.zip > build/hash.txt
      - run:
          name: Create 200.html for (required for client-side routing support on Surge)
          command: cp build/index.html build/200.html
      - run:
          name: Deploy compiled app to surge.sh on $SURGE_DOMAIN_BETA
          command: ./node_modules/.bin/surge --domain $SURGE_DOMAIN_BETA --project ./build 
      - save_cache:
          key: v1-beta-dependencies-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules

workflows:
  version: 2
  build-deploy:
    jobs:
      - build_beta:
          filters:
            branches:
              only:
                - main

      - build_PROD:
          filters:
            branches:
              only: master

      - build_development:
          filters:
            branches:
              only:
                - development
