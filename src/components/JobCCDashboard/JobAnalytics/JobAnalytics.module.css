/* Root Page Container */
.page {
  min-height: 100vh;
  padding: 24px;
  background: var(--bg);
  color: var(--fg);
  transition: background-color .3s ease, color .3s ease;
}

/* Light Theme Defaults */
:root {
  --bg: #f9fafb;
  --fg: #111827;
  --muted: #6b7280;
  --card: #ffffff;
  --card-border: #e5e7eb;
  --shadow: 0 1px 3px rgba(0,0,0,.08), 0 1px 2px rgba(0,0,0,.05);
  --primary: #3b82f6;
  --success: #10b981;
  --warning: #f59e0b;
  --danger: #ef4444;
  --purple: #8b5cf6;
  --gray: #94a3b8;
  --grid-stroke: #e5e7eb;
}

/* Dark Theme Support */
[data-theme="dark"] {
  --bg: #111827;
  --fg: #f9fafb;
  --muted: #9ca3af;
  --card: #1f2937;
  --card-border: #374151;
  --shadow: 0 1px 3px rgba(0,0,0,.4), 0 1px 2px rgba(0,0,0,.2);
  --primary: #60a5fa;
  --success: #34d399;
  --warning: #fbbf24;
  --danger: #f87171;
  --purple: #a78bfa;
  --gray: #cbd5e1;
  --grid-stroke: #374151;
}

/* Page Header */
.header {
  max-width: 1600px;
  margin: 0 auto 24px;
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.title {
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: -.02em;
  margin: 0;
}

/* Buttons / Inputs */
.btn {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 10px 16px;
  border-radius: 8px;
  font-size: .875rem;
  font-weight: 600;
  border: 1px solid transparent;
  cursor: pointer;
  transition: all .2s ease;
}
.btn:disabled { opacity: .5; cursor: not-allowed; }
.btnPrimary {
  background: var(--primary);
  color: #fff;
  box-shadow: 0 6px 14px rgba(59,130,246,.25);
}
.btnPrimary:hover:not(:disabled) { transform: translateY(-1px); }
.btnGhost {
  background: var(--card);
  color: var(--fg);
  border: 1px solid var(--card-border);
}
.btnGhost:hover:not(:disabled) {
  box-shadow: 0 6px 14px rgba(0,0,0,.08);
  transform: translateY(-1px);
}
.btnLink {
  color: var(--danger);
  border: none;
  background: none;
  padding: 0;
}

.input {
  width: 100%;
  padding: 10px 14px;
  border-radius: 8px;
  background: var(--card);
  color: var(--fg);
  font-size: .875rem;
  border: 1px solid var(--card-border);
}
.input:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px rgba(59,130,246,.2);
}

/******** Loading UI ********/
.loading {
  min-height: 240px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}
.spinner {
  width: 40px;
  height: 40px;
  border: 4px solid #eee;
  border-top-color: var(--primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 12px;
}
@keyframes spin { to { transform: rotate(360deg); } }
.loadingText { color: var(--muted); }

/******** Error UI ********/
.errorBox {
  background: #fef2f2;
  border: 1px solid #fecaca;
  padding: 16px;
  border-radius: 12px;
  margin: 16px 0;
  color: #991b1b;
}
[data-theme="dark"] .errorBox {
  background: #7f1d1d;
  border-color: #991b1b;
  color: #fee2e2;
}
.errorText { margin: 0 0 8px; }

/******** Access Denied ********/
.accessWrapper {
  min-height: 60vh;
  display: grid;
  place-items: center;
}
.accessCard {
  background: var(--card);
  border: 1px solid var(--card-border);
  box-shadow: var(--shadow);
  padding: 32px;
  border-radius: 12px;
  max-width: 500px;
  text-align: center;
}
.accessIcon {
  width: 64px;
  height: 64px;
  margin-bottom: 16px;
  color: var(--danger);
}

/******** Filters UI ********/
.selectorCard {
  background: var(--card);
  border: 1px solid var(--card-border);
  border-radius: 12px;
  padding: 16px;
  box-shadow: var(--shadow);
  margin-bottom: 24px;
}
.selectorRow {
  display: flex;
  flex-wrap: wrap;
  gap: 16px;
  align-items: flex-end;
}
.selectorCol { flex: 1 1 320px; min-width: 260px; }
.selectorColNarrow { min-width: 200px; }
.label {
  font-size: .875rem;
  font-weight: 600;
  margin-bottom: 8px;
  color: var(--muted);
}
.quickRow {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
}
.datesRow {
  display: flex;
  align-items: center;
  gap: 8px;
}
.to { color: var(--muted); }

/******** Metrics ********/
.metricsGrid {
  display: grid;
  gap: 24px;
  grid-template-columns: repeat(auto-fit, minmax(250px,1fr));
  margin-bottom: 24px;
}
.metricCard {
  background: var(--card);
  border: 1px solid var(--card-border);
  border-radius: 12px;
  padding: 20px;
  box-shadow: var(--shadow);
  transition: transform .15s ease;
}
.metricCard:hover { transform: translateY(-3px); }
.metricTop {
  display: flex;
  align-items: center;
  justify-content: space-between;
  margin-bottom: 8px;
}
.metricIconWrap {
  background: rgba(0,0,0,.05);
  padding: 10px;
  border-radius: 10px;
}
[data-theme="dark"] .metricIconWrap {
  background: rgba(255,255,255,.06);
}
.metricIcon { color: var(--muted); }
.change { font-weight: 600; display: flex; gap: 4px; }
.positive { color: var(--success); }
.negative { color: var(--danger); }
.metricValue {
  font-size: 2rem;
  font-weight: 700;
}
.metricTitle {
  color: var(--muted);
  font-size: .9rem;
}

/******** Charts Grid ********/
.chartsGrid {
  width: 100%;
  display: grid;
  gap: 24px;
}

/* Mobile */
.chartsGrid[data-mobile="1"] {
  grid-template-columns: 1fr;
}

/* Tablet */
@media (min-width: 641px) and (max-width: 1199px) {
  .chartsGrid {
    grid-template-columns: repeat(2, 1fr);
  }
}

/* Desktop + Large Screens */
@media (min-width: 1200px) {
  .chartsGrid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-auto-flow: dense;
    gap: 24px;
  }
}

/* Individual Chart Card */
.chartCard {
  background: var(--card);
  border: 1px solid var(--card-border);
  border-radius: 12px;
  padding: 22px;
  box-shadow: var(--shadow);
  transition: transform .15s ease;
}
.chartCard:hover { transform: translateY(-3px); }

.chartHeader {
  display: flex;
  align-items: center;
  gap: 12px;
  margin-bottom: 16px;
}
.chartIconWrap {
  background: rgba(0,0,0,.05);
  padding: 8px;
  border-radius: 10px;
}
[data-theme="dark"] .chartIconWrap {
  background: rgba(255,255,255,.06);
}
.chartIcon { color: var(--muted); }
.chartTitle {
  margin: 0;
  font-weight: 700;
}
.chartBody { margin: 0 -4px; }

/* Last chart full row width */
.fullWidth {
  grid-column: 1 / -1 !important;
}

/******** Charts Grid Stroke ********/
.gridStroke line {
  stroke: var(--grid-stroke) !important;
}
