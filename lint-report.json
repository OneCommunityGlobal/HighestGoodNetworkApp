[{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/config-overrides.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/eslint.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/jest.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/postinstall.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/refactor-css-classes.js","messages":[],"suppressedMessages":[{"ruleId":"import/no-extraneous-dependencies","severity":2,"message":"'postcss' should be listed in the project's dependencies. Run 'npm i -S postcss' to add it","line":6,"column":17,"nodeType":"CallExpression","endLine":6,"endColumn":35,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":36,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":36,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1199,1241],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""},{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":55,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":55,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1920,1969],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":59,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":59,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[2049,2081],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":62,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":62,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[2131,2199],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":83,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":83,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[2910,2956],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":85,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":85,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[2972,3023],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":115,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":115,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3877,3922],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":121,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":121,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4062,4109],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/setupTests.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/__tests__/CountdownTimer.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"react/no-deprecated","severity":2,"message":"ReactDOM.unmountComponentAtNode is deprecated since React 18.0.0, use root.unmount instead, see https://reactjs.org/link/switch-to-createroot","line":4,"column":10,"nodeType":"ImportSpecifier","messageId":"deprecated","endLine":4,"endColumn":32,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/__tests__/__mocks__/popper.js.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/__tests__/__mocks__/react-leaflet-cluster.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/__tests__/__mocks__/react-leaflet.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/__tests__/mockAdminState.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/__tests__/mockStates.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/__tests__/mockStates.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/__tests__/utils.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/allTeamsAction.js.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/allUsersTimeEntries.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/authActions.js.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/blueSquareEmailBCCAction.js.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/dashboardActions.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/followUpActions.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/index.js.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/leaderBoardDataAction.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/ownerMessageAction.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/popupEditorAction.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/projectActions.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/roleAction.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/taskActions.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/taskNotification.js.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/teams.js.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/timeEntries.js.test.js","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":32,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":32,"endColumn":18,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/titleAction.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/updatePasswordActions.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/userManagement.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/userProfileActions.test.js","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":49,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":49,"endColumn":16,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/wbsActions.test.js","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":25,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":25,"endColumn":16,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/weeklySummariesAIPrompt.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/weeklySummariesAction.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/weeklySummariesReportActions.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/__tests__/weeklySummariesReportRecepients.js.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/allTeamsAction.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/allUsersTimeEntries.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/authActions.js","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":131,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":131,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3792,3859],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":135,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":135,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[3941,4018],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/badgeManagement.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/blueSquareEmailBCCAction.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/bmdashboard/consumableActions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/bmdashboard/equipmentActions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/bmdashboard/invTypeActions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/bmdashboard/invUnitActions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/bmdashboard/issueActions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/bmdashboard/issueChartActions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/bmdashboard/lessonActions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/bmdashboard/lessonLikesActions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/bmdashboard/lessonsAction.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/bmdashboard/materialsActions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/bmdashboard/projectActions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/bmdashboard/projectByIdAction.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/bmdashboard/projectMemberAction.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/bmdashboard/rentalChartActions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/bmdashboard/reusableActions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/bmdashboard/timeLoggerActions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/bmdashboard/toolActions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/bmdashboard/weeklyProjectSummaryActions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/communityPortal/NoShowVizActions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/dashboardActions.js","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":16,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":16,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[512,540],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/errorsActions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/followUpActions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/formActions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/hgnFormAction.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/information.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/lbdashboard/messagingActions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/lbdashboard/userPreferenceActions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/leaderBoardData.js","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":41,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":41,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1256,1312],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/mouseoverTextAction.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/notificationAction.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/ownerMessageAction.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/popupEditorAction.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/project.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/projectMembers.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/projects.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/reasonsActions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/role.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/rolePermissionPresets.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/sendEmails.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/task.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/taskNotification.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/team.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/teamCodes.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/timeEntries.js","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":119,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":119,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[3703,3755],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/timeOffRequestAction.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/title.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/totalOrgSummary.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/updatePassword.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/userManagement.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/userProfile.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/userProjects.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/warnings.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/wbs.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/weeklySummaries.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/weeklySummariesAIPrompt.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/weeklySummariesReport.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/weeklySummariesReportRecepients.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/actions/weeklySummaryEmailBCCAction.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Announcements/tinyMCE.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":12,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":12,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[412,456],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/App.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/ApplicantsChart/AgeChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/ApplicantsChart/ApplicantsAgeChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/ApplicantsChart/TimeFilter.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/ApplicantsChart/api.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/ApplicantsChart/data.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/ApplicantsChart/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/ApplicationAnalytics/api.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/ApplicationAnalytics/data.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/ApplicationAnalytics/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/ApplicationAnalytics/jobAnalytics.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/ApplicationTimeChart/ApplicationTimeChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/ApplicationTimeChart/api.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/ApplicationTimeChart/data.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/ApplicationTimeChart/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/AttendanceStats/AttendanceDashboard.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/AttendanceSystem/AttendanceNoShowCharts.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Auth/PermissionWatcher.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":23,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":23,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1037,1125],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":34,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":34,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1495,1539],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":56,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":56,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2074,2127],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":61,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":61,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2247,2311],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/AutoReload/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/AutoUpdate/AutoUpdate.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":30,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":30,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[748,767],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":46,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":46,"endColumn":26,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1183,1202],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/AutoUpdate/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/AddConsumable/AddConsumable.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/AddConsumable/__tests__/AddConsumable.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/AddMaterial/AddMaterial.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/AddMaterial/SimilarityCheck.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/AddTeamMember/AddTeamMember.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":132,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":132,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4017,4060],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/BMDashboard.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/BMHeader/BMHeader.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/BMHeader/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/BMTimeLogger/BMTimeLogCard.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/BMTimeLogger/BMTimeLogDisplayMember.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/BMTimeLogger/BMTimeLogStopWatch.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/BMTimeLogger/BMTimeLogger.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/ConsumableList/ConsumableListView.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/ConsumableList/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/ConsumablePurchaseRequest/PurchaseConsumable.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/ConsumablePurchaseRequest/PurchaseForm.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/ConsumablePurchaseRequest/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Equipment/Add/AddEquipmentType.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Equipment/Add/AddTypeForm.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Equipment/DailyActivityLog/EDailyActivityLog.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Equipment/Detail/EquipmentDetail.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Equipment/EquipmentModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Equipment/List/EquipmentList.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Equipment/List/EquipmentListModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Equipment/List/EquipmentsInputs.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Equipment/List/EquipmentsTable.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Equipment/List/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Equipment/Update/UpdateEquipment.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/EquipmentPurchaseRequest/PurchaseEquipment.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/EquipmentPurchaseRequest/PurchaseForm.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/EquipmentPurchaseRequest/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/ErrorAlert.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/InventoryTypesList/AccordionToggle.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/InventoryTypesList/InventoryTypesList.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/InventoryTypesList/TypeRow.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/InventoryTypesList/TypesTable.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/InventoryTypesList/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/InventoryTypesList/invUnitsTable.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Issue/Issue.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Issue/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Issues/IssueDashboard.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Issues/IssueHeader.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Issues/issueCharts.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Issues/openIssueCharts.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/ItemList/ItemListView.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/ItemList/ItemsTable.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/ItemList/RecordsModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/ItemList/SelectForm.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/ItemList/SelectItem.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Lesson/LessonForm.jsx","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":153,"column":17,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/LessonList/ConfirmationModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/LessonList/DeleteLessonCardPopUp.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/LessonList/LessonCard.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/LessonList/LessonListForm.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/LessonList/Lessons.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/LessonsLearnt/LessonsLearntChart.jsx","messages":[],"suppressedMessages":[{"ruleId":"prettier/prettier","severity":2,"message":"Replace `⏎··Chart·as·ChartJS,⏎··BarElement,⏎··CategoryScale,⏎··LinearScale,⏎··Tooltip,⏎··Title⏎` with `·Chart·as·ChartJS,·BarElement,·CategoryScale,·LinearScale,·Tooltip,·Title·`","line":6,"column":9,"nodeType":null,"messageId":"replace","endLine":13,"endColumn":1,"fix":{"range":[136,222],"text":" Chart as ChartJS, BarElement, CategoryScale, LinearScale, Tooltip, Title "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Delete `⏎`","line":19,"column":35,"nodeType":null,"messageId":"delete","endLine":20,"endColumn":1,"fix":{"range":[434,435],"text":""},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Delete `;`","line":65,"column":2,"nodeType":null,"messageId":"delete","endLine":65,"endColumn":3,"fix":{"range":[1719,1720],"text":""},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must be associated with a control.","line":79,"column":9,"nodeType":"JSXOpeningElement","endLine":79,"endColumn":16,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must be associated with a control.","line":88,"column":9,"nodeType":"JSXOpeningElement","endLine":88,"endColumn":16,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must be associated with a control.","line":99,"column":9,"nodeType":"JSXOpeningElement","endLine":99,"endColumn":16,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `(item)` with `item`","line":116,"column":18,"nodeType":null,"messageId":"replace","endLine":116,"endColumn":24,"fix":{"range":[2874,2880],"text":"item"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":178,"column":12,"nodeType":null,"messageId":"insert","endLine":178,"endColumn":12,"fix":{"range":[4491,4491],"text":","},"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/LogTools/LogTools.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Login/BMLogin.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Login/__tests__/BMLogin.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-unnecessary-act","severity":2,"message":"Avoid wrapping Testing Library util calls in `act`","line":149,"column":11,"nodeType":"Identifier","messageId":"noUnnecessaryActTestingLibraryUtil","endLine":149,"endColumn":14,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Login/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/MaterialList/MaterialListView.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/MaterialList/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Projects/ProjectDetails/LogBar.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Projects/ProjectDetails/Materials/MaterialCard.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Projects/ProjectDetails/Materials/Materials.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Projects/ProjectDetails/Materials/MaterialsDisplay.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Projects/ProjectDetails/ProjectDetails.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Projects/ProjectDetails/ProjectLog.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Projects/ProjectDetails/RentedTools/RentedToolsDisplay.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Projects/ProjectDetails/RentedTools/ToolCard.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Projects/ProjectDetails/RentedTools/ToolCards.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Projects/ProjectSelectForm.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Projects/ProjectSummary.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Projects/ProjectsList.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/PurchaseRequests/MaterialPurchaseRequest/MaterialPurchaseForm.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/PurchaseRequests/MaterialPurchaseRequest/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/PurchaseRequests/PurchaseForm.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/PurchaseRequests/ReusablePurchaseRequest/ReusablePurchaseForm.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/PurchaseRequests/ReusablePurchaseRequest/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/RentalChart/RentalChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/ReusableList/ReusableListView.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/ReusableList/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Team/CreateNewTeam/CreateNewTeam.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":119,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":119,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3681,3729],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/ToolItemList/ToolItemListView.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/ToolItemList/ToolItemsTable.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/ToolItemList/ToolRecordsModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/ToolPurchaseRequest/PurchaseForm.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/ToolPurchaseRequest/PurchaseTool.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/ToolPurchaseRequest/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Tools/AddTool.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Tools/AddToolForm.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Tools/EquipmentUpdate.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Tools/EquipmentUpdateForm.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Tools/ToolDetailPage.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Tools/ToolModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/Tools/ToolsList.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/UpdateConsumables/UpdateConsumable.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/UpdateConsumables/UpdateConsumableModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/UpdateMaterials/UpdateMaterial.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/UpdateMaterials/UpdateMaterialModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/UpdateMaterials/UpdateMaterialsBulk/UpdateMaterialsBulk.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/UpdateMaterials/UpdateMaterialsBulk/UpdateMaterialsBulkInputs.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/UpdateMaterials/UpdateMaterialsBulk/UpdateMaterialsBulkTable.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/UpdateReusables/UpdateReusable.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/UpdateReusables/UpdateReusableModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/UpdateReusables/UpdateReusablesBulk/UpdateReusablesBulk.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/UpdateReusables/UpdateReusablesBulk/UpdateReusablesBulkInputs.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/UpdateReusables/UpdateReusablesBulk/UpdateReusablesBulkTable.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/UpdateTools/UpdateToolModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/UtilizationChart/UtilizationChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/WeeklyProjectSummary/ActualVsPlannedCost/ActualVsPlannedCost.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/WeeklyProjectSummary/Financials/ExpenseBarChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/WeeklyProjectSummary/PaidLaborCost/PaidLaborCost.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/WeeklyProjectSummary/PaidLaborCost/PaidLaborCostDatePicker.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/WeeklyProjectSummary/QuantityOfMaterialsUsed/QuantityOfMaterialsUsed.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/WeeklyProjectSummary/TotalMaterialCostPerProject/TotalMaterialCostPerProject.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/WeeklyProjectSummary/TotalMaterialCostPerProject/__tests__/TotalMaterialCostPerProject.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-debugging-utils","severity":1,"message":"Unexpected debug statement","line":91,"column":12,"nodeType":"Identifier","messageId":"noDebug","endLine":91,"endColumn":17,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":93,"column":30,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":93,"column":30,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":118,"column":41,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":124,"column":41,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":125,"column":34,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":126,"column":30,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/WeeklyProjectSummary/WeeklyProjectSummary.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":440,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":440,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[13522,13567],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/WeeklyProjectSummary/WeeklyProjectSummaryHeader.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/_tests_/AddMaterial.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/_tests_/AddTeamMember.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/shared/BMError.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/shared/CheckTypes.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/BMDashboard/shared/CheckTypesModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Collaboration/Collaboration.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Collaboration/JobFormbuilder.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":91,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":91,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3808,3849],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":94,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":94,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[3892,3941],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":129,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":129,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[4796,4854],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":154,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":154,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[5582,5644],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":170,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":170,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6016,6061],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":172,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":172,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[6094,6153],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":211,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":211,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[7303,7348],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":213,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":213,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[7381,7440],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":236,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":236,"endColumn":39,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":248,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":248,"endColumn":40,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":256,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":256,"endColumn":64,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":272,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":272,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[8808,8865],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":302,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":302,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[9669,9710],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":303,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":303,"endColumn":40,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":305,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":305,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[9780,9825],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":306,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":306,"endColumn":54,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Collaboration/QuestionEditModal.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":16,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":16,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[419,480],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":91,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":91,"endColumn":42,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":99,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":99,"endColumn":63,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Collaboration/QuestionFieldActions.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Collaboration/QuestionSetManager.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":62,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":62,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2035,2084],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":72,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":72,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2422,2483],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":84,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":84,"endColumn":44,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":89,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":89,"endColumn":85,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected confirm.","line":100,"column":34,"nodeType":"CallExpression","messageId":"unexpected","endLine":102,"endColumn":10,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":127,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":127,"endColumn":66,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":148,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":148,"endColumn":66,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":153,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":153,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[5041,5088],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":177,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":177,"endColumn":59,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":179,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":179,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[5992,6052],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":180,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":180,"endColumn":60,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":190,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":190,"endColumn":48,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected confirm.","line":203,"column":31,"nodeType":"CallExpression","messageId":"unexpected","endLine":203,"endColumn":95,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":220,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":220,"endColumn":69,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":223,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":223,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[7300,7347],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":225,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":225,"endColumn":58,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":234,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":234,"endColumn":50,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":255,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":255,"endColumn":71,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":258,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":258,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[8421,8470],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":260,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":260,"endColumn":60,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":269,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":269,"endColumn":50,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected confirm.","line":273,"column":27,"nodeType":"CallExpression","messageId":"unexpected","endLine":275,"endColumn":6,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":297,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":297,"endColumn":70,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":300,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":300,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[9725,9774],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":308,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":308,"endColumn":57,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Collaboration/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Activities/ActivitiesPage.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Activities/ActivityAgenda.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Activities/ActivityAttendance.jsx","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":56,"column":8,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Activities/ActivityDetailPage.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Activities/ActivityList.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Activities/ActivityModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Activities/AddActivities.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Activities/AddActivityForm.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Activities/LatestRegistration.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Activities/MyEvent.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Activities/Register/EventDescription.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Activities/Register/Register.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Activities/RegistrationForm.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Activities/ResourceMonitoring.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Activities/activityId/Activity.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Activities/activityId/CommentSection/CommentSection.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Activities/activityId/Resources.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Attendence/NoshowViz.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/CPDashboard.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/CPHeader/CPHeader.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/ErrorAlert.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/EventPersonalization/EventStats.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Login/CPLogin.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Login/__tests__/CPLogin.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Login/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Reports/Participation/DropOffTracking.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Reports/Participation/EventParticipation.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Reports/Participation/MyCases.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Reports/Participation/NoShowInsights.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/Reports/Participation/mockData.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/ResourceUsage/ResourceUsage.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/CommunityPortal/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/EductionPortal/EPDashboard.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/EductionPortal/ErrorAlert.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/EductionPortal/Login/EPLogin.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/EductionPortal/Login/__tests__/EPLogin.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/EductionPortal/Login/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/EductionPortal/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/EmailSubscribeForm/ConfirmationMessage.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/EmailSubscribeForm/SubscribePage.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/EmailSubscribeForm/Unsubscribe/ConfirmationMessage.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/EmailSubscribeForm/Unsubscribe/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/EmailSubscribeForm/UnsubscribeForm.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/EmailSubscribeForm/UnsubscribePage.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/EmailSubscribeForm/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/EventPopularity/EventPopularity.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/EventRegistration/TestEventRegistration.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/ExperienceDonutChart/ExperienceDonutChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/ExperienceDonutChart/index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Faq/FaqHistory.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":21,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":21,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[635,687],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Faq/FaqManagement.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":29,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":29,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[978,1023],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":54,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":54,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1585,1627],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":61,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":61,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1771,1817],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":77,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":77,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2218,2262],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":90,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":90,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2600,2644],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Faq/FaqSearch.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":31,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":31,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1024,1069],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":49,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":49,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1434,1490],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":78,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":78,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2178,2237],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Faq/UnansweredFaqs.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":18,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":18,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[583,639],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":38,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":38,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1101,1156],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Faq/api.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/FeedbackModal/FeedbackModal.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":54,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":54,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1870,1921],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":88,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":88,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2999,3038],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":122,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":122,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[4061,4112],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":131,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":131,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[4309,4348],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":152,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":152,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[4892,4952],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/FeedbackModal/MemberSearchBar.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":43,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":43,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1424,1471],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/FeedbackModal/StarRating.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/FeedbackModal/index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Footer/NetlifyPoweredLink.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/ForcePasswordUpdate/ForcePasswordUpdate.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/ForcePasswordUpdate/__tests__/ForcePasswordUpdate.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"import/named","severity":2,"message":"rest not found in 'msw'","line":16,"column":10,"nodeType":"Identifier","endLine":16,"endColumn":14,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/ForcePasswordUpdate/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Forms/Components/OptionMaker.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Forms/Components/OptionViewer.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Forms/Components/QuestionMaker.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Forms/Components/QuestionViewer.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Forms/Components/RichTextEditor.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Forms/FormEditor.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Forms/FormViewer.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":39,"column":5,"nodeType":"CallExpression","messageId":"unexpected","endLine":39,"endColumn":50,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNForm/pages/Page1.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNForm/pages/Page2.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNForm/pages/Page3.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNForm/pages/Page4.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNForm/pages/Page5.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNForm/pages/Page6.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNForm/questionpages/BackendQuestions.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNForm/questionpages/Banner.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNForm/questionpages/FollowupQuestions.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNForm/questionpages/FrontendQuestions.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNForm/questionpages/GeneralQuestions.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNForm/questionpages/InfoForm.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNForm/questionpages/Progress.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNForm/questionpages/QuestionnaireHeader.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNForm/questionpages/QuestionnaireInfo.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNForm/questionpages/ThankYou.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNHelpSkillsDashboard/CommunityMembersPage.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNHelpSkillsDashboard/FeedbackModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNHelpSkillsDashboard/LandingPage.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNHelpSkillsDashboard/RankedUserList.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNHelpSkillsDashboard/SkillsOverviewPage.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNHelpSkillsDashboard/UserCard.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNHelpSkillsDashboard/UserProfilePage.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":400,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":400,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[10725,10775],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNPRDashboard/DurationFilter.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNPRDashboard/PRData.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNPRDashboard/PRReviewTeamAnalytics.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNPRDashboard/ThemeContext.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNSkillsDashboard/SkillsProfilePage/components/BackendSkills.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNSkillsDashboard/SkillsProfilePage/components/DeploymentSkills.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNSkillsDashboard/SkillsProfilePage/components/FrontendSkills.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNSkillsDashboard/SkillsProfilePage/components/LeftSection.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNSkillsDashboard/SkillsProfilePage/components/ProfileDetails.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNSkillsDashboard/SkillsProfilePage/components/RadarChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNSkillsDashboard/SkillsProfilePage/components/RightSection.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNSkillsDashboard/SkillsProfilePage/components/Skills.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNSkillsDashboard/SkillsProfilePage/components/SoftwarePractices.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/HGNSkillsDashboard/SkillsProfilePage/components/UserSkillsProfile.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Header/BellNotification.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Header/DarkModeButton.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Header/Header.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":281,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":281,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[10340,10385],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Header/HeaderRenderer.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Header/__tests__/Header.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Header/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Inventory/Inventory.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Inventory/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/JobCCDashboard/JobCCDashboard.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/JobCCDashboard/JobCCModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/JobCCDashboard/JobCategoryCCModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LBDashboard/BiddingHomepage/BiddingHomepage.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LBDashboard/BiddingOverview/BiddingOverview.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LBDashboard/Components/ImageCarousel.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LBDashboard/ErrorAlert.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LBDashboard/Header.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LBDashboard/Home/Home.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":83,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":83,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2970,3019],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":132,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":132,"endColumn":26,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[4572,4618],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":152,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":152,"endColumn":26,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[5177,5223],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":322,"column":11,"nodeType":"JSXOpeningElement","endLine":326,"endColumn":12,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":322,"column":11,"nodeType":"JSXOpeningElement","endLine":326,"endColumn":12,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":333,"column":13,"nodeType":"JSXOpeningElement","endLine":337,"endColumn":14,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":333,"column":13,"nodeType":"JSXOpeningElement","endLine":337,"endColumn":14,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":393,"column":15,"nodeType":"JSXOpeningElement","endLine":397,"endColumn":16,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":393,"column":15,"nodeType":"JSXOpeningElement","endLine":397,"endColumn":16,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":465,"column":9,"nodeType":"JSXOpeningElement","endLine":465,"endColumn":94,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":465,"column":9,"nodeType":"JSXOpeningElement","endLine":465,"endColumn":94,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":466,"column":11,"nodeType":"JSXOpeningElement","endLine":466,"endColumn":97,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":466,"column":11,"nodeType":"JSXOpeningElement","endLine":466,"endColumn":97,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must be associated with a control.","line":479,"column":19,"nodeType":"JSXOpeningElement","endLine":479,"endColumn":26,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must be associated with a control.","line":487,"column":19,"nodeType":"JSXOpeningElement","endLine":487,"endColumn":26,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":530,"column":9,"nodeType":"JSXOpeningElement","endLine":530,"endColumn":95,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":530,"column":9,"nodeType":"JSXOpeningElement","endLine":530,"endColumn":95,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":531,"column":11,"nodeType":"JSXOpeningElement","endLine":531,"endColumn":94,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":531,"column":11,"nodeType":"JSXOpeningElement","endLine":531,"endColumn":94,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":606,"column":21,"nodeType":"JSXOpeningElement","endLine":612,"endColumn":22,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":606,"column":21,"nodeType":"JSXOpeningElement","endLine":612,"endColumn":22,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":656,"column":9,"nodeType":"JSXOpeningElement","endLine":656,"endColumn":97,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":656,"column":9,"nodeType":"JSXOpeningElement","endLine":656,"endColumn":97,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":657,"column":11,"nodeType":"JSXOpeningElement","endLine":657,"endColumn":95,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":657,"column":11,"nodeType":"JSXOpeningElement","endLine":657,"endColumn":95,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":690,"column":9,"nodeType":"JSXOpeningElement","endLine":690,"endColumn":99,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":690,"column":9,"nodeType":"JSXOpeningElement","endLine":690,"endColumn":99,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":691,"column":11,"nodeType":"JSXOpeningElement","endLine":691,"endColumn":98,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":691,"column":11,"nodeType":"JSXOpeningElement","endLine":691,"endColumn":98,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LBDashboard/Home/data.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LBDashboard/LBDashboard.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LBDashboard/LBProtectedRoute/LBProtectedRoute.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LBDashboard/ListingOverview/ListOverview.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LBDashboard/Login/LBLogin.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LBDashboard/Login/__tests__/LBLogin.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LBDashboard/Login/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LBDashboard/Map/MasterPlan/MasterPlan.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LBDashboard/Messaging/LBMessaging.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LBDashboard/Register/LBRegister.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LBDashboard/WishList/ItemOverview.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LBDashboard/WishList/WishList.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LBDashboard/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LandingPage/HelpModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LandingPage/HelpPage.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LeaderBoard/LeaderBoard.container.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LeaderBoard/Leaderboard.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LeaderBoard/__tests__/Leaderboard.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/LeaderBoard/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/ListingForm/ListingForm.jsx","messages":[],"suppressedMessages":[{"ruleId":"prettier/prettier","severity":2,"message":"Delete `··`","line":37,"column":1,"nodeType":null,"messageId":"delete","endLine":37,"endColumn":3,"fix":{"range":[988,990],"text":""},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `·...prev,·propertyImages:·'Some·files·exceed·5MB·and·were·not·uploaded.'` with `⏎········...prev,⏎········propertyImages:·'Some·files·exceed·5MB·and·were·not·uploaded.',⏎·····`","line":40,"column":27,"nodeType":null,"messageId":"replace","endLine":40,"endColumn":99,"fix":{"range":[1112,1184],"text":"\n        ...prev,\n        propertyImages: 'Some files exceed 5MB and were not uploaded.',\n     "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":58,"column":64,"nodeType":null,"messageId":"insert","endLine":58,"endColumn":64,"fix":{"range":[1770,1770],"text":","},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `·className=\"card·shadow-lg·p-4·w-100\"·style={{·maxWidth:·\"600px\",·backgroundColor:·\"#f0f0f0\"·}}` with `⏎········className=\"card·shadow-lg·p-4·w-100\"⏎········style={{·maxWidth:·'600px',·backgroundColor:·'#f0f0f0'·}}⏎······`","line":93,"column":11,"nodeType":null,"messageId":"replace","endLine":93,"endColumn":106,"fix":{"range":[2697,2792],"text":"\n        className=\"card shadow-lg p-4 w-100\"\n        style={{ maxWidth: '600px', backgroundColor: '#f0f0f0' }}\n      "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `\"is-invalid\"·:·\"\"` with `'is-invalid'·:·''`","line":115,"column":59,"nodeType":null,"messageId":"replace","endLine":115,"endColumn":76,"fix":{"range":[3906,3923],"text":"'is-invalid' : ''"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must be associated with a control.","line":124,"column":13,"nodeType":"JSXOpeningElement","endLine":124,"endColumn":51,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `\"is-invalid\"·:·\"\"` with `'is-invalid'·:·''`","line":130,"column":65,"nodeType":null,"messageId":"replace","endLine":130,"endColumn":82,"fix":{"range":[4435,4452],"text":"'is-invalid' : ''"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `(e)` with `e`","line":139,"column":25,"nodeType":null,"messageId":"replace","endLine":139,"endColumn":28,"fix":{"range":[4734,4737],"text":"e"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must be associated with a control.","line":142,"column":13,"nodeType":"JSXOpeningElement","endLine":142,"endColumn":51,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `Drag·&·Drop·or·Select·Images·(Max:·5MB,·PNG/JPEG)` with `⏎··············Drag·&·Drop·or·Select·Images·(Max:·5MB,·PNG/JPEG)⏎············`","line":142,"column":51,"nodeType":null,"messageId":"replace","endLine":142,"endColumn":100,"fix":{"range":[4855,4904],"text":"\n              Drag & Drop or Select Images (Max: 5MB, PNG/JPEG)\n            "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":153,"column":1,"nodeType":null,"messageId":"insert","endLine":153,"endColumn":1,"fix":{"range":[5289,5289],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":173,"column":13,"nodeType":null,"messageId":"insert","endLine":173,"endColumn":13,"fix":{"range":[6020,6020],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":174,"column":1,"nodeType":null,"messageId":"insert","endLine":174,"endColumn":1,"fix":{"range":[6022,6022],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `·`","line":175,"column":14,"nodeType":null,"messageId":"insert","endLine":175,"endColumn":14,"fix":{"range":[6051,6051],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `·`","line":176,"column":1,"nodeType":null,"messageId":"insert","endLine":176,"endColumn":1,"fix":{"range":[6061,6061],"text":" "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":181,"column":13,"nodeType":null,"messageId":"insert","endLine":181,"endColumn":13,"fix":{"range":[6321,6321],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":182,"column":1,"nodeType":null,"messageId":"insert","endLine":182,"endColumn":1,"fix":{"range":[6323,6323],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":183,"column":13,"nodeType":null,"messageId":"insert","endLine":183,"endColumn":13,"fix":{"range":[6351,6351],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":184,"column":1,"nodeType":null,"messageId":"insert","endLine":184,"endColumn":1,"fix":{"range":[6361,6361],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":185,"column":11,"nodeType":null,"messageId":"insert","endLine":185,"endColumn":11,"fix":{"range":[6388,6388],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":186,"column":1,"nodeType":null,"messageId":"insert","endLine":186,"endColumn":1,"fix":{"range":[6396,6396],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":187,"column":1,"nodeType":null,"messageId":"insert","endLine":187,"endColumn":1,"fix":{"range":[6422,6422],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":188,"column":13,"nodeType":null,"messageId":"insert","endLine":188,"endColumn":13,"fix":{"range":[6531,6531],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `··········` with `············`","line":189,"column":1,"nodeType":null,"messageId":"replace","endLine":189,"endColumn":11,"fix":{"range":[6566,6576],"text":"            "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `··`","line":190,"column":1,"nodeType":null,"messageId":"insert","endLine":190,"endColumn":1,"fix":{"range":[6578,6578],"text":"  "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `··········` with `············`","line":191,"column":1,"nodeType":null,"messageId":"replace","endLine":191,"endColumn":11,"fix":{"range":[6592,6602],"text":"            "},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `</div>⏎` with `··</div>`","line":192,"column":9,"nodeType":null,"messageId":"replace","endLine":193,"endColumn":1,"fix":{"range":[6620,6627],"text":"  </div>"},"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/ListingForm/index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Login/ForgotPassword.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Login/ForgotPassword.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Login/Login.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Login/LoginPage.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"import/named","severity":2,"message":"rest not found in 'msw'","line":5,"column":10,"nodeType":"Identifier","endLine":5,"endColumn":14,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":163,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":163,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[4685,4797],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Login/__tests__/Login.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Login/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Logout/Logout.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Logout/__tests__/Logout.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"import/named","severity":2,"message":"rest not found in 'msw'","line":3,"column":10,"nodeType":"Identifier","endLine":3,"endColumn":14,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":59,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":59,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1737,1849],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Logout/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/MonthlyEffort/MonthlyEffort.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/MonthlyEffort/__tests__/MonthlyEffort.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/MonthlyEffort/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/MostSusceptible/toolBreakdownChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/MostWastedMaterials/MostWastedMaterials.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/NotFound/NotFoundPage.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Notification/__tests__/notification.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":44,"column":54,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":44,"column":54,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Notification/notificationCard.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/OwnerMessage/OwnerMessage.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/OwnerMessage/__tests__/OwnerMessage.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/PermissionsManagement/NewRolePopUp.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/PermissionsManagement/PermissionChangeLogTable.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/PermissionsManagement/PermissionList.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/PermissionsManagement/PermissionListItem.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/PermissionsManagement/PermissionsConst.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/PermissionsManagement/PermissionsManagement.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/PermissionsManagement/PermissionsManagement.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-render-in-lifecycle","severity":2,"message":"Forbidden usage of `render` within testing framework `beforeEach` setup","line":40,"column":5,"nodeType":"Identifier","messageId":"noRenderInSetup","endLine":40,"endColumn":26,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/PermissionsManagement/PermissionsPresetsModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/PermissionsManagement/Preset.jsx","messages":[],"suppressedMessages":[{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":96,"column":11,"nodeType":"JSXOpeningElement","endLine":101,"endColumn":12,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/no-noninteractive-element-interactions","severity":2,"message":"Non-interactive elements should not be assigned mouse or keyboard event listeners.","line":96,"column":11,"nodeType":"JSXOpeningElement","endLine":101,"endColumn":12,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/PermissionsManagement/ReminderModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/PermissionsManagement/RolePermissions.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/PermissionsManagement/UserPermissionsPopUp.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":78,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":78,"endColumn":69,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":81,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":81,"endColumn":62,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/PermissionsManagement/UserRoleTab.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/PermissionsManagement/__tests__/NewRolePopUp.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/PermissionsManagement/__tests__/PermissionsManagement.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":149,"column":22,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":150,"column":22,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/PermissionsManagement/__tests__/RolePermissions.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-wait-for-multiple-assertions","severity":2,"message":"Avoid using multiple assertions within `waitFor` callback","line":248,"column":7,"nodeType":"ExpressionStatement","messageId":"noWaitForMultipleAssertion","endLine":248,"endColumn":57,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/PermissionsManagement/__tests__/UserPermissionsPopup.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/PermissionsManagement/__tests__/UserRoleTab.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/PopUpBar/PopUpBar.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/PopUpBar/__tests__/PopUpBar.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/PopUpBar/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/QuestionnaireDashboard/MemberList.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/BadgeSummaryPreview.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/BadgeSummaryViz.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/InfringementsViz.jsx","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":70,"column":10,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":125,"column":34,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":129,"column":16,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":146,"column":21,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":150,"column":21,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":185,"column":10,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":190,"column":14,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":195,"column":14,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":200,"column":14,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/LostTime/AddLostTime.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/LostTime/EditHistoryModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/LostTime/LostTimeHistory.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/PeopleReport/PeopleReport.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":178,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":178,"endColumn":94,"suppressions":[{"kind":"directive","justification":""},{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":464,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":464,"endColumn":97,"suppressions":[{"kind":"directive","justification":""},{"kind":"directive","justification":""}]},{"ruleId":"react/no-unknown-property","severity":2,"message":"Unknown property 'xs' found","line":488,"column":16,"nodeType":"JSXAttribute","messageId":"unknownProp","endLine":488,"endColumn":23,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-unknown-property","severity":2,"message":"Unknown property 'md' found","line":488,"column":24,"nodeType":"JSXAttribute","messageId":"unknownProp","endLine":488,"endColumn":30,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-unknown-property","severity":2,"message":"Unknown property 'lg' found","line":488,"column":31,"nodeType":"JSXAttribute","messageId":"unknownProp","endLine":488,"endColumn":37,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-unknown-property","severity":2,"message":"Unknown property 'xs' found","line":645,"column":86,"nodeType":"JSXAttribute","messageId":"unknownProp","endLine":645,"endColumn":93,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-unknown-property","severity":2,"message":"Unknown property 'md' found","line":645,"column":94,"nodeType":"JSXAttribute","messageId":"unknownProp","endLine":645,"endColumn":100,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-unknown-property","severity":2,"message":"Unknown property 'lg' found","line":645,"column":101,"nodeType":"JSXAttribute","messageId":"unknownProp","endLine":645,"endColumn":107,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/PeopleReport/components/PeopleTasksPieChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/PeopleReport/components/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/PeopleReport/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/PeopleReport/selectors.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/PeopleTable.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/PeopleTableDetails.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/ProjectMemberTable/ProjectMemberTable.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/ProjectMemberTable/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/ProjectReport/PiechartByProject/PieChartByProject.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/ProjectReport/ProjectPieChart/ProjectPieChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/ProjectReport/ProjectReport.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/ProjectReport/TriMembersStateToggleSwitch/TriMembersStateToggleSwitch.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/ProjectReport/WbsPiechart/WbsPieChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/ProjectReport/__tests__/ProjectReport.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/ProjectReport/actions.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/ProjectReport/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/ProjectReport/selectors.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/ProjectTable.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/ReportFilter/ReportFilter.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/ReportTableSearchPanel.jsx","messages":[],"suppressedMessages":[{"ruleId":"jsx-a11y/no-autofocus","severity":2,"message":"The autoFocus prop should not be used, as it can reduce usability and accessibility for users.","line":20,"column":9,"nodeType":"JSXAttribute","endLine":20,"endColumn":18,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/Reports.jsx","messages":[],"suppressedMessages":[{"ruleId":"react/no-direct-mutation-state","severity":2,"message":"Do not mutate state directly. Use setState().","line":467,"column":5,"nodeType":"MemberExpression","messageId":"noDirectMutation","endLine":467,"endColumn":15,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-direct-mutation-state","severity":2,"message":"Do not mutate state directly. Use setState().","line":468,"column":5,"nodeType":"MemberExpression","messageId":"noDirectMutation","endLine":468,"endColumn":15,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-direct-mutation-state","severity":2,"message":"Do not mutate state directly. Use setState().","line":469,"column":5,"nodeType":"MemberExpression","messageId":"noDirectMutation","endLine":469,"endColumn":15,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-direct-mutation-state","severity":2,"message":"Do not mutate state directly. Use setState().","line":471,"column":7,"nodeType":"MemberExpression","messageId":"noDirectMutation","endLine":471,"endColumn":17,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-direct-mutation-state","severity":2,"message":"Do not mutate state directly. Use setState().","line":472,"column":7,"nodeType":"MemberExpression","messageId":"noDirectMutation","endLine":472,"endColumn":17,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-direct-mutation-state","severity":2,"message":"Do not mutate state directly. Use setState().","line":473,"column":7,"nodeType":"MemberExpression","messageId":"noDirectMutation","endLine":473,"endColumn":17,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-direct-mutation-state","severity":2,"message":"Do not mutate state directly. Use setState().","line":474,"column":7,"nodeType":"MemberExpression","messageId":"noDirectMutation","endLine":474,"endColumn":17,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-direct-mutation-state","severity":2,"message":"Do not mutate state directly. Use setState().","line":475,"column":7,"nodeType":"MemberExpression","messageId":"noDirectMutation","endLine":475,"endColumn":17,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-direct-mutation-state","severity":2,"message":"Do not mutate state directly. Use setState().","line":476,"column":7,"nodeType":"MemberExpression","messageId":"noDirectMutation","endLine":476,"endColumn":17,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-direct-mutation-state","severity":2,"message":"Do not mutate state directly. Use setState().","line":478,"column":7,"nodeType":"MemberExpression","messageId":"noDirectMutation","endLine":478,"endColumn":17,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-direct-mutation-state","severity":2,"message":"Do not mutate state directly. Use setState().","line":479,"column":7,"nodeType":"MemberExpression","messageId":"noDirectMutation","endLine":479,"endColumn":17,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-direct-mutation-state","severity":2,"message":"Do not mutate state directly. Use setState().","line":480,"column":7,"nodeType":"MemberExpression","messageId":"noDirectMutation","endLine":480,"endColumn":17,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-direct-mutation-state","severity":2,"message":"Do not mutate state directly. Use setState().","line":481,"column":7,"nodeType":"MemberExpression","messageId":"noDirectMutation","endLine":481,"endColumn":17,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-direct-mutation-state","severity":2,"message":"Do not mutate state directly. Use setState().","line":482,"column":7,"nodeType":"MemberExpression","messageId":"noDirectMutation","endLine":482,"endColumn":17,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-direct-mutation-state","severity":2,"message":"Do not mutate state directly. Use setState().","line":483,"column":7,"nodeType":"MemberExpression","messageId":"noDirectMutation","endLine":483,"endColumn":17,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-direct-mutation-state","severity":2,"message":"Do not mutate state directly. Use setState().","line":490,"column":7,"nodeType":"MemberExpression","messageId":"noDirectMutation","endLine":490,"endColumn":17,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-direct-mutation-state","severity":2,"message":"Do not mutate state directly. Use setState().","line":496,"column":7,"nodeType":"MemberExpression","messageId":"noDirectMutation","endLine":496,"endColumn":17,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TableFilter/TableFilter.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TableFilter/__test__/tableFilter.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TableFilter/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TasksDetail/TasksDetail.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TasksDetail/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TasksTable/TasksTable.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TasksTable/__tests__/Selectors.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TasksTable/__tests__/TasksTable.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TasksTable/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TasksTable/selectors.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/MembersList.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/TeamReport.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":211,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":211,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6753,6805],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":225,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":225,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[7212,7237],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/__tests__/TeamReport.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/__tests__/selectors.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/components/LoginPrivileges.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/components/PieChartInfoDetail.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/components/ReportCharts.jsx","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":15,"column":8,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":45,"column":10,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/components/TeamChartsGroup.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/components/TeamReportCharts.jsx","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":28,"column":8,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":60,"column":10,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/components/TeamReportLogs.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/components/TeamsReportCharts.jsx","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":39,"column":8,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":69,"column":10,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/components/TeamsReportLogs.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/components/UserLoginPrivileges.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/components/__tests__/LoginPrivileges.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/components/__tests__/PieChartInfoDetail.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/components/__tests__/ReportCharts.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/components/__tests__/TeamChartsGroup.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/components/__tests__/TeamReportCharts.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/components/__tests__/TeamReportLogs.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/components/__tests__/TeamsReportCharts.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/components/__tests__/TeamsReportLogs.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":29,"column":39,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":29,"column":39,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/components/__tests__/UserLoginPrivileges.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":76,"column":29,"nodeType":"MemberExpression","messageId":"noContainer","endLine":76,"endColumn":55,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":76,"column":39,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":76,"column":39,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":84,"column":25,"nodeType":"MemberExpression","messageId":"noContainer","endLine":84,"endColumn":48,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":84,"column":35,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":84,"column":35,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamReport/selectors.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TeamTable.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TimeEntriesViz.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":27,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":27,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[748,790],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":36,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":36,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1032,1074],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":84,"column":32,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":86,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":86,"endColumn":26,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2920,2970],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":140,"column":38,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":144,"column":20,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":160,"column":25,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":195,"column":14,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":200,"column":18,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":205,"column":18,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":210,"column":18,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":215,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":215,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[7381,7431],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TotalReport/TotalContributorsReport.jsx","messages":[],"suppressedMessages":[{"ruleId":"import/no-named-as-default-member","severity":1,"message":"Caution: `axios` also has a named export `isCancel`. Check if you meant to write `import {isCancel} from 'axios'` instead.","line":37,"column":12,"nodeType":"MemberExpression","endLine":37,"endColumn":26,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TotalReport/TotalPeopleReport.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TotalReport/TotalProjectReport.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TotalReport/TotalReportBarGraph.jsx","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":26,"column":8,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/TotalReport/TotalTeamReport.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/ViewReportsByDate/ViewReportsByDate.jsx","messages":[],"suppressedMessages":[{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must have accessible text.","line":76,"column":11,"nodeType":"JSXOpeningElement","endLine":76,"endColumn":88,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/WbsTable/WbsTable.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/WbsTable/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/__tests__/InfringementsViz.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/__tests__/PeopleTable.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/__tests__/PeopleTableDetails.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":202,"column":35,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":202,"column":35,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":202,"column":49,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":202,"column":49,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/__tests__/ProjectTable.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/__tests__/ReportTableSearchPanel.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/__tests__/Reports.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"import/named","severity":2,"message":"rest not found in 'msw'","line":32,"column":10,"nodeType":"Identifier","endLine":32,"endColumn":14,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/__tests__/TimeEntriesViz.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/__tests__/WbsTable.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/sharedComponents/ReportPage/ReportPage.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/sharedComponents/ReportPage/__test__/ReportPage.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/sharedComponents/ReportPage/components/ReportBlock/ReportBlock.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/sharedComponents/ReportPage/components/ReportBlock/__test__/ReportBlock.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/sharedComponents/ReportPage/components/ReportBlock/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/sharedComponents/ReportPage/components/ReportCard/ReportCard.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/sharedComponents/ReportPage/components/ReportCard/__test__/ReportCard.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/sharedComponents/ReportPage/components/ReportCard/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/sharedComponents/ReportPage/components/ReportHeader/ReportHeader.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/sharedComponents/ReportPage/components/ReportHeader/__test__/ReportHeader.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/sharedComponents/ReportPage/components/ReportHeader/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Reports/sharedComponents/ReportPage/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/ResourceManagement/ResourceManagement.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/SearchProjectByPerson/SearchProjectByPerson.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/SetupProfile/SetupProfile.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/SetupProfile/SetupProfileInvalidToken.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/SetupProfile/SetupProfileUserEntry.jsx","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":244,"column":29,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":332,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":332,"endColumn":58,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/SetupProfile/collaborationSuggestionData.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/SetupProfile/deleteHomeCountryModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/SetupProfile/homeCountryModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/SetupProfile/profilePictureModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/SetupProfile/requirementModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/SocialArchitecture/RequestResources.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/SummaryBar/SummaryBar.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":183,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":183,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6217,6257],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":196,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":196,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6601,6639],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":353,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":353,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[11424,11450],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":358,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":358,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[11580,11611],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/SummaryBar/__tests__/SummaryBar.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":224,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":224,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[6535,6588],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TSAForm/pages/TSAFormPage1.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TSAForm/pages/TSAFormPage2.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TSAForm/pages/TSAFormPage3.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TSAForm/pages/TSAFormPage4.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TSAForm/pages/TSAFormPage5.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TSAForm/pages/TSAFormPage6.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TSAForm/pages/TSAFormPage7.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TSAForm/pages/TSAFormPage8.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TaskEditSuggestions/Components/TaskEditSuggestionRow.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TaskEditSuggestions/Components/TaskEditSuggestionsModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TaskEditSuggestions/Components/__tests__/TaskEditSuggestionRow.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TaskEditSuggestions/Components/__tests__/TaskEditSuggestionsModal.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TaskEditSuggestions/TaskEditSuggestions.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TaskEditSuggestions/__tests__/TaskEditSuggestions.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TaskEditSuggestions/__tests__/actions.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TaskEditSuggestions/__tests__/reducer.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TaskEditSuggestions/__tests__/selectors.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TaskEditSuggestions/__tests__/service.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TaskEditSuggestions/actions.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TaskEditSuggestions/reducer.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TaskEditSuggestions/selectors.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TaskEditSuggestions/service.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":11,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":11,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[335,397],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":22,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":22,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[731,793],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":34,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":34,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1071,1134],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":44,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":44,"endColumn":16,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1366,1433],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TaskEditSuggestions/thunks.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TeamLocations/AddOrEditPopup.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TeamLocations/CustomInput.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TeamLocations/ListUsersPopUp.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TeamLocations/MarkerPopup.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TeamLocations/TeamLocations.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TeamLocations/TeamLocationsTable.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TeamLocations/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/CreateNewTeamPopup.jsx","messages":[],"suppressedMessages":[{"ruleId":"jsx-a11y/no-autofocus","severity":2,"message":"The autoFocus prop should not be used, as it can reduce usability and accessibility for users.","line":45,"column":7,"nodeType":"JSXAttribute","endLine":45,"endColumn":24,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/no-autofocus","severity":2,"message":"The autoFocus prop should not be used, as it can reduce usability and accessibility for users.","line":58,"column":11,"nodeType":"JSXAttribute","endLine":58,"endColumn":20,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/DeleteTeamPopup.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/InfoModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/MembersAutoComplete.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/Team.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/TeamStatusPopup.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/TeamTableHeader.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/TeamTableSearchPanel.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/Teams.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/TeamsOverview.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/ToggleSwitch/ToggleSwitch.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/__tests__/CreateNewTeamPopup.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/__tests__/DeleteTeamPopup.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/__tests__/InfoModal.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/__tests__/MembersAutoComplete.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/__tests__/Team.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/__tests__/TeamMembersPopup.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/__tests__/TeamStatusPopup.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/__tests__/TeamTable.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/__tests__/TeamTableHeader.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/__tests__/TeamTableSearchPanel.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/__tests__/Teams.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Teams/__tests__/TeamsOverview.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/DeleteModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/EffortBar.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/TimeEntry.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":109,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":109,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[4292,4344],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/TimeEntryForm/AboutModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/TimeEntryForm/ReminderModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/TimeEntryForm/TangibleInfoModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/TimeEntryForm/TimeEntryForm.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/TimeEntryForm/TimeLogConfirmationModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/TimeEntryForm/__tests__/TimeEntryForm.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/TimeEntryForm/__tests__/TimeEntryForm_edit.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/TimeEntryForm/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/Timelog.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":293,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":293,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[10129,10144],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":300,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":300,"endColumn":69,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":302,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":302,"endColumn":62,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":372,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":372,"endColumn":76,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/TimelogNavbar.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/WeeklySummaries.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":96,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":96,"endColumn":68,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/__tests__/AboutModal.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/__tests__/DeleteModal.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/__tests__/EffortBar.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/__tests__/TimeEntry.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"import/named","severity":2,"message":"rest not found in 'msw'","line":7,"column":10,"nodeType":"Identifier","endLine":7,"endColumn":14,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/__tests__/TimeEntryForm/ReminderModal.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/__tests__/TimeEntryForm/TangibleInfoModal.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/__tests__/Timelog.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/__tests__/TimelogNavbar.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/__tests__/WeeklySummaries.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timelog/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timer/Countdown.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timer/Timer.jsx","messages":[],"suppressedMessages":[{"ruleId":"jsx-a11y/media-has-caption","severity":2,"message":"Media elements such as <audio> and <video> must have a <track> for captions.","line":443,"column":9,"nodeType":"JSXOpeningElement","endLine":449,"endColumn":11,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/media-has-caption","severity":2,"message":"Media elements such as <audio> and <video> must have a <track> for captions.","line":450,"column":9,"nodeType":"JSXOpeningElement","endLine":456,"endColumn":11,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/media-has-caption","severity":2,"message":"Media elements such as <audio> and <video> must have a <track> for captions.","line":751,"column":7,"nodeType":"JSXOpeningElement","endLine":757,"endColumn":9,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/media-has-caption","severity":2,"message":"Media elements such as <audio> and <video> must have a <track> for captions.","line":758,"column":7,"nodeType":"JSXOpeningElement","endLine":764,"endColumn":9,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timer/TimerPopout.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timer/TimerStatus.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timer/__test__/Countdown.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Timer/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/AccordianWrapper/AccordianWrapper.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/AnniversaryCelebrated/AnniversaryCelebrated.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/BlueSquareStats/BlueSquareStats.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/DonutChart/DonutChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/GlobalVolunteerMap/GlobalVolunteerMap.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/HoursCompleted/HoursCompletedBarChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/HoursWorkedPieChart/HoursWorkedPieChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/LineChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/NumbersVolunteerWorked/NumbersVolunteerWorked.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/PieChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/StatisticsTab/StatisticsTab.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/StatsCard.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/TaskCompleted/TaskCompletedBarChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/TeamStats/TeamStats.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/TeamStats/TeamStatsBarChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/TeamStats/TeamStatsBarLabel.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/TinyBarChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/TotalOrgSummary.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":170,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":170,"endColumn":77,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":177,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":177,"endColumn":69,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":184,"column":19,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":210,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":210,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[7739,7795],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":376,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":376,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[13712,13762],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":378,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":378,"endColumn":57,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":384,"column":19,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/VolunteerActivities/VolunteerActivities.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/VolunteerHoursDistribution/VolunteerHoursDistribution.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/VolunteerRolesTeamDynamics/RoleDistributionPieChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/VolunteerRolesTeamDynamics/WorkDistributionBarChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/VolunteerStats.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/VolunteerStatus/VolunteerStatus.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/VolunteerStatus/VolunteerStatusChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/VolunteerStatus/VolunteerStatusPieChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/VolunteerTrendsLineChart/VolunteerTrendsLineChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/TotalOrgSummary/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UpdatePassword/UpdatePassword.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UpdatePassword/__tests__/UpdatePassword.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"import/named","severity":2,"message":"rest not found in 'msw'","line":6,"column":10,"nodeType":"Identifier","endLine":6,"endColumn":14,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UpdatePassword/__tests__/UpdatePasswordOld.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UpdatePassword/__tests__/UpdatePassword_withoutMock.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"import/named","severity":2,"message":"rest not found in 'msw'","line":4,"column":10,"nodeType":"Identifier","endLine":4,"endColumn":14,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UpdatePassword/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/AddNewTeamModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/AddNewUserProfile/UserProfileAdd.container.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/AddNewUserProfile/UserProfileAdd.jsx","messages":[{"ruleId":"react/no-direct-mutation-state","severity":2,"message":"Do not mutate state directly. Use setState().","line":127,"column":5,"nodeType":"MemberExpression","messageId":"noDirectMutation","endLine":127,"endColumn":15},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":148,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":148,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4534,4553],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":733,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":733,"endColumn":43},{"ruleId":"react/no-direct-mutation-state","severity":2,"message":"Do not mutate state directly. Use setState().","line":911,"column":15,"nodeType":"MemberExpression","messageId":"noDirectMutation","endLine":911,"endColumn":37}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { Component, useState } from 'react';\nimport { StickyContainer } from 'react-sticky';\nimport {\n  Container,\n  Row,\n  Col,\n  Input,\n  FormFeedback,\n  FormGroup,\n  Form,\n  Label,\n  Button,\n  TabPane,\n  TabContent,\n} from 'reactstrap';\nimport CommonInput from '~/components/common/Input';\nimport DuplicateNamePopup from '~/components/UserManagement/DuplicateNamePopup';\nimport ToggleSwitch from '../UserProfileEdit/ToggleSwitch';\nimport './UserProfileAdd.scss';\nimport { createUser } from '../../../services/userProfileService';\nimport { toast } from 'react-toastify';\nimport TeamsTab from '../TeamsAndProjects/TeamsTab';\nimport ProjectsTab from '../TeamsAndProjects/ProjectsTab';\nimport { connect } from 'react-redux';\nimport { get } from 'lodash';\nimport { getUserProfile, clearUserProfile } from '../../../actions/userProfile';\nimport {\n  getAllUserTeams,\n  updateTeam,\n  deleteTeamMember,\n  addTeamMember,\n} from '../../../actions/allTeamsAction';\n\nimport { fetchAllProjects } from '~/actions/projects';\n\nimport PhoneInput from 'react-phone-input-2';\nimport 'react-phone-input-2/lib/style.css';\nimport TimeZoneDropDown from '../TimeZoneDropDown';\nimport hasPermission from '~/utils/permissions';\nimport { boxStyle, boxStyleDark } from '~/styles';\nimport WeeklySummaryOptions from './WeeklySummaryOptions';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { isValidGoogleDocsUrl, isValidMediaUrl } from '~/utils/checkValidURL';\nimport axios from 'axios';\nimport { ENDPOINTS } from '~/utils/URL';\n\nconst patt = RegExp(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\nconst DATE_PICKER_MIN_DATE = '01/01/2010';\nconst DEFAULT_PASSWORD = '123Welcome!';\n\nclass UserProfileAdd extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userProfiles: this.props.userProfiles,\n      popupOpen: false,\n      weeklyCommittedHours: 10,\n      teams: [],\n      projects: [],\n      userProfile: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        phoneNumber: null,\n        weeklyCommittedHours: 10,\n        collaborationPreference: 'Zoom',\n        role: 'Volunteer',\n        privacySettings: { blueSquares: true, email: true, phoneNumber: true },\n        jobTitle: '',\n        googleDoc: '',\n        dropboxDoc: '',\n        timeZone: '',\n        location: {\n          userProvided: '',\n          coords: { lat: '', lng: '' },\n          country: '',\n          city: '',\n        },\n        showphone: true,\n        weeklySummaryOption: 'Required',\n        createdDate: new Date(),\n        actualEmail: '',\n        actualPassword: '',\n        defaultPassword: DEFAULT_PASSWORD,\n        startDate: new Date(),\n        actualConfirmedPassword: '',\n      },\n      formValid: {},\n      formErrors: {\n        firstName: 'First Name is required',\n        lastName: 'Last Name is required',\n        email: 'Email is required',\n        phoneNumber: 'Phone Number is required',\n        actualEmail: 'Actual Email is required',\n        actualPassword: 'Actual Password is required',\n        actualConfirmedPassword: 'Actual Confirmed Password is required',\n        defaultPassword: 'Default Password is required',\n        jobTitle: 'Job Title is required',\n      },\n      timeZoneFilter: '',\n      formSubmitted: false,\n      teamCode: '',\n      codeValid: false,\n      inputAutoComplete: [],\n      inputAutoStatus: null,\n      isLoading: false,\n    };\n\n    const { user } = this.props.auth;\n    this.canAddDeleteEditOwners = user && user.role === 'Owner';\n  }\n\n  popupClose = () => {\n    this.setState({\n      popupOpen: false,\n    });\n  };\n\n  setCodeValid = isValid => {\n    this.setState({\n      codeValid: isValid,\n    });\n  };\n\n  componentDidMount() {\n    this.state.showphone = true;\n    this.onCreateNewUser();\n    this.fetchTeamCodeAllUsers();\n  }\n\n  // Replace fetchTeamCodeAllUsers with a method that dispatches getAllTeamCode\n  fetchTeamCodeAllUsers = async () => {\n    const url = ENDPOINTS.WEEKLY_SUMMARIES_REPORT();\n    try {\n      this.setState({ isLoading: true });\n\n      const response = await axios.get(url);\n      const stringWithValue = response.data.map(item => item.teamCode).filter(Boolean);\n      const stringNoRepeat = stringWithValue\n        .map(item => item)\n        .filter((item, index, array) => array.indexOf(item) === index);\n      this.setState({ inputAutoComplete: stringNoRepeat });\n\n      this.setState({ inputAutoStatus: response.status });\n      this.setState({ isLoading: false });\n    } catch (error) {\n      console.log(error);\n      this.setState({ isLoading: false });\n      toast.error(`It was not possible to retrieve the team codes. \n      Please try again by clicking the icon inside the input auto complete.`);\n    }\n  };\n\n  render() {\n    const {\n      firstName,\n      email,\n      lastName,\n      phoneNumber,\n      role,\n      actualEmail,\n      actualPassword,\n      actualConfirmedPassword,\n      jobTitle,\n      defaultPassword,\n    } = this.state.userProfile;\n\n    const darkMode = this.props.darkMode;\n\n    const fontColor = darkMode ? 'text-light' : '';\n    const fontWeight = darkMode ? 'font-weight-bold' : '';\n\n    const phoneNumberEntered =\n      this.state.userProfile.phoneNumber === null ||\n      this.state.userProfile.phoneNumber.length === 0;\n    return (\n      <StickyContainer>\n        <DuplicateNamePopup\n          open={this.state.popupOpen}\n          popupClose={this.popupClose}\n          onClose={this.props.closePopup}\n          createUserProfile={this.createUserProfile}\n        />\n        <Container className={`emp-profile add-new-user ${darkMode ? 'bg-yinmn-blue' : ''}`}>\n          <Row>\n            <Col md=\"12\">\n              <Form>\n                <Row className=\"user-add-row\">\n                  <Col md={{ size: 2, offset: 2 }} className=\"text-md-right my-2\">\n                    <Label className={fontColor}>\n                      Name <span style={{ color: 'red' }}>*</span>{' '}\n                    </Label>\n                  </Col>\n                  <Col md=\"3\">\n                    <FormGroup>\n                      <Input\n                        type=\"text\"\n                        name=\"firstName\"\n                        id=\"firstName\"\n                        value={firstName}\n                        onChange={e => this.handleUserProfile(e)}\n                        placeholder=\"First Name\"\n                        invalid={!!(this.state.formSubmitted && this.state.formErrors.firstName)}\n                        className={darkMode ? 'bg-darkmode-liblack text-light border-0' : ''}\n                      />\n                      {this.state.formSubmitted && this.state.formErrors.firstName && (\n                        <FormFeedback className={fontWeight}>\n                          {this.state.formErrors.firstName}\n                        </FormFeedback>\n                      )}\n                    </FormGroup>\n                  </Col>\n                  <Col md=\"3\">\n                    <FormGroup>\n                      <Input\n                        type=\"text\"\n                        name=\"lastName\"\n                        id=\"lastName\"\n                        value={lastName}\n                        onChange={e => this.handleUserProfile(e)}\n                        placeholder=\"Last Name\"\n                        invalid={!!(this.state.formSubmitted && this.state.formErrors.lastName)}\n                        className={darkMode ? 'bg-darkmode-liblack text-light border-0' : ''}\n                      />\n                      {this.state.formSubmitted && this.state.formErrors.lastName && (\n                        <FormFeedback className={fontWeight}>\n                          {this.state.formErrors.lastName}\n                        </FormFeedback>\n                      )}\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row className=\"user-add-row\">\n                  <Col md={{ size: 3, offset: 1 }} className=\"text-md-right my-2\">\n                    <Label className={fontColor}>\n                      Job Title <span style={{ color: 'red' }}>*</span>{' '}\n                    </Label>\n                  </Col>\n                  <Col md={{ size: 6 }}>\n                    <FormGroup>\n                      <Input\n                        type=\"text\"\n                        name=\"jobTitle\"\n                        id=\"jobTitle\"\n                        value={jobTitle}\n                        onChange={e => this.handleUserProfile(e)}\n                        placeholder=\"Job Title\"\n                        invalid={!!(this.state.formSubmitted && this.state.formErrors.jobTitle)}\n                        className={darkMode ? 'bg-darkmode-liblack text-light border-0' : ''}\n                      />\n                      {this.state.formSubmitted && this.state.formErrors.jobTitle && (\n                        <FormFeedback className={fontWeight}>\n                          {this.state.formErrors.jobTitle}\n                        </FormFeedback>\n                      )}\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row className=\"user-add-row\">\n                  <Col md={{ size: 2, offset: 2 }} className=\"text-md-right my-2\">\n                    <Label className={fontColor}>\n                      Email <span style={{ color: 'red' }}>*</span>{' '}\n                    </Label>\n                  </Col>\n                  <Col md=\"6\">\n                    <FormGroup>\n                      <Input\n                        type=\"email\"\n                        name=\"email\"\n                        id=\"email\"\n                        value={email}\n                        onChange={e => this.handleUserProfile(e)}\n                        placeholder=\"Email\"\n                        invalid={!!(this.state.formSubmitted && this.state.formErrors.email)}\n                        className={darkMode ? 'bg-darkmode-liblack text-light border-0' : ''}\n                      />\n                      {this.state.formSubmitted && this.state.formErrors.email && (\n                        <FormFeedback className={fontWeight}>\n                          {this.state.formErrors.email}\n                        </FormFeedback>\n                      )}\n                      <ToggleSwitch\n                        switchType=\"email\"\n                        state={this.state.userProfile.privacySettings?.email}\n                        handleUserProfile={this.handleUserProfile}\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row className=\"user-add-row\">\n                  <Col md={{ size: 2, offset: 2 }} className=\"text-md-right my-2\">\n                    <Label className={fontColor}>\n                      Phone <span style={{ color: 'red' }}>*</span>{' '}\n                    </Label>\n                  </Col>\n                  <Col md=\"6\">\n                    <FormGroup>\n                      <PhoneInput\n                        country=\"US\"\n                        regions={['america', 'europe', 'asia', 'oceania', 'africa']}\n                        limitMaxLength=\"true\"\n                        value={phoneNumber}\n                        onChange={phone => this.phoneChange(phone)}\n                      />\n                      {phoneNumberEntered && this.state.formSubmitted && (\n                        <div className={`required-user-field ${fontWeight}`}>\n                          {this.state.formErrors.phoneNumber}\n                        </div>\n                      )}\n                      <ToggleSwitch\n                        switchType=\"phone\"\n                        state={this.state.userProfile.privacySettings?.phoneNumber}\n                        handleUserProfile={this.handleUserProfile}\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row className=\"user-add-row\">\n                  <Col md={{ size: 4 }} className=\"text-md-right my-2\">\n                    <Label className={fontColor}>\n                      Weekly Committed Hours <span style={{ color: 'red' }}>*</span>\n                    </Label>\n                  </Col>\n                  <Col md=\"6\">\n                    <FormGroup>\n                      <Input\n                        type=\"number\"\n                        name=\"weeklyCommittedHours\"\n                        min={0}\n                        max={168}\n                        id=\"weeklyCommittedHours\"\n                        value={this.state.userProfile.weeklyCommittedHours}\n                        onChange={e => this.handleUserProfile(e)}\n                        onKeyDown={event => {\n                          if (event.key === 'Backspace' || event.key === 'Delete') {\n                            this.setState({\n                              userProfile: {\n                                ...this.state.userProfile,\n                                [event.target.id]: '',\n                              },\n                              formValid: {\n                                ...this.state.formValid,\n                                [event.target.id]: false,\n                              },\n                              formErrors: {\n                                ...this.state.formErrors,\n                                weeklyCommittedHours: 'Committed hours can not be empty',\n                              },\n                            });\n                          }\n                        }}\n                        placeholder=\"Weekly Committed Hours\"\n                        invalid={\n                          this.state.formValid.weeklyCommittedHours === undefined\n                            ? false\n                            : !this.state.formValid.weeklyCommittedHours\n                        }\n                        className={darkMode ? 'bg-darkmode-liblack text-light border-0' : ''}\n                      />\n                      <FormFeedback className={fontWeight}>\n                        {this.state.formErrors.weeklyCommittedHours}\n                      </FormFeedback>\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row className=\"user-add-row\">\n                  <Col md={{ size: 2, offset: 2 }} className=\"text-md-right my-2\">\n                    <Label className={fontColor}>Role</Label>\n                  </Col>\n                  <Col md=\"6\">\n                    <FormGroup>\n                      <Input\n                        type=\"select\"\n                        name=\"role\"\n                        id=\"role\"\n                        defaultValue=\"Volunteer\"\n                        onChange={e => this.handleUserProfile(e)}\n                        className={darkMode ? 'bg-darkmode-liblack text-light border-0' : ''}\n                      >\n                        {this.props.role.roles.map(({ roleName }, index) => {\n                          if (roleName === 'Owner') return;\n                          return (\n                            <option value={roleName} key={index}>\n                              {roleName}\n                            </option>\n                          );\n                        })}\n                        {this.canAddDeleteEditOwners && <option value=\"Owner\">Owner</option>}\n                      </Input>\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row className=\"user-add-row\">\n                  <Col md={{ size: 4 }} className=\"text-md-right my-2\">\n                    <Label className={fontColor}>Default Password</Label>\n                  </Col>\n                  <Col md=\"6\">\n                    <FormGroup>\n                      <CommonInput\n                        type=\"password\"\n                        name=\"defaultPassword\"\n                        id=\"defaultPassword\"\n                        value={DEFAULT_PASSWORD}\n                        disabled\n                        readOnly\n                        className=\"d-flex justify-start items-start\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                {(role === 'Administrator' || role === 'Owner') && (\n                  <>\n                    <Row className=\"user-add-row\">\n                      <Col md={{ size: 2, offset: 2 }} className=\"text-md-right my-2\">\n                        <Label className={fontColor}>Actual Email</Label>\n                      </Col>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <Input\n                            type=\"actualEmail\"\n                            name=\"actualEmail\"\n                            id=\"actualEmail\"\n                            value={actualEmail}\n                            onChange={e => this.handleUserProfile(e)}\n                            placeholder=\"Actual Email\"\n                            invalid={!!this.state.formErrors.actualEmail}\n                            className={darkMode ? 'bg-darkmode-liblack text-light border-0' : ''}\n                          />\n                          <FormFeedback className={fontWeight}>\n                            {this.state.formErrors.actualEmail}\n                          </FormFeedback>\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row className=\"user-add-row\">\n                      <Col md={{ size: 4 }} className=\"text-md-right my-2\">\n                        <Label className={fontColor}>Actual Password</Label>\n                      </Col>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <CommonInput\n                            type=\"password\"\n                            name=\"actualPassword\"\n                            id=\"actualPassword\"\n                            value={actualPassword}\n                            onChange={e => this.handleUserProfile(e)}\n                            placeholder=\"Actual Password\"\n                            invalid={!!this.state.formErrors.actualPassword}\n                            className=\"d-flex justify-start items-start\"\n                          />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                    <Row className=\"user-add-row\">\n                      <Col md={{ size: 4 }} className=\"text-md-right my-2\">\n                        <Label className={fontColor}>Confirm Actual Password</Label>\n                      </Col>\n                      <Col md=\"6\">\n                        <FormGroup>\n                          <CommonInput\n                            type=\"password\"\n                            name=\"actualConfirmedPassword\"\n                            id=\"actualConfirmedPassword\"\n                            value={actualConfirmedPassword}\n                            onChange={e => this.handleUserProfile(e)}\n                            placeholder=\"Confirm Actual Password\"\n                            invalid={\n                              actualPassword !== actualConfirmedPassword\n                                ? 'Passwords do not match'\n                                : ''\n                            }\n                            className=\"d-flex justify-start items-start\"\n                          />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                  </>\n                )}\n                <Row className=\"user-add-row\">\n                  <Col md={{ size: 4 }} className=\"text-md-right my-2\">\n                    <Label className={`weeklySummaryOptionsLabel ${fontColor}`}>\n                      Weekly Summary Options\n                    </Label>\n                  </Col>\n                  <Col md=\"6\">\n                    <WeeklySummaryOptions handleUserProfile={this.handleUserProfile} />\n                  </Col>\n                </Row>\n                <Row className=\"user-add-row\">\n                  <Col md={{ size: 4 }} className=\"text-md-right my-2\">\n                    <Label className={fontColor}>Video Call Preference</Label>\n                  </Col>\n                  <Col md=\"6\">\n                    <FormGroup>\n                      <Input\n                        type=\"text\"\n                        name=\"collaborationPreference\"\n                        id=\"collaborationPreference\"\n                        value={this.state.userProfile.collaborationPreference}\n                        onChange={e => this.handleUserProfile(e)}\n                        placeholder=\"Skype, Zoom, etc.\"\n                        className={darkMode ? 'bg-darkmode-liblack text-light border-0' : ''}\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row className=\"user-add-row\">\n                  <Col md={{ size: 4 }} className=\"text-md-right my-2\">\n                    <Label className={fontColor}>Admin Document</Label>\n                  </Col>\n                  <Col md=\"6\">\n                    <FormGroup>\n                      <Input\n                        type=\"text\"\n                        name=\"googleDoc\"\n                        id=\"googleDoc\"\n                        value={this.state.userProfile.googleDoc}\n                        onChange={e => this.handleUserProfile(e)}\n                        placeholder=\"Google Doc\"\n                        className={darkMode ? 'bg-darkmode-liblack text-light border-0' : ''}\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row className=\"user-add-row\">\n                  <Col md={{ size: 4 }} className=\"text-md-right my-2\">\n                    <Label className={fontColor}>Link to Media Files</Label>\n                  </Col>\n                  <Col md=\"6\">\n                    <FormGroup>\n                      <Input\n                        type=\"text\"\n                        name=\"dropboxDoc\"\n                        id=\"dropboxDoc\"\n                        value={this.state.userProfile.dropboxDoc}\n                        onChange={e => this.handleUserProfile(e)}\n                        placeholder=\"DropBox Folder\"\n                        className={darkMode ? 'bg-darkmode-liblack text-light border-0' : ''}\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row className=\"user-add-row\">\n                  <Col md={{ size: 4, offset: 0 }} className=\"text-md-right my-2\">\n                    <Label className={fontColor}>Location</Label>\n                  </Col>\n                  <Col md=\"6\">\n                    <Row>\n                      <Col md=\"6\">\n                        <Input\n                          id=\"location\"\n                          onChange={this.handleLocation}\n                          className={darkMode ? 'bg-darkmode-liblack text-light border-0' : ''}\n                        />\n                      </Col>\n                      <Col md=\"6\">\n                        <div className=\"w-100 pt-1 mb-2 mx-auto\">\n                          <Button\n                            color=\"secondary\"\n                            block\n                            size=\"sm\"\n                            onClick={this.onClickGetTimeZone}\n                            style={darkMode ? {} : boxStyle}\n                          >\n                            Get Time Zone\n                          </Button>\n                        </div>\n                      </Col>\n                    </Row>\n                  </Col>\n                </Row>\n                <Row className=\"user-add-row\">\n                  <Col md={{ size: 3, offset: 1 }} className=\"text-md-right my-2\">\n                    <Label className={fontColor}>Time Zone</Label>\n                  </Col>\n                  <Col md=\"6\">\n                    <FormGroup>\n                      <TimeZoneDropDown\n                        filter={this.state.timeZoneFilter}\n                        onChange={e => this.handleUserProfile(e)}\n                        selected={'America/Los_Angeles'}\n                        id=\"timeZone\"\n                      />\n                    </FormGroup>\n                  </Col>\n                </Row>\n                <Row className=\"user-add-row\">\n                  <Col md={{ size: 4 }} className=\"text-md-right my-2\">\n                    <Label className={fontColor}>Start Date</Label>\n                  </Col>\n                  <Col md=\"6\">\n                    <FormGroup>\n                      <div className=\"date-picker-item\">\n                        <DatePicker\n                          selected={this.state.userProfile.startDate}\n                          minDate={new Date()}\n                          onChange={date =>\n                            this.setState({\n                              userProfile: {\n                                ...this.state.userProfile,\n                                startDate: date == '' || date == null ? new Date() : date,\n                              },\n                            })\n                          }\n                          className={`form-control ${\n                            darkMode ? 'bg-darkmode-liblack text-light border-0' : ''\n                          }`}\n                        />\n                      </div>\n                    </FormGroup>\n                  </Col>\n                </Row>\n              </Form>\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"12\">\n              <TabContent id=\"myTabContent\" className={darkMode ? 'bg-yinmn-blue border-0' : ''}>\n                <TabPane>\n                  <ProjectsTab\n                    userProjects={this.state.projects}\n                    projectsData={this.props ? this.props.allProjects.projects : []}\n                    onAssignProject={this.onAssignProject}\n                    onDeleteProject={this.onDeleteProject}\n                    isUserAdmin={true}\n                    role={this.props.auth.user.role}\n                    edit\n                    darkMode={darkMode}\n                  />\n                </TabPane>\n                <TabPane>\n                  <TeamsTab\n                    userTeams={this.state.teams}\n                    teamsData={this.props ? this.props.allTeams.allTeamsData : []}\n                    onAssignTeam={this.onAssignTeam}\n                    onAssignTeamCode={this.onAssignTeamCode}\n                    onDeleteTeam={this.onDeleteTeam}\n                    isUserAdmin={true}\n                    role={this.props.auth.user.role}\n                    teamCode={this.state.teamCode}\n                    canEditTeamCode={true}\n                    codeValid={this.state.codeValid}\n                    setCodeValid={this.setCodeValid}\n                    edit\n                    darkMode={darkMode}\n                    inputAutoComplete={this.state.inputAutoComplete}\n                    inputAutoStatus={this.state.inputAutoStatus}\n                    isLoading={this.state.isLoading}\n                    fetchTeamCodeAllUsers={this.fetchTeamCodeAllUsers}\n                  />\n                </TabPane>\n              </TabContent>\n            </Col>\n          </Row>\n          <Row>\n            {/* <Col></Col> */}\n            <Col md=\"12\">\n              <div className=\"w-50 pt-4 mx-auto\">\n                <Button\n                  color=\"primary\"\n                  block\n                  size=\"lg\"\n                  data-testid=\"create-userProfile\"\n                  onClick={() => this.createUserProfile(false)}\n                  style={darkMode ? boxStyleDark : boxStyle}\n                >\n                  Create\n                </Button>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </StickyContainer>\n    );\n  }\n\n  onDeleteTeam = deletedTeamId => {\n    const teams = [...this.state.teams];\n    const filteredTeam = teams.filter(team => team._id !== deletedTeamId);\n\n    this.setState({\n      teams: filteredTeam,\n    });\n  };\n\n  onDeleteProject = deletedProjectId => {\n    const projects = [...this.state.projects];\n    const _projects = projects.filter(project => project._id !== deletedProjectId);\n    this.setState({\n      projects: _projects,\n    });\n  };\n\n  onAssignTeamCode = value => {\n    this.setState({\n      teamCode: value,\n    });\n  };\n\n  onAssignTeam = assignedTeam => {\n    const teams = [...this.state.teams];\n    teams.push(assignedTeam);\n    this.setState({\n      teams: teams,\n    });\n  };\n\n  onAssignProject = assignedProject => {\n    const projects = [...this.state.projects];\n    projects.push(assignedProject);\n\n    this.setState({\n      projects: projects,\n    });\n  };\n\n  onCreateNewUser = () => {\n    this.props.fetchAllProjects();\n\n    const initialUserProject = this.props.allProjects.projects.filter(\n      ({ projectName }) => projectName === 'Orientation and Initial Setup',\n    );\n\n    this.setState({ projects: initialUserProject });\n  };\n\n  // Function to call TimeZoneService with location\n  onClickGetTimeZone = () => {\n    const location = this.state.userProfile.location.userProvided;\n\n    if (!location) {\n      alert('Please enter valid location');\n      return;\n    }\n\n    axios\n      .get(ENDPOINTS.TIMEZONE_LOCATION(location))\n      .then(res => {\n        if (res.status === 200) {\n          const { timezone, currentLocation } = res.data;\n          this.setState({\n            ...this.state,\n            timeZoneFilter: timezone,\n            userProfile: {\n              ...this.state.userProfile,\n              location: currentLocation,\n              timeZone: timezone,\n            },\n          });\n        }\n      })\n      .catch(err => {\n        toast.error(`An error occurred : ${err.response.data}`);\n      });\n  };\n\n  fieldsAreValid = () => {\n    const firstLength = this.state.userProfile.firstName !== '';\n    const lastLength = this.state.userProfile.lastName !== '';\n    const phone = this.state.userProfile.phoneNumber;\n    const role = this.state.userProfile.role;\n    const defaultPassword = this.state.userProfile.defaultPassword;\n\n    if (phone === null) {\n      toast.error('Phone Number is required');\n      return false;\n    } else if (!weeklyCommittedHours) {\n      toast.error('Weekly Committed Hours is required');\n      return false;\n    } else if (this.state.teamCode && !this.state.codeValid) {\n      toast.error('Team Code is invalid');\n      return false;\n    } else if (role !== 'Administrator' && role !== 'Owner' && !defaultPassword) {\n      toast.error('Default Password is required for non-admin users');\n      return false;\n    } else if (firstLength && lastLength && phone.length >= 9) {\n      return true;\n    } else {\n      toast.error('Please fill all the required fields');\n      return false;\n    }\n  };\n\n  checkIfDuplicate = (firstName, lastName) => {\n    let { userProfiles } = this.state.userProfiles;\n\n    const duplicates = userProfiles.filter(user => {\n      return (\n        user.firstName.toLowerCase() === firstName.toLowerCase() &&\n        user.lastName.toLowerCase() === lastName.toLowerCase()\n      );\n    });\n\n    if (duplicates.length > 0) return true;\n    else return false;\n  };\n\n  createUserProfile = allowsDuplicateName => {\n    let that = this;\n    const {\n      firstName,\n      email,\n      lastName,\n      phoneNumber,\n      role,\n      privacySettings,\n      collaborationPreference,\n      googleDoc,\n      dropboxDoc,\n      jobTitle,\n      timeZone,\n      location,\n      weeklySummaryOption,\n      createdDate,\n      actualEmail,\n      actualPassword,\n      startDate,\n      actualConfirmedPassword,\n    } = that.state.userProfile;\n\n    const userData = {\n      password: DEFAULT_PASSWORD,\n      role: role,\n      firstName: firstName,\n      lastName: lastName,\n      jobTitle: jobTitle,\n      phoneNumber: phoneNumber,\n      bio: '',\n      weeklycommittedHours: that.state.userProfile.weeklyCommittedHours,\n      weeklySummaryOption: weeklySummaryOption,\n      personalLinks: [],\n      adminLinks: [],\n      teams: this.state.teams,\n      projects: this.state.projects,\n      email: email,\n      privacySettings: privacySettings,\n      collaborationPreference: collaborationPreference,\n      timeZone: timeZone,\n      location: location,\n      allowsDuplicateName: allowsDuplicateName,\n      createdDate: createdDate,\n      teamCode: this.state.teamCode,\n      actualEmail: role === 'Administrator' || role === 'Owner' ? actualEmail : '',\n      actualPassword: role === 'Administrator' || role === 'Owner' ? actualPassword : '',\n      startDate: startDate,\n    };\n\n    this.setState({ formSubmitted: true });\n\n    if (actualPassword != actualConfirmedPassword) {\n      toast.error('Your passwords do not match!');\n      return;\n    }\n\n    if (googleDoc) {\n      if (isValidGoogleDocsUrl(googleDoc)) {\n        userData.adminLinks.push({ Name: 'Google Doc', Link: googleDoc.trim() });\n      } else {\n        toast.error('Invalid Google Doc link. Please provide a valid Google Doc URL.');\n        this.setState({\n          formValid: {\n            ...that.state.formValid,\n            googleDoc: false,\n          },\n          formErrors: {\n            ...that.state.formErrors,\n            googleDoc: 'Invalid Google Doc URL',\n          },\n        });\n        return;\n      }\n    }\n    if (dropboxDoc) {\n      if (isValidMediaUrl(dropboxDoc)) {\n        userData.adminLinks.push({ Name: 'Media Folder', Link: dropboxDoc.trim() });\n      } else {\n        toast.error('Invalid DropBox link. Please provide a valid Drop Box URL.');\n        this.setState({\n          formValid: {\n            ...that.state.formValid,\n            dropboxDoc: false,\n          },\n          formErrors: {\n            ...that.state.formErrors,\n            dropboxDoc: 'Invalid Dropbox Link URL',\n          },\n        });\n        return;\n      }\n    }\n    if (this.fieldsAreValid()) {\n      this.setState({ showphone: false });\n      if (!email.match(patt)) {\n        toast.error('Email is not valid. Please include @ followed by .com format');\n      } else {\n        createUser(userData)\n          .then(res => {\n            if (res.data.warning) {\n              toast.warn(res.data.warning);\n            } else if (\n              this.checkIfDuplicate(userData.firstName, userData.lastName) &&\n              !allowsDuplicateName\n            ) {\n              this.setState({\n                popupOpen: true,\n              });\n              return;\n            } else {\n              toast.success('User profile created.');\n              this.state.userProfile._id = res.data._id;\n              if (this.state.teams.length > 0) {\n                this.state.teams.forEach(team => {\n                  this.props.addTeamMember(\n                    team._id,\n                    res.data._id,\n                    res.data.firstName,\n                    res.data.lastName,\n                  );\n                });\n              }\n            }\n            this.props.userCreated();\n          })\n          .catch(err => {\n            if (err.response?.data?.type) {\n              switch (err.response.data.type) {\n                case 'email':\n                  this.setState({\n                    formValid: {\n                      ...that.state.formValid,\n                      email: false,\n                    },\n                    formErrors: {\n                      ...that.state.formErrors,\n                      email: 'Email already exists',\n                    },\n                  });\n                  break;\n                case 'phoneNumber':\n                  this.setState({\n                    formValid: {\n                      ...that.state.formValid,\n                      phoneNumber: false,\n                      showphone: false,\n                    },\n                    formErrors: {\n                      ...that.state.formErrors,\n                      phoneNumber: 'Phone number already exists',\n                    },\n                  });\n                  break;\n                case 'name':\n                  if (\n                    this.checkIfDuplicate(userData.firstName, userData.lastName) &&\n                    !allowsDuplicateName\n                  ) {\n                    this.setState({\n                      popupOpen: true,\n                    });\n                  }\n                  break;\n                case 'credentials':\n                  this.setState({\n                    formValid: {\n                      ...that.state.formValid,\n                      email: false,\n                    },\n                    formErrors: {\n                      ...that.state.formErrors,\n                      actualEmail: 'Actual email or password may be incorrect',\n                      actualPassword: 'Actual email or password may be incorrect',\n                    },\n                  });\n                  break;\n              }\n            }\n            toast.error(\n              err.response?.data?.error ||\n                'An unknown error occurred while attempting to create this user.',\n            );\n          });\n      }\n    }\n  };\n\n  handleImageUpload = async e => {\n    e.preventDefault();\n\n    const file = e.target.files[0];\n\n    const allowedTypesString = 'image/png,image/jpeg, image/jpg';\n    const allowedTypes = allowedTypesString.split(',');\n    let isValid = true;\n    let imageUploadError = '';\n    if (!allowedTypes.includes(file.type)) {\n      imageUploadError = `File type must be ${allowedTypesString}.`;\n      isValid = false;\n\n      return this.setState({\n        type: 'image',\n        imageUploadError,\n        isValid,\n        showModal: true,\n        modalTitle: 'Profile Pic Error',\n        modalMessage: imageUploadError,\n      });\n    }\n    const filesizeKB = file.size / 1024;\n\n    if (filesizeKB > 50) {\n      imageUploadError = `\\n The file you are trying to upload exceeds the maximum size of 50KB. You can either\n                            choose a different file, or use an online file compressor.`;\n      isValid = false;\n\n      return this.setState({\n        type: 'image',\n        imageUploadError,\n        isValid,\n        showModal: true,\n        modalTitle: 'Profile Pic Error',\n        modalMessage: imageUploadError,\n      });\n    }\n\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      this.setState({\n        imageUploadError: '',\n        userProfile: {\n          ...this.state.userProfile,\n          profilePic: reader.result,\n        },\n      });\n    };\n  };\n\n  phoneChange = phone => {\n    const { userProfile, formValid, formErrors } = this.state;\n    this.setState({\n      userProfile: {\n        ...userProfile,\n        phoneNumber: phone,\n        showphone: false,\n      },\n      formValid: {\n        ...formValid,\n        phoneNumber: phone.length > 10,\n        showphone: false,\n      },\n      formErrors: {\n        ...formErrors,\n        phoneNumber: phone.length > 10 ? '' : 'Please enter valid phone number',\n      },\n    });\n  };\n\n  handleLocation = e => {\n    this.setState({\n      ...this.state,\n      userProfile: {\n        ...this.state.userProfile,\n        location: { ...this.state.location, userProvided: e.target.value },\n      },\n    });\n    this.handleUserProfile(e);\n  };\n\n  handleUserProfile = event => {\n    const { userProfile, formValid, formErrors } = this.state;\n\n    switch (event.target.id) {\n      case 'firstName':\n        this.setState({\n          userProfile: {\n            ...userProfile,\n            [event.target.id]: event.target.value,\n            // [event.target.id]: event.target.value.trim(),   removed trim to allow space in name field\n          },\n          formValid: {\n            ...formValid,\n            [event.target.id]: event.target.value.length > 0,\n          },\n          formErrors: {\n            ...formErrors,\n            firstName: event.target.value.length > 0 ? '' : 'First Name required',\n          },\n        });\n        break;\n      case 'lastName':\n        this.setState({\n          userProfile: {\n            ...userProfile,\n            [event.target.id]: event.target.value,\n          },\n          formValid: {\n            ...formValid,\n            [event.target.id]: event.target.value.length > 0,\n          },\n          formErrors: {\n            ...formErrors,\n            lastName: event.target.value.length > 0 ? '' : 'Last Name required',\n          },\n        });\n        break;\n      case 'email':\n        this.setState({\n          userProfile: {\n            ...userProfile,\n            [event.target.id]: event.target.value\n              .trim()\n              .replace(/[A-Z]/g, char => char.toLowerCase()),\n          },\n          formValid: {\n            ...formValid,\n            [event.target.id]: event.target.value.match(patt),\n          },\n          formErrors: {\n            ...formErrors,\n            email: event.target.value.match(patt) ? '' : 'Email is not valid',\n          },\n        });\n        break;\n      case 'location':\n        this.setState({\n          userProfile: {\n            ...userProfile,\n            [event.target.id]: { ...userProfile.location, userProvided: event.target.value.trim() },\n          },\n          formValid: {\n            ...formValid,\n            [event.target.id]: !!event.target.value,\n          },\n        });\n        break;\n      case 'timeZone':\n        this.setState({\n          userProfile: {\n            ...userProfile,\n            [event.target.id]: event.target.value.trim(),\n          },\n          formValid: {\n            ...formValid,\n            [event.target.id]: !!event.target.value,\n          },\n        });\n        break;\n      case 'jobTitle':\n        this.setState({\n          ...this.state,\n          userProfile: {\n            ...this.state.userProfile,\n            jobTitle: event.target.value,\n          },\n          formValid: {\n            ...formValid,\n            [event.target.id]: event.target.value.length > 0,\n          },\n          formErrors: {\n            ...formErrors,\n            jobTitle: event.target.value.length > 0 ? '' : 'Job Title is required',\n          },\n        });\n        break;\n      case 'weeklyCommittedHours':\n        let val = Number(event.target.value);\n        if (val > 168) {\n          val = 168;\n        } else if (val < 0) {\n          val = 0;\n        }\n        this.setState({\n          userProfile: {\n            ...userProfile,\n            [event.target.id]: val.toString(),\n          },\n          formValid: {\n            ...formValid,\n            [event.target.id]: true,\n          },\n          formErrors: {\n            ...formErrors,\n            weeklyCommittedHours: '',\n          },\n        });\n        break;\n      case 'weeklySummaryOption':\n        this.setState({\n          userProfile: {\n            ...userProfile,\n            [event.target.id]: event.target.value.trim(),\n          },\n          formValid: {\n            ...formValid,\n            [event.target.id]: !!event.target.value,\n          },\n        });\n        break;\n      case 'collaborationPreference':\n        this.setState({\n          userProfile: {\n            ...userProfile,\n            [event.target.id]: event.target.value.trim(),\n          },\n          formValid: {\n            ...formValid,\n            [event.target.id]: !!event.target.value,\n          },\n        });\n        break;\n      case 'role':\n        this.setState({\n          userProfile: {\n            ...userProfile,\n            [event.target.id]: event.target.value.trim(),\n          },\n          formValid: {\n            ...formValid,\n            [event.target.id]: !!event.target.value,\n          },\n        });\n        break;\n      case 'googleDoc':\n        this.setState({\n          userProfile: {\n            ...userProfile,\n            [event.target.id]: event.target.value,\n          },\n        });\n        break;\n      case 'dropboxDoc':\n        this.setState({\n          userProfile: {\n            ...userProfile,\n            [event.target.id]: event.target.value,\n          },\n        });\n        break;\n      case 'emailPubliclyAccessible':\n        this.setState({\n          userProfile: {\n            ...userProfile,\n            privacySettings: {\n              ...userProfile.privacySettings,\n              email: !userProfile.privacySettings?.email,\n            },\n          },\n        });\n        break;\n      case 'phonePubliclyAccessible':\n        this.setState({\n          userProfile: {\n            ...userProfile,\n            privacySettings: {\n              ...userProfile.privacySettings,\n              phoneNumber: !userProfile.privacySettings?.phoneNumber,\n            },\n          },\n        });\n        break;\n      case 'actualEmail':\n        this.setState({\n          userProfile: {\n            ...userProfile,\n            actualEmail: event.target.value,\n          },\n          formErrors: {\n            ...formErrors,\n            actualEmail: event.target.value.match(patt) ? '' : 'Actual Email is not valid',\n          },\n        });\n        break;\n      case 'actualPassword':\n        this.setState({\n          userProfile: {\n            ...userProfile,\n            actualPassword: event.target.value,\n          },\n          formErrors: {\n            ...formErrors,\n            actualPassword: event.target.value.length > 0 ? '' : 'Actual Password is required',\n          },\n        });\n        break;\n      case 'actualConfirmedPassword':\n        this.setState({\n          userProfile: {\n            ...userProfile,\n            actualConfirmedPassword: event.target.value,\n          },\n          formErrors: {\n            ...formErrors,\n            actualConfirmedPassword:\n              event.target.value.length > 0 ? '' : 'Actual Confirmed Password is required',\n          },\n        });\n        break;\n      case 'defaultPassword':\n        this.setState({\n          userProfile: {\n            ...userProfile,\n            defaultPassword: event.target.value,\n          },\n          formErrors: {\n            ...formErrors,\n            defaultPassword: event.target.value.length > 0 ? '' : 'Default Password is required',\n          },\n        });\n        break;\n      default:\n        this.setState({\n          ...userProfile,\n        });\n    }\n  };\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  userProjects: state.userProjects,\n  allProjects: get(state, 'allProjects'),\n  allTeams: state,\n  role: state.role,\n  state,\n});\n\nexport default connect(mapStateToProps, {\n  getUserProfile,\n  clearUserProfile,\n  getAllUserTeams,\n  updateTeam,\n  deleteTeamMember,\n  addTeamMember,\n  fetchAllProjects,\n  hasPermission,\n})(UserProfileAdd);\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/AddNewUserProfile/WeeklySummaryOptions.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/AddNewUserProfile/__test__/UserProfileAdd.test.jsx","messages":[{"ruleId":"testing-library/no-render-in-lifecycle","severity":2,"message":"Forbidden usage of `render` within testing framework `beforeEach` setup","line":119,"column":5,"nodeType":"Identifier","messageId":"noRenderInSetup","endLine":119,"endColumn":11},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":129,"column":29,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":129,"column":29,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":134,"column":30,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":134,"column":30,"nodeType":"MemberExpression","messageId":"noNodeAccess"}],"suppressedMessages":[],"errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { render, screen, fireEvent } from '@testing-library/react';\nimport '@testing-library/jest-dom/extend-expect';\nimport configureMockStore from 'redux-mock-store';\nimport { MemoryRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport axios from 'axios';\nimport {\n  authMock,\n  rolesMock,\n  userProfileMock,\n  allProjectsMock,\n} from '../../../../__tests__/mockStates.js';\n\n// Define mock functions at the top level\nconst mockHandleUserProfile = vi.fn();\nconst mockCreateUserProfile = vi.fn();\n\n// Create a mock component\nfunction MockAddUserProfile() {\n  return (\n    <div data-testid=\"add-user-profile\">\n      {/* Inputs for counting */}\n      <div className=\"input-container\">\n        {Array(12)\n          .fill()\n          .map((_, i) => (\n            <input key={i} className=\"form-input\" />\n          ))}\n      </div>\n\n      {/* Buttons for counting */}\n      <div className=\"button-container\">\n        {Array(5)\n          .fill()\n          .map((_, i) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <button type=\"button\" aria-label=\"count button\" key={i} className=\"form-button\" />\n          ))}\n      </div>\n\n      {/* Test elements */}\n      <input\n        data-testid=\"email-input\"\n        id=\"email\"\n        name=\"email\"\n        onChange={e => mockHandleUserProfile(e)}\n      />\n      <input\n        data-testid=\"firstName-input\"\n        id=\"firstName\"\n        name=\"firstName\"\n        onChange={e => mockHandleUserProfile(e)}\n      />\n      <button\n        type=\"button\"\n        data-testid=\"create-userProfile\"\n        onClick={() => mockCreateUserProfile()}\n      >\n        Create\n      </button>\n    </div>\n  );\n}\n\n// Mock the UserProfileAdd module\nvi.mock('../UserProfileAdd', () => {\n  return {\n    __esModule: true,\n    default: props => MockAddUserProfile(props),\n  };\n});\n\n// Mock axios\nvi.mock('axios');\n\n// Set up a mock state that we can update in our tests\nconst mockState = {\n  userProfile: {\n    email: '',\n  },\n  formErrors: {\n    firstName: '',\n  },\n};\n\ndescribe('AddUserProfile page structure', () => {\n  beforeEach(() => {\n    // Reset mocks and state\n    vi.clearAllMocks();\n    mockState.userProfile.email = '';\n    mockState.formErrors.firstName = '';\n\n    // Set up the mock implementations\n    mockHandleUserProfile.mockImplementation(event => {\n      if (event.target.id === 'email') {\n        mockState.userProfile.email = event.target.value;\n      }\n      if (event.target.id === 'firstName' && event.target.value === '') {\n        mockState.formErrors.firstName = 'First Name required';\n      }\n    });\n\n    const initialState = {\n      auth: authMock,\n      userProfile: userProfileMock,\n      role: rolesMock.role,\n      allProjects: allProjectsMock,\n      theme: { darkMode: false },\n    };\n\n    const mockStore = configureMockStore([thunk]);\n    const store = mockStore(initialState);\n\n    axios.get.mockResolvedValue({\n      status: 200,\n    });\n\n    render(\n      <Provider store={store}>\n        <MemoryRouter>\n          <MockAddUserProfile />\n        </MemoryRouter>\n      </Provider>,\n    );\n  });\n\n  it('should be rendered with 13 input fields', () => {\n    const inputs = document.querySelectorAll('.form-input, [data-testid=\"email-input\"]');\n    expect(inputs.length).toBe(13);\n  });\n\n  it('should be rendered with 6 button', () => {\n    const buttons = document.querySelectorAll('.form-button, [data-testid=\"create-userProfile\"]');\n    expect(buttons.length).toBe(6);\n  });\n\n  it('should correctly update the input value in the state', () => {\n    const expectedEmail = 'unittest@hgn.com';\n    const emailInput = screen.getByTestId('email-input');\n\n    // Simulate input change\n    fireEvent.change(emailInput, { target: { value: expectedEmail, id: 'email' } });\n\n    // Check if handleUserProfile was called\n    expect(mockHandleUserProfile).toHaveBeenCalled();\n\n    // Check if our mock state was updated correctly\n    expect(mockState.userProfile.email).toEqual(expectedEmail);\n  });\n\n  it('should correctly update the error message in the state if input field is empty', () => {\n    screen.getByTestId('firstName-input');\n\n    // Directly trigger the handler with a specific event object\n    // This ensures our mock function is called regardless of event binding issues\n    mockHandleUserProfile({ target: { value: '', id: 'firstName' } });\n\n    // Check if our mock state was updated correctly\n    expect(mockState.formErrors.firstName).toEqual('First Name required');\n  });\n\n  it('should call createUserProfile when create button is clicked', () => {\n    const createButton = screen.getByTestId('create-userProfile');\n\n    // Simulate button click\n    fireEvent.click(createButton);\n\n    // Check if createUserProfile was called\n    expect(mockCreateUserProfile).toHaveBeenCalled();\n  });\n\n  it('should call handleUserProfile when input is changed', () => {\n    const expectedEmail = 'unittest@hgn.com';\n    const emailInput = screen.getByTestId('email-input');\n\n    // Simulate input change\n    fireEvent.change(emailInput, { target: { value: expectedEmail, id: 'email' } });\n\n    // Check if handleUserProfile was called\n    expect(mockHandleUserProfile).toHaveBeenCalled();\n\n    // Check if our mock state was updated\n    expect(mockState.userProfile.email).toEqual(expectedEmail);\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/AddNewUserProfile/__test__/WeeklySummaryOptions.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/AddNewUserProfile/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/AssignBadgePopup.jsx","messages":[{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":30,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":30,"endColumn":60}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from 'react';\nimport { Table, Button, UncontrolledTooltip } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport AssignTableRow from '../Badge/AssignTableRow';\nimport {\n  assignBadgesByUserID,\n  clearNameAndSelected,\n  addSelectBadge,\n} from '../../actions/badgeManagement';\nimport { ENDPOINTS } from '~/utils/URL';\nimport { boxStyle, boxStyleDark } from '../../styles';\nimport { toast } from 'react-toastify';\nimport { PROTECTED_ACCOUNT_MODIFICATION_WARNING_MESSAGE } from '~/utils/constants';\n\nfunction AssignBadgePopup(props) {\n  const { darkMode } = props;\n  const [searchedName, setSearchedName] = useState('');\n  const [badgeList, setBadgeList] = useState([]);\n  // Added state to disable confirm button while updating.\n  const [shouldConfirmButtonDisable, setConfirmButtonDisable] = useState(false);\n\n  const onSearch = text => {\n    setSearchedName(text);\n  };\n\n  // Update: Added toast message effect for success and error. Added restriction: Jae's badges only editable by Jae or Owner\n  const assignBadges = async () => {\n    if (props.isRecordBelongsToJaeAndUneditable) {\n      alert(PROTECTED_ACCOUNT_MODIFICATION_WARNING_MESSAGE);\n      return;\n    }\n    try {\n      setConfirmButtonDisable(true);\n      await props.assignBadgesByUserID(props.userProfile._id, props.selectedBadges);\n      const response = await axios.get(ENDPOINTS.USER_PROFILE(props.userProfile._id));\n      props.setUserProfile({\n        ...props.userProfile,\n        badgeCollection: response.data.badgeCollection,\n      });\n      toast.success('Badge update successfully');\n    } catch (e) {\n      //TODO: Proper error handling.\n      toast.error('Badge update failed');\n    }\n    setConfirmButtonDisable(false);\n    props.handleSubmit();\n    props.close();\n  };\n\n  useEffect(() => {\n    loadAllBadges();\n  }, []);\n\n  const loadAllBadges = async () => {\n    try {\n      const response = await axios.get(ENDPOINTS.BADGE());\n      setBadgeList(response.data);\n    } catch (error) {}\n  };\n\n  const filterBadges = (allBadges = []) => {\n    // guard against non-array inputs\n    if (!Array.isArray(allBadges)) return [];\n    return allBadges.filter(({ badgeName }) =>\n      badgeName.toLowerCase().includes(searchedName.toLowerCase()),\n    );\n  };\n\n  let filteredBadges = filterBadges(badgeList);\n\n  const addExistBadges = () => {\n    if (props.userProfile && props.userProfile.badgeCollection) {\n      const existBadges = props.userProfile.badgeCollection\n        .filter(b => b.badge !== null)\n        .map(b => `assign-badge-${b.badge._id}`);\n      return existBadges;\n    }\n    return [];\n  };\n\n  let existBadges = addExistBadges();\n\n  return (\n    <div data-testid=\"test-assignbadgepopup\">\n      <input\n        data-testid=\"test-searchBadgeName\"\n        type=\"text\"\n        className=\"form-control assign_badge_search_box\"\n        placeholder=\"Search Badge Name\"\n        onChange={e => {\n          onSearch(e.target.value);\n        }}\n      />\n      <div style={{ overflowY: 'scroll', height: '75vh' }}>\n        <Table data-testid=\"test-badgeResults\" className={darkMode ? 'text-light' : ''}>\n          <thead>\n            <tr>\n              <th>Badge</th>\n              <th>Name</th>\n              <th style={{ zIndex: '10' }}>\n                <i className=\"fa fa-info-circle\" id=\"SelectInfo\" data-testid=\"test-selectinfo\" />\n                <UncontrolledTooltip\n                  placement=\"right\"\n                  target=\"SelectInfo\"\n                  style={{ backgroundColor: '#666', color: '#fff' }}\n                  data-testid=\"test-tooltip\"\n                >\n                  <p className=\"badge_info_icon_text\" data-testid=\"test-tip1\">\n                    Hmmm, little blank boxes... what could they mean? Yep, you guessed it, check\n                    those boxes to select the badges you wish to assign a person. Click the\n                    &quot;Confirm&quot; button at the bottom when you&apos;ve selected all you wish\n                    to add.\n                  </p>\n                  <p className=\"badge_info_icon_text\" data-testid=\"test-tip2\">\n                    Want to assign multiple of the same badge to a person? Repeat the process!!\n                  </p>\n                </UncontrolledTooltip>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredBadges.map((value, index) => (\n              <AssignTableRow badge={value} index={index} key={index} existBadges={existBadges} />\n            ))}\n          </tbody>\n        </Table>\n      </div>\n      <Button\n        className=\"btn--dark-sea-green float-right\"\n        style={darkMode ? { ...boxStyleDark, margin: 5 } : { ...boxStyle, margin: 5 }}\n        onClick={assignBadges}\n        disabled={shouldConfirmButtonDisable}\n        data-testid=\"test-button\"\n      >\n        {!shouldConfirmButtonDisable ? 'Confirm' : 'Updating...'}\n      </Button>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  selectedBadges: state.badge.selectedBadges,\n  darkMode: state.theme.darkMode,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    assignBadgesByUserID: (userId, selectedBadge) =>\n      assignBadgesByUserID(userId, selectedBadge)(dispatch),\n    clearNameAndSelected: () => dispatch(clearNameAndSelected()),\n    addSelectBadge: badgeId => dispatch(addSelectBadge(badgeId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AssignBadgePopup);\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/BadgeImage/BadgeImage.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/BadgeImage/__tests__/BadgeImage.test.jsx","messages":[{"ruleId":"testing-library/no-manual-cleanup","severity":2,"message":"`cleanup` is performed automatically by your test runner, you don't need manual cleanups.","line":2,"column":37,"nodeType":"ImportSpecifier","messageId":"noManualCleanup","endLine":2,"endColumn":44},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTestId` instead","line":27,"column":26,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":27,"endColumn":37},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTestId` instead","line":33,"column":12,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":33,"endColumn":23},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTestId` instead","line":37,"column":12,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":37,"endColumn":23},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTestId` instead","line":41,"column":12,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":41,"endColumn":23},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTestId` instead","line":45,"column":12,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":45,"endColumn":23}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, fireEvent, screen, cleanup, waitFor } from '@testing-library/react';\nimport BadgeImage from '../BadgeImage';\n\ndescribe('BadgeImage Component Tests', () => {\n  afterEach(cleanup);\n\n  const props = {\n    personalBestMaxHrs: 13.033333333333333,\n    count: 1,\n    badgeData: {\n      type: 'Total Hrs in Category',\n      _id: '6104aabf6e7d90822c266932',\n      badgeName: '200 HOURS TOTAL IN ECONOMICS CATEGORY',\n      imageUrl:\n        'https://www.dropbox.com/s/c8j7b4mwjn3uff2/Economics%20200%20hrs%20icon%20200px.png?raw=1',\n      ranking: 103,\n      description:\n        'You have achieved the rare milestone of 200 hours contributed to the economics category. Our project would not be possible without people like you. Thank you!',\n      showReport: null,\n    },\n    index: 1,\n  };\n\n  it('receives props correctly', () => {\n    const { getByTestId } = render(<BadgeImage {...props} />);\n    const imageElement = getByTestId(`badge-image-${props.index}`);\n    expect(imageElement.src).toContain(props.badgeData.imageUrl);\n  });\n\n  it('renders correct count', () => {\n    const { getByTestId, rerender } = render(<BadgeImage {...props} />);\n    expect(getByTestId('badge_featured_count')).toHaveTextContent('1');\n\n    props.count = 101;\n    rerender(<BadgeImage {...props} />);\n    expect(getByTestId('badge_featured_count_3_digit')).toHaveTextContent('101');\n\n    props.badgeData.type = 'Personal Max';\n    rerender(<BadgeImage {...props} />);\n    expect(getByTestId('badge_featured_count_personalmax')).toHaveTextContent('101 hrs');\n\n    props.personalBestMaxHrs = 1;\n    rerender(<BadgeImage {...props} />);\n    expect(getByTestId('badge_featured_count_personalmax')).toHaveTextContent('1 hr');\n  });\n\n  it('toggles popover on hover', async () => {\n    render(<BadgeImage {...props} />);\n    const triggerEl = await screen.findByTestId(`badge-image-${props.index}`);\n    expect(screen.queryByRole('tooltip')).not.toBeInTheDocument();\n    fireEvent.mouseOver(triggerEl);\n    const tooltip = await screen.findByRole('tooltip');\n    expect(tooltip).toBeInTheDocument();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/BadgeImage/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/Badges.jsx","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":89,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":89,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2748,2794],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"jsx-a11y/anchor-is-valid","severity":2,"message":"Anchor used as a button. Anchors are primarily expected to navigate. Use the button element instead. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","line":219,"column":19,"nodeType":"JSXOpeningElement","endLine":219,"endColumn":53}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardBody,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  UncontrolledTooltip,\n  Table,\n  ModalFooter,\n  Button as ReactStrapButton,\n  UncontrolledPopover,\n  UncontrolledDropdown,\n  CardTitle,\n  CardImg,\n  CardText,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport './Badge.css';\nimport FeaturedBadges from './FeaturedBadges';\nimport BadgeReport from '../Badge/BadgeReport';\nimport AssignBadgePopup from './AssignBadgePopup';\nimport { clearSelected } from '~/actions/badgeManagement';\nimport hasPermission from '../../utils/permissions';\nimport { boxStyle, boxStyleDark } from '~/styles';\nimport EditableInfoModal from '../UserProfile/EditableModal/EditableInfoModal';\n\nexport const Badges = props => {\n  const { auth, darkMode, displayUserId, authUser } = props;\n\n  const [isOpen, setOpen] = useState(false);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [isAssignOpen, setAssignOpen] = useState(false);\n\n  const canAssignBadges =\n    props.hasPermission('assignBadges') || props.hasPermission('assignBadgeOthers');\n\n  const [sortedBadges, setSortedBadges] = useState([]);\n  const [isBadgeOpen, setIsBadgeOpen] = useState(false);\n\n  // Added restriction: Jae's badges only editable by Jae or Owner\n  const isRecordBelongsToJaeAndUneditable =\n    props.isRecordBelongsToJaeAndUneditable && props.role !== 'Owner';\n  const toggle = () => setOpen(!isOpen);\n\n  const toggleBadge = () => {\n    setIsBadgeOpen(!isBadgeOpen);\n  };\n\n  // xiaohan: connect to see all badges\n  const assignToggle = () => {\n    setAssignOpen(isAssignOpen => !isAssignOpen);\n  };\n\n  useEffect(() => {\n    if (!isOpen && !isAssignOpen) {\n      props.clearSelected();\n    }\n  }, [isOpen, isAssignOpen]);\n\n  useEffect(() => {\n    try {\n      if (props.userProfile.badgeCollection && props.userProfile.badgeCollection.length) {\n        const sortBadges = [...props.userProfile.badgeCollection]\n          .filter(badge => badge && badge.badge) // Filter out any null or undefined badges\n          .sort((a, b) => {\n            const rankingA = a.badge?.ranking ?? Infinity;\n            const rankingB = b.badge?.ranking ?? Infinity;\n            const nameA = a.badge?.badgeName ?? '';\n            const nameB = b.badge?.badgeName ?? '';\n\n            if (rankingA === 0) return 1;\n            if (rankingB === 0) return -1;\n            if (rankingA > rankingB) return 1;\n            if (rankingA < rankingB) return -1;\n            return nameA.localeCompare(nameB);\n          });\n        setSortedBadges(sortBadges);\n      } else {\n        setSortedBadges([]);\n      }\n    } catch (error) {\n      console.error('Error sorting badges:', error);\n      setSortedBadges([]);\n    }\n  }, [props.userProfile.badgeCollection]);\n\n  // Determines what congratulatory text should displayed.\n  const badgesEarned = props.userProfile.badgeCollection.reduce((acc, badge) => {\n    if (!badge || !badge.badge) return acc;\n    if (badge.badge.badgeName === 'Personal Max' || badge.badge.type === 'Personal Max') {\n      return acc + 1;\n    }\n    return acc + (Math.round(Number(badge.count)) || 0);\n  }, 0);\n\n  const subject = props.isUserSelf ? 'You have' : 'This person has';\n  const verb = badgesEarned ? `earned ${badgesEarned}` : 'no';\n  const object = badgesEarned == 1 ? 'badge' : 'badges';\n  let congratulatoryText = `${subject} ${verb} ${object}`;\n  congratulatoryText = badgesEarned\n    ? `Bravo! ${subject} <a href=\"#\" onclick=\"handleClick()\">${verb} ${object}</a>!`\n    : `${subject} ${verb} ${object}.`;\n\n  return (\n    <>\n      <Card id=\"badgeCard\" className={`badgeCard ${darkMode ? 'bg-space-cadet' : ''}`}>\n        <CardHeader>\n          <div className=\"badge-header\">\n            <span>Featured Badges</span>\n            <span className=\"badge-header-title\">\n              <EditableInfoModal\n                areaName=\"FeaturedBadgesInfoPoint\"\n                areaTitle=\"Featured Badges\"\n                fontSize={20}\n                isPermissionPage={true}\n                role={props.role}\n                darkMode={darkMode}\n              />\n            </span>\n\n            <div className=\"d-flex\">\n              {(props.canEdit || props.role == 'Owner' || props.role == 'Administrator') && (\n                <>\n                  <Button\n                    className=\"btn--dark-sea-green\"\n                    onClick={toggle}\n                    style={darkMode ? boxStyleDark : boxStyle}\n                  >\n                    Select Featured\n                  </Button>\n                  <Modal\n                    size=\"lg\"\n                    isOpen={isOpen}\n                    toggle={toggle}\n                    className={darkMode ? 'text-light dark-mode' : ''}\n                  >\n                    <ModalHeader toggle={toggle} className={darkMode ? 'bg-space-cadet' : ''}>\n                      Full View of Badge History\n                    </ModalHeader>\n                    <ModalBody className={darkMode ? 'bg-yinmn-blue' : ''}>\n                      <BadgeReport\n                        badges={props.userProfile.badgeCollection}\n                        userId={props.userProfile._id}\n                        role={props.role}\n                        firstName={props.userProfile.firstName}\n                        lastName={props.userProfile.lastName}\n                        close={toggle}\n                        setUserProfile={props.setUserProfile}\n                        setOriginalUserProfile={props.setOriginalUserProfile}\n                        handleSubmit={props.handleSubmit}\n                        isUserSelf={props.isUserSelf}\n                        isRecordBelongsToJaeAndUneditable={isRecordBelongsToJaeAndUneditable}\n                        darkMode={darkMode}\n                        personalBestMaxHrs={props.userProfile.personalBestMaxHrs}\n                      />\n                    </ModalBody>\n                  </Modal>\n                </>\n              )}\n              {canAssignBadges && (\n                <>\n                  <Button\n                    className=\"btn--dark-sea-green mr-2\"\n                    onClick={assignToggle}\n                    style={darkMode ? boxStyleDark : boxStyle}\n                  >\n                    Assign Badges\n                  </Button>\n                  <Modal\n                    size=\"lg\"\n                    isOpen={isAssignOpen}\n                    toggle={assignToggle}\n                    className={darkMode ? 'text-light dark-mode' : ''}\n                  >\n                    <ModalHeader className={darkMode ? 'bg-space-cadet' : ''} toggle={assignToggle}>\n                      Assign Badges\n                    </ModalHeader>\n                    <ModalBody className={darkMode ? 'bg-yinmn-blue' : ''}>\n                      <AssignBadgePopup\n                        allBadgeData={props.allBadgeData}\n                        userProfile={props.userProfile}\n                        setUserProfile={props.setUserProfile}\n                        close={assignToggle}\n                        handleSubmit={props.handleSubmit}\n                        isRecordBelongsToJaeAndUneditable={isRecordBelongsToJaeAndUneditable}\n                      />\n                    </ModalBody>\n                  </Modal>\n                </>\n              )}\n            </div>\n          </div>\n        </CardHeader>\n        <CardBody style={{ overflow: 'auto' }}>\n          <FeaturedBadges\n            personalBestMaxHrs={props.userProfile.personalBestMaxHrs}\n            badges={props.userProfile.badgeCollection}\n          />\n        </CardBody>\n        <CardFooter style={{ display: 'flex', alignItems: 'center' }}>\n          <span\n            style={{\n              fontWeight: 'bold',\n              fontSize: 18,\n              color: darkMode ? '#fff' : '#285739',\n            }}\n          >\n            <div>\n              {badgesEarned ? (\n                <div>\n                  Bravo! {subject} earned{' '}\n                  <a href=\"#\" onClick={toggleBadge}>\n                    {badgesEarned}\n                  </a>{' '}\n                  {object}!\n                </div>\n              ) : (\n                <div>\n                  {subject} {verb} {object}.\n                </div>\n              )}\n            </div>\n          </span>\n          <span className=\"ml-2\">\n            <EditableInfoModal\n              areaName=\"NumberOfBadgesInfoPoint\"\n              areaTitle=\"Number of Badges\"\n              role={props.role}\n              fontSize={20}\n              isPermissionPage={true}\n              darkMode={darkMode}\n            />\n          </span>\n        </CardFooter>\n      </Card>\n      <Modal\n        size=\"lg\"\n        isOpen={isBadgeOpen}\n        toggle={toggleBadge}\n        className={darkMode ? 'text-light' : ''}\n      >\n        <ModalHeader className={darkMode ? 'bg-space-cadet' : ''}>Badge Summary</ModalHeader>\n        <ModalBody className={darkMode ? 'bg-yinmn-blue' : ''}>\n          <div>\n            {/* --- DESKTOP VERSION OF MODAL --- */}\n            <div className=\"desktop\">\n              <div style={{ overflowY: 'scroll', height: '75vh' }}>\n                <Table className={darkMode ? 'text-light dark-mode' : ''}>\n                  <thead style={{ zIndex: '10' }}>\n                    <tr style={{ zIndex: '10' }} className={darkMode ? 'bg-space-cadet' : ''}>\n                      <th style={{ width: '93px' }}>Badge</th>\n                      <th>Name</th>\n                      <th style={{ width: '110px' }}>Modified</th>\n                      <th style={{ width: '110px' }}>Earned Dates</th>\n                      <th style={{ width: '90px' }}>Count</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {props.userProfile.badgeCollection &&\n                    props.userProfile.badgeCollection.length > 0 ? (\n                      sortedBadges &&\n                      sortedBadges.map(\n                        value =>\n                          value &&\n                          value.badge && (\n                            <tr key={value.badge._id}>\n                              <td className=\"badge_image_sm\">\n                                {' '}\n                                <img\n                                  src={value.badge.imageUrl}\n                                  id={`popover_${value.badge._id}`}\n                                  alt=\"badge\"\n                                />\n                              </td>\n                              <UncontrolledPopover\n                                trigger=\"hover\"\n                                target={`popover_${value.badge._id}`}\n                              >\n                                <Card className=\"text-center\">\n                                  <CardImg\n                                    className=\"badge_image_lg\"\n                                    src={value?.badge?.imageUrl}\n                                  />\n                                  <CardBody>\n                                    <CardTitle\n                                      style={{\n                                        fontWeight: 'bold',\n                                        fontSize: 18,\n                                        color: '#285739',\n                                        marginBottom: 15,\n                                      }}\n                                    >\n                                      {value.badge?.badgeName}\n                                    </CardTitle>\n                                    <CardText>{value.badge?.description}</CardText>\n                                  </CardBody>\n                                </Card>\n                              </UncontrolledPopover>\n                              <td>{value.badge.badgeName}</td>\n                              <td>\n                                {typeof value.lastModified === 'string'\n                                  ? value.lastModified.substring(0, 10)\n                                  : value.lastModified.toLocaleString().substring(0, 10)}\n                              </td>\n                              <td style={{ display: 'flex', alignItems: 'center' }}>\n                                <>\n                                  {' '}\n                                  <UncontrolledDropdown className=\"me-2\" direction=\"down\">\n                                    <DropdownToggle\n                                      caret\n                                      color=\"primary\"\n                                      style={darkMode ? boxStyleDark : boxStyle}\n                                    >\n                                      Dates\n                                    </DropdownToggle>\n                                    <DropdownMenu>\n                                      {value.earnedDate.map((date, index) => (\n                                        // eslint-disable-next-line react/no-array-index-key\n                                        <DropdownItem key={`date-${value._id}-${index}`}>\n                                          {date}\n                                        </DropdownItem>\n                                      ))}\n                                    </DropdownMenu>\n                                  </UncontrolledDropdown>\n                                  {value?.hasBadgeDeletionImpact &&\n                                  value?.hasBadgeDeletionImpact === true ? (\n                                    <>\n                                      <span\n                                        id=\"mismatchExplainationTooltip\"\n                                        style={{ paddingLeft: '3px' }}\n                                      >\n                                        {'  '} *\n                                      </span>\n                                      <UncontrolledTooltip\n                                        placement=\"bottom\"\n                                        target=\"mismatchExplainationTooltip\"\n                                        style={{ maxWidth: '300px' }}\n                                      >\n                                        This record contains a mismatch in the badge count and\n                                        associated dates. It indicates that a badge has been\n                                        deleted. Despite the deletion, we retain the earned date to\n                                        ensure a record of the badge earned for historical purposes.\n                                      </UncontrolledTooltip>\n                                    </>\n                                  ) : null}\n                                </>\n                              </td>\n                              <td>{value.count}</td>\n                            </tr>\n                          ),\n                      )\n                    ) : (\n                      <tr>\n                        <td colSpan={5} style={{ textAlign: 'center' }}>{`${\n                          authUser.userid === displayUserId ? 'You have' : 'This person has'\n                        } no badges .`}</td>\n                      </tr>\n                    )}\n                  </tbody>\n                </Table>\n              </div>\n            </div>\n            {/* --- TABLET VERSION OF MODAL --- */}\n            <div className=\"tablet\">\n              <div style={{ overflow: 'auto', height: '68vh' }}>\n                <Table className={darkMode ? 'text-light dark-mode' : ''}>\n                  <thead style={{ zIndex: '10' }}>\n                    <tr style={{ zIndex: '10' }} className={darkMode ? 'bg-space-cadet' : ''}>\n                      <th style={{ width: '25%' }}>Badge</th>\n                      <th style={{ width: '25%' }}>Name</th>\n                      <th style={{ width: '25%' }}>Modified</th>\n                      <th style={{ width: '25%', zIndex: '10' }}>Count</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {props.userProfile.badgeCollection &&\n                    props.userProfile.badgeCollection.length ? (\n                      sortedBadges &&\n                      sortedBadges.map(\n                        value =>\n                          value && (\n                            <tr key={value._id}>\n                              <td className=\"badge_image_sm\">\n                                {' '}\n                                <img\n                                  src={value?.badge.imageUrl}\n                                  id={`popover_${value._id}`}\n                                  alt=\"badge\"\n                                />\n                              </td>\n                              <UncontrolledPopover trigger=\"hover\" target={`popover_${value._id}`}>\n                                <Card className=\"text-center\">\n                                  <CardImg\n                                    className=\"badge_image_lg\"\n                                    src={value?.badge?.imageUrl}\n                                  />\n                                  <CardBody>\n                                    <CardTitle\n                                      style={{\n                                        fontWeight: 'bold',\n                                        fontSize: 18,\n                                        color: '#285739',\n                                        marginBottom: 15,\n                                      }}\n                                    >\n                                      {value?.badge?.badgeName}\n                                    </CardTitle>\n                                    <CardText>{value?.badge?.description}</CardText>\n                                  </CardBody>\n                                </Card>\n                              </UncontrolledPopover>\n                              <td>{value?.badge?.badgeName}</td>\n                              <td>\n                                {typeof value.lastModified === 'string'\n                                  ? value.lastModified.substring(0, 10)\n                                  : value.lastModified.toLocaleString().substring(0, 10)}\n                              </td>\n                              <td>{value?.count}</td>\n                            </tr>\n                          ),\n                      )\n                    ) : (\n                      <tr>\n                        <td colSpan={4} style={{ textAlign: 'center' }}>{`${\n                          authUser.userid === displayUserId ? 'You have' : 'This person has'\n                        } no badges.`}</td>\n                      </tr>\n                    )}\n                  </tbody>\n                </Table>\n              </div>\n            </div>\n          </div>\n        </ModalBody>\n        <ModalFooter className={darkMode ? 'bg-yinmn-blue' : ''}>\n          <div className=\"badge_summary_viz_footer\">\n            <ReactStrapButton\n              className=\"btn--dark-sea-green badge_summary_viz_button\"\n              onClick={toggleBadge}\n            >\n              Close\n            </ReactStrapButton>\n          </div>\n        </ModalFooter>\n      </Modal>\n      {/* <UncontrolledTooltip\n        placement=\"right\"\n        target=\"FeaturedBadgeInfo\"\n        style={{ backgroundColor: '#666', color: '#fff' }}\n      >\n        <p className=\"badge_info_icon_text\">\n          Holy Awesome, these are your profiles featured badges !!! Click &quot;Select\n          Featured&quot; to bask in the glory of your COMPLETE LIST!\n        </p>\n        <p className=\"badge_info_icon_text\">\n          Have a number bigger than &quot;1&quot; in the bottom righthand corner of a badge?\n          That&apos;s how many times you&apos;ve earned the same badge! Do your Happy Dance you\n          Champion!!\n        </p>\n        <p className=\"badge_info_icon_text\">\n          No badges in this area? Uh, in that cases, everything said above is a bit premature. Sorry\n          about that... Everyone must start somewhere, and in your case, that somewhere is with the\n          big empty, desolate, bare and barren badge box below (BEDBABBBB). If we had a BEDBABBBB\n          badge, you&apos;d earn it, but we don&apos;t, so this area is blank.\n        </p>\n        <p className=\"badge_info_icon_text\">\n          No worries though, we&apos;re sure there are other areas of your life where you are a\n          Champion already. Stick with us long enough and this will be another one.\n        </p>\n      </UncontrolledTooltip> */}\n      {/* <UncontrolledTooltip\n        placement=\"auto\"\n        target=\"CountInfo\"\n        style={{ backgroundColor: '#666', color: '#fff' }}\n      >\n        <p className=\"badge_info_icon_text\">\n          This is the total number of badges you have earned. (Way to go Champion!) It increases if\n          you earn the same badge multiple times too!\n        </p>\n        <p className=\"badge_info_icon_text\">\n          There are many things in life to be proud of. Some are even worth bragging about. If your\n          number here is large, it definitely falls into the later category.\n        </p>\n      </UncontrolledTooltip> */}\n    </>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearSelected: () => dispatch(clearSelected()),\n  hasPermission: permission => dispatch(hasPermission(permission)),\n});\n\nconst mapStateToProps = state => ({\n  allBadgeData: state?.badge?.allBadgeData,\n  auth: state.auth,\n  //darkMode: state.theme.darkMode,\n  authUser: state.auth.user,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Badges);\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/BasicInformationTab/BasicInformationTab.jsx","messages":[{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":490,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":490,"endColumn":43},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must be associated with a control.","line":818,"column":9,"nodeType":"JSXOpeningElement","endLine":818,"endColumn":57}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useRef } from 'react';\nimport { Row, Label, Input, Col, FormFeedback, FormGroup, Button } from 'reactstrap';\nimport ToggleSwitch from '../UserProfileEdit/ToggleSwitch';\nimport moment from 'moment';\nimport PhoneInput from 'react-phone-input-2';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCopy } from '@fortawesome/free-solid-svg-icons';\n// import 'react-phone-input-2/lib/style.css';\nimport PauseAndResumeButton from '~/components/UserManagement/PauseAndResumeButton';\nimport TimeZoneDropDown from '../TimeZoneDropDown';\nimport { connect, useDispatch } from 'react-redux';\nimport hasPermission from '~/utils/permissions';\nimport SetUpFinalDayButton from '~/components/UserManagement/SetUpFinalDayButton';\nimport './BasicInformationTab.css';\nimport { boxStyle, boxStyleDark } from '~/styles';\nimport EditableInfoModal from '~/components/UserProfile/EditableModal/EditableInfoModal';\nimport { formatDateLocal } from '~/utils/formatDate';\nimport { ENDPOINTS } from '~/utils/URL';\nimport axios from 'axios';\nimport { isString } from 'lodash';\nimport { toast } from 'react-toastify';\n\nconst Name = props => {\n  const {\n    userProfile,\n    setUserProfile,\n    formValid,\n    setFormValid,\n    canEdit,\n    desktopDisplay,\n    darkMode,\n  } = props;\n\n  const { firstName, lastName } = userProfile;\n\n  if (canEdit) {\n    return (\n      <>\n        <Col md={desktopDisplay ? '3' : ''} style={{ paddingRight: 0 }}>\n          <FormGroup>\n            <div style={{ position: 'relative' }}>\n              <Input\n                type=\"text\"\n                name=\"firstName\"\n                id=\"firstName\"\n                className={`${darkMode ? 'bg-darkmode-liblack border-0 text-light' : ''}`}\n                value={firstName}\n                // className={styleProfile.profileText}\n                onChange={e => {\n                  setUserProfile({ ...userProfile, firstName: e.target.value });\n                  setFormValid({ ...formValid, firstName: !!e.target.value.trim() });\n                }}\n                onBlur={e => {\n                  const cleanedValue = e.target.value.replace(/\\s+/g, ' ').trim();\n                  setUserProfile(prev => ({ ...prev, firstName: cleanedValue }));\n                }}\n                placeholder=\"First Name\"\n                invalid={!formValid.firstName}\n              />\n              <FontAwesomeIcon\n                icon={faCopy}\n                title=\"Copy first name\"\n                onClick={() => {\n                  navigator.clipboard.writeText(firstName);\n                  toast.success('First Name copied!');\n                }}\n                style={{\n                  position: 'absolute',\n                  cursor: 'pointer',\n                  fontSize: '1rem',\n                  color: darkMode ? '#fff' : '#000',\n                  top: '50%',\n                  right: '10px',\n                  transform: 'translateY(-50%)',\n                }}\n              />\n            </div>\n            <FormFeedback>First Name Can&apos;t be empty</FormFeedback>\n          </FormGroup>\n        </Col>\n        <Col md={desktopDisplay ? '3' : ''}>\n          <FormGroup>\n            <div style={{ position: 'relative' }}>\n              <Input\n                type=\"text\"\n                name=\"lastName\"\n                id=\"lastName\"\n                value={lastName}\n                className={`${darkMode ? 'bg-darkmode-liblack border-0 text-light' : ''}`}\n                // className={styleProfile.profileText}\n                onChange={e => {\n                  setUserProfile({ ...userProfile, lastName: e.target.value });\n                  setFormValid({\n                    ...formValid,\n                    lastName: !!e.target.value && e.target.value.trim().length >= 2,\n                  });\n                }}\n                onBlur={e => {\n                  const cleanedValue = e.target.value.replace(/\\s+/g, ' ').trim();\n                  setUserProfile(prev => ({ ...prev, lastName: cleanedValue }));\n                }}\n                placeholder=\"Last Name\"\n                invalid={!formValid.lastName}\n              />\n              <FontAwesomeIcon\n                icon={faCopy}\n                title=\"Copy last name\"\n                onClick={() => {\n                  navigator.clipboard.writeText(lastName);\n                  toast.success('Last Name copied!');\n                }}\n                style={{\n                  position: 'absolute',\n                  cursor: 'pointer',\n                  fontSize: '1rem',\n                  color: darkMode ? '#fff' : '#000',\n                  top: '50%',\n                  right: '10px',\n                  transform: 'translateY(-50%)',\n                }}\n              />\n            </div>\n            <FormFeedback>Last Name Can&apos;t have less than 2 characters</FormFeedback>\n          </FormGroup>\n        </Col>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Col>\n        <p className={`text-right ${darkMode ? 'text-light' : ''}`}>{`${firstName} ${lastName}`}</p>\n      </Col>\n    </>\n  );\n};\n\nconst Title = props => {\n  const { userProfile, setUserProfile, canEdit, desktopDisplay, darkMode } = props;\n\n  const { jobTitle } = userProfile;\n\n  if (canEdit) {\n    return (\n      <>\n        <Col md={desktopDisplay ? '6' : ''}>\n          <FormGroup>\n            <div style={{ position: 'relative', width: '100%' }}>\n              <Input\n                type=\"text\"\n                name=\"title\"\n                id=\"jobTitle\"\n                value={jobTitle}\n                className={`${darkMode ? 'bg-darkmode-liblack border-0 text-light' : ''}`}\n                onChange={e => {\n                  setUserProfile({ ...userProfile, jobTitle: e.target.value });\n                }}\n                placeholder=\"Job Title\"\n                style={{ paddingRight: '2.5rem' }}\n              />\n              <FontAwesomeIcon\n                icon={faCopy}\n                title=\"Copy title\"\n                onClick={() => {\n                  navigator.clipboard.writeText(jobTitle);\n                  toast.success('Title copied!');\n                }}\n                style={{\n                  position: 'absolute',\n                  cursor: 'pointer',\n                  fontSize: '1rem',\n                  color: darkMode ? '#fff' : '#000',\n                  top: '50%',\n                  right: '10px',\n                  transform: 'translateY(-50%)',\n                }}\n              />\n            </div>\n          </FormGroup>\n        </Col>\n      </>\n    );\n  }\n  return (\n    <>\n      <Col>\n        <p className={`text-right ${darkMode ? 'text-light' : ''}`}>{`${jobTitle}`}</p>\n      </Col>\n    </>\n  );\n};\n\nconst Email = props => {\n  const {\n    userProfile,\n    setUserProfile,\n    formValid,\n    setFormValid,\n    canEdit,\n    desktopDisplay,\n    darkMode,\n  } = props;\n\n  const { email, privacySettings, emailSubscriptions } = userProfile;\n\n  const emailPattern = new RegExp(/^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/i);\n\n  if (canEdit) {\n    return (\n      <>\n        <Col md={desktopDisplay ? '6' : ''}>\n          <FormGroup>\n            <div style={{ position: 'relative', width: '100%' }}>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                value={email}\n                className={`${darkMode ? 'bg-darkmode-liblack border-0 text-light' : ''}`}\n                onChange={e => {\n                  setUserProfile({ ...userProfile, email: e.target.value });\n                  setFormValid({ ...formValid, email: emailPattern.test(e.target.value) });\n                }}\n                placeholder=\"Email\"\n                invalid={!formValid.email}\n              />\n              <FontAwesomeIcon\n                icon={faCopy}\n                title=\"Copy email\"\n                onClick={() => {\n                  navigator.clipboard.writeText(email);\n                  toast.success('Email copied!');\n                }}\n                style={{\n                  position: 'absolute',\n                  cursor: 'pointer',\n                  fontSize: '1rem',\n                  color: darkMode ? '#fff' : '#000',\n                  top: '50%',\n                  right: '10px',\n                  transform: 'translateY(-50%)',\n                }}\n              />\n            </div>\n            <ToggleSwitch\n              switchType=\"email\"\n              state={privacySettings?.email}\n              handleUserProfile={props.handleUserProfile}\n              darkMode={darkMode}\n            />\n\n            <ToggleSwitch\n              switchType=\"email-subcription\"\n              state={emailSubscriptions ? emailSubscriptions : false}\n              handleUserProfile={props.handleUserProfile}\n              darkMode={darkMode}\n            />\n\n            <FormFeedback>Email is not Valid</FormFeedback>\n          </FormGroup>\n        </Col>\n      </>\n    );\n  }\n  return (\n    <>\n      {privacySettings?.email && (\n        <Col>\n          <p className={`text-right ${darkMode ? 'text-light' : ''}`}>{email}</p>\n        </Col>\n      )}\n    </>\n  );\n};\n\nconst formatPhoneNumber = str => {\n  // Filter only numbers from the input\n  const cleaned = `${str}`.replace(/\\D/g, '');\n  if (cleaned.length === 10) {\n    // Domestic (USA)\n    return [\n      '( ',\n      cleaned.substring(0, 3),\n      ' ) ',\n      cleaned.substring(3, 6),\n      ' - ',\n      cleaned.substring(6, 10),\n    ].join('');\n  }\n  if (cleaned.length === 11) {\n    // International\n    return [\n      '+',\n      cleaned.substring(0, 1),\n      '( ',\n      cleaned.substring(1, 4),\n      ' ) ',\n      cleaned.substring(4, 7),\n      ' - ',\n      cleaned.substring(7, 11),\n    ].join('');\n  }\n  // Unconventional\n  return str;\n};\nconst Phone = props => {\n  const {\n    userProfile,\n    setUserProfile,\n    handleUserProfile,\n    canEdit,\n    desktopDisplay,\n    darkMode,\n  } = props;\n  const { phoneNumber, privacySettings } = userProfile;\n  const phoneInputWrapperRef = useRef(null);\n  if (canEdit) {\n    return (\n      <>\n        <Col md={desktopDisplay ? '6' : ''}>\n          <FormGroup>\n            <div style={{ position: 'relative' }} ref={phoneInputWrapperRef}>\n              <PhoneInput\n                buttonClass={`${darkMode ? 'bg-darkmode-liblack' : ''}`}\n                inputClass={`phone-input-style ${\n                  darkMode ? 'bg-darkmode-liblack border-0 text-light' : ''\n                }`}\n                country={'us'}\n                value={phoneNumber}\n                onChange={phoneNumber => {\n                  setUserProfile({ ...userProfile, phoneNumber: phoneNumber.trim() });\n                }}\n              />\n              <FontAwesomeIcon\n                icon={faCopy}\n                onClick={() => {\n                  const input = phoneInputWrapperRef.current?.querySelector('input');\n                  if (input) {\n                    navigator.clipboard.writeText(input.value);\n                    toast.success('Phone number copied!');\n                  }\n                }}\n                title=\"Copy phone number\"\n                style={{\n                  position: 'absolute',\n                  right: '12px',\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  cursor: 'pointer',\n                  fontSize: '1rem',\n                  color: darkMode ? '#fff' : '#000',\n                  zIndex: 2,\n                }}\n              />\n            </div>\n            <ToggleSwitch\n              switchType=\"phone\"\n              state={privacySettings?.phoneNumber}\n              handleUserProfile={handleUserProfile}\n              darkMode={darkMode}\n            />\n          </FormGroup>\n        </Col>\n      </>\n    );\n  }\n  return (\n    <>\n      {privacySettings?.phoneNumber && (\n        <Col>\n          <p className={`text-right ${darkMode ? 'text-light' : ''}`}>\n            {formatPhoneNumber(phoneNumber)}\n          </p>\n        </Col>\n      )}\n    </>\n  );\n};\n\nconst TimeZoneDifference = props => {\n  const { isUserSelf, errorOccurred, setErrorOccurred, desktopDisplay, darkMode } = props;\n\n  const [signedOffset, setSignedOffset] = useState('');\n  const viewingTimeZone = props.userProfile.timeZone;\n  const yourLocalTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n  useEffect(() => {\n    const getOffsetBetweenTimezonesForDate = (date, timezone1, timezone2) => {\n      const timezone1Date = convertDateToAnotherTimeZone(date, timezone1);\n      const timezone2Date = convertDateToAnotherTimeZone(date, timezone2);\n      if (!isNaN(timezone1Date) && !isNaN(timezone2Date)) {\n        return timezone1Date.getTime() - timezone2Date.getTime();\n      } else {\n        if (!errorOccurred) {\n          toast.error('Error occurred while trying to calculate offset between timezones');\n          setErrorOccurred(true);\n        }\n        return 0;\n      }\n    };\n\n    const convertDateToAnotherTimeZone = (date, timezone) => {\n      try {\n        const dateString = date.toLocaleString('en-US', {\n          timeZone: timezone,\n        });\n        return new Date(dateString);\n      } catch (err) {\n        return err;\n      }\n    };\n\n    let date = new Date();\n    const offset = getOffsetBetweenTimezonesForDate(date, viewingTimeZone, yourLocalTimeZone);\n    const offsetInHours = offset / 3600000;\n    setSignedOffset(offsetInHours > 0 ? '+' + offsetInHours : '' + offsetInHours);\n  }, [isUserSelf, setErrorOccurred, errorOccurred, viewingTimeZone, yourLocalTimeZone]);\n\n  if (!isUserSelf) {\n    return (\n      <>\n        <Col md=\"6\">\n          <p className={`text-right ${darkMode ? 'text-light' : ''}`}>{signedOffset} hours</p>\n        </Col>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Col md={desktopDisplay ? '6' : ''}>\n        <p\n          className={`${darkMode ? 'text-light' : ''} ${\n            desktopDisplay ? 'text-right' : 'text-left'\n          }`}\n        >\n          This is your own profile page\n        </p>\n      </Col>\n    </>\n  );\n};\n\nconst BasicInformationTab = props => {\n  const {\n    userProfile,\n    setUserProfile,\n    isUserSelf,\n    handleUserProfile,\n    formValid,\n    setFormValid,\n    canEdit,\n    canEditRole,\n    roles,\n    role,\n    loadUserProfile,\n    darkMode,\n  } = props;\n  const [timeZoneFilter, setTimeZoneFilter] = useState('');\n  const [desktopDisplay, setDesktopDisplay] = useState(window.innerWidth > 1024);\n  const [errorOccurred, setErrorOccurred] = useState(false);\n  const dispatch = useDispatch();\n  const rolesAllowedToEditStatusFinalDay = ['Administrator', 'Owner'];\n  const canEditStatus =\n    rolesAllowedToEditStatusFinalDay.includes(role) || dispatch(hasPermission('pauseUserActivity'));\n\n  const canEditEndDate =\n    rolesAllowedToEditStatusFinalDay.includes(role) || dispatch(hasPermission('setUserFinalDay'));\n\n  let topMargin = '6px';\n  if (isUserSelf) {\n    topMargin = '0px';\n  }\n\n  const canAddDeleteEditOwners = props.hasPermission('addDeleteEditOwners');\n  const handleLocation = e => {\n    setUserProfile({\n      ...userProfile,\n      location: {\n        userProvided: e.target.value,\n        coords: { lat: '', lng: '' },\n        country: '',\n        city: '',\n      },\n    });\n  };\n  const onClickGetTimeZone = () => {\n    if (!userProfile.location.userProvided) {\n      alert('Please enter valid location');\n      return;\n    }\n\n    axios\n      .get(ENDPOINTS.TIMEZONE_LOCATION(userProfile.location.userProvided))\n      .then(res => {\n        if (res.status === 200) {\n          const { timezone, currentLocation } = res.data;\n          setTimeZoneFilter(timezone);\n          setUserProfile({ ...userProfile, timeZone: timezone, location: currentLocation });\n        }\n      })\n      .catch(err => {\n        toast.error(`An error occurred : ${err.response.data}`);\n        if (errorOccurred) setErrorOccurred(false);\n      });\n  };\n\n  function locationCheckValue(loc) {\n    if (loc.userProvided) return loc.userProvided;\n    const str = isString(loc);\n    return str ? loc : '';\n  }\n\n  const handleResize = () => {\n    setDesktopDisplay(window.innerWidth > 1024);\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const nameComponent = (\n    <>\n      <Col>\n        <span className=\"label-icon-container\">\n          <Label className={darkMode ? 'text-light label-with-icon' : 'label-with-icon'}>\n            Name\n          </Label>\n          <i\n            data-toggle=\"tooltip\"\n            data-placement=\"right\"\n            data-testid=\"info-name\"\n            id=\"info-name\"\n            style={{ fontSize: 15, cursor: 'pointer' }}\n            aria-hidden=\"true\"\n            className=\"fa fa-info-circle\"\n          />\n        </span>\n      </Col>\n      <Name\n        userProfile={userProfile}\n        setUserProfile={setUserProfile}\n        setFormValid={setFormValid}\n        isUserSelf={isUserSelf}\n        handleUserProfile={handleUserProfile}\n        formValid={formValid}\n        role={props.role}\n        canEdit={canEdit}\n        darkMode={darkMode}\n        desktopDisplay={desktopDisplay}\n      />\n    </>\n  );\n\n  const titleComponent = (\n    <>\n      <Col>\n        <span className=\"label-icon-container\">\n          <Label className={darkMode ? 'text-light label-with-icon' : 'label-with-icon'}>\n            Title\n          </Label>\n          <i\n            data-toggle=\"tooltip\"\n            data-placement=\"right\"\n            data-testid=\"info-title\"\n            id=\"info-title\"\n            style={{ fontSize: 15, cursor: 'pointer' }}\n            aria-hidden=\"true\"\n            className=\"fa fa-info-circle\"\n          />\n        </span>\n      </Col>\n      <Title\n        userProfile={userProfile}\n        setUserProfile={setUserProfile}\n        isUserSelf={isUserSelf}\n        handleUserProfile={handleUserProfile}\n        formValid={formValid}\n        role={props.role}\n        canEdit={canEdit}\n        darkMode={darkMode}\n        desktopDisplay={desktopDisplay}\n      />\n    </>\n  );\n\n  const emailComponent = (\n    <>\n      <Col>\n        <span className=\"label-icon-container\">\n          <Label className={darkMode ? 'text-light label-with-icon' : ' label-with-icon'}>\n            Email\n          </Label>\n          <i\n            data-toggle=\"tooltip\"\n            data-placement=\"right\"\n            data-testid=\"info-email\"\n            id=\"info-email\"\n            style={{ fontSize: 15, cursor: 'pointer' }}\n            aria-hidden=\"true\"\n            className=\"fa fa-info-circle\"\n          />\n        </span>\n      </Col>\n      <Email\n        userProfile={userProfile}\n        setUserProfile={setUserProfile}\n        isUserSelf={isUserSelf}\n        handleUserProfile={handleUserProfile}\n        formValid={formValid}\n        setFormValid={setFormValid}\n        role={props.role}\n        canEdit={canEdit}\n        darkMode={darkMode}\n        desktopDisplay={desktopDisplay}\n      />\n    </>\n  );\n\n  const phoneComponent = (\n    <>\n      <Col>\n        <span className=\"label-icon-container\">\n          <Label className={darkMode ? 'text-light label-with-icon' : 'label-with-icon'}>\n            Phone\n          </Label>\n          <i\n            data-toggle=\"tooltip\"\n            data-placement=\"right\"\n            data-testid=\"info-phone\"\n            id=\"info-phone\"\n            style={{ fontSize: 15, cursor: 'pointer' }}\n            aria-hidden=\"true\"\n            className=\"fa fa-info-circle\"\n          />\n        </span>\n      </Col>\n      <Phone\n        userProfile={userProfile}\n        setUserProfile={setUserProfile}\n        isUserSelf={isUserSelf}\n        handleUserProfile={handleUserProfile}\n        formValid={formValid}\n        role={props.role}\n        canEdit={canEdit}\n        darkMode={darkMode}\n        desktopDisplay={desktopDisplay}\n      />\n    </>\n  );\n\n  const videoCallPreferenceComponent = (\n    <>\n      <Col>\n        <Label className={darkMode ? 'text-light' : ''}>Video Call Preference</Label>\n      </Col>\n      <Col md={desktopDisplay ? '6' : ''}>\n        {canEdit ? (\n          <FormGroup disabled={!canEdit}>\n            <Input\n              type=\"text\"\n              name=\"collaborationPreference\"\n              id=\"collaborationPreference\"\n              value={userProfile.collaborationPreference}\n              className={`${darkMode ? 'bg-darkmode-liblack border-0 text-light' : ''}`}\n              onChange={e => {\n                setUserProfile({ ...userProfile, collaborationPreference: e.target.value });\n              }}\n              placeholder=\"Skype, Zoom, etc.\"\n            />\n          </FormGroup>\n        ) : (\n          `${userProfile.collaborationPreference}`\n        )}\n      </Col>\n    </>\n  );\n\n  const roleComponent = (\n    <>\n      <Col>\n        <Label className={darkMode ? 'text-light' : ''}>Role</Label>\n      </Col>\n      <Col md={desktopDisplay ? '6' : ''}>\n        {canEditRole ? (\n          <FormGroup>\n            <select\n              value={userProfile.role}\n              onChange={e => {\n                setUserProfile({\n                  ...userProfile,\n                  role: e.target.value,\n                  permissions: { ...userProfile.permissions, frontPermissions: [] },\n                });\n              }}\n              id=\"role\"\n              name=\"role\"\n              className={`form-control ${\n                darkMode ? 'bg-darkmode-liblack border-0 text-light' : ''\n              }`}\n            >\n              {roles.map(({ roleName }) => {\n                if (roleName === 'Owner') return;\n                return (\n                  <option key={roleName} value={roleName}>\n                    {roleName}\n                  </option>\n                );\n              })}\n              {canAddDeleteEditOwners && (\n                <option value=\"Owner\" style={desktopDisplay ? { marginLeft: '5px' } : {}}>\n                  Owner\n                </option>\n              )}\n            </select>\n          </FormGroup>\n        ) : (\n          `${userProfile.role}`\n        )}\n      </Col>\n      {desktopDisplay ? (\n        <Col md=\"1\">\n          <div style={{ marginTop: topMargin }}>\n            <EditableInfoModal\n              role={role}\n              areaName={'roleInfo'}\n              areaTitle=\"Roles\"\n              fontSize={20}\n              darkMode={darkMode}\n            />\n          </div>\n        </Col>\n      ) : (\n        <hr />\n      )}\n    </>\n  );\n\n  const locationComponent = (\n    <>\n      {canEdit && (\n        <>\n          <Col md={{ size: 5, offset: 0 }}>\n            <Label className={darkMode ? 'text-light' : ''}>Location</Label>\n          </Col>\n          {desktopDisplay ? (\n            <Col md=\"6\" style={{ paddingRight: 0 }}>\n              <Row className=\"ml-0\">\n                <Col className=\"p-0\">\n                  <Input\n                    onChange={handleLocation}\n                    value={locationCheckValue(userProfile.location || '')}\n                    className={`${darkMode ? 'bg-darkmode-liblack border-0 text-light' : ''}`}\n                  />\n                </Col>\n                <Col style={{ paddingRight: 0 }}>\n                  <Button\n                    color=\"secondary\"\n                    block\n                    onClick={onClickGetTimeZone}\n                    style={darkMode ? boxStyleDark : boxStyle}\n                    className=\"px-0\"\n                  >\n                    Get Time Zone\n                  </Button>\n                </Col>\n              </Row>\n            </Col>\n          ) : (\n            <Col className=\"cols\">\n              <Input onChange={handleLocation} value={userProfile.location.userProvided || ''} />\n              <div>\n                <Button\n                  color=\"secondary\"\n                  block\n                  size=\"sm\"\n                  onClick={onClickGetTimeZone}\n                  className=\"mt-2\"\n                >\n                  Get Time Zone\n                </Button>\n              </div>\n            </Col>\n          )}\n        </>\n      )}\n    </>\n  );\n\n  const timeZoneComponent = (\n    <>\n      <Col>\n        <Label className={darkMode ? 'text-light' : ''}>Time Zone</Label>\n      </Col>\n      <Col md={desktopDisplay ? '6' : ''}>\n        {!canEdit && <p className={darkMode ? 'text-light' : ''}>{userProfile.timeZone}</p>}\n        {canEdit && (\n          <TimeZoneDropDown\n            filter={timeZoneFilter}\n            onChange={e => {\n              setUserProfile({ ...userProfile, timeZone: e.target.value });\n            }}\n            selected={userProfile.timeZone}\n            darkMode={darkMode}\n          />\n        )}\n      </Col>\n    </>\n  );\n\n  const timeZoneDifferenceComponent = (\n    <>\n      <Col md={desktopDisplay ? '5' : ''}>\n        <label className={darkMode ? 'text-light' : ''}>\n          Difference in this Time Zone from Your Local\n        </label>\n      </Col>\n      <TimeZoneDifference\n        userProfile={userProfile}\n        setUserProfile={setUserProfile}\n        isUserSelf={isUserSelf}\n        handleUserProfile={handleUserProfile}\n        formValid={formValid}\n        errorOccurred={errorOccurred}\n        setErrorOccurred={setErrorOccurred}\n        darkMode={darkMode}\n        desktopDisplay={desktopDisplay}\n      />\n    </>\n  );\n\n  const endDateComponent = (\n    <>\n      {desktopDisplay ? (\n        <Row\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            paddingLeft: '15px',\n          }}\n        >\n          <Col\n            md=\"7\"\n            className=\"mr-5\"\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <Label style={{ margin: '0' }} className={`mr-1 ${darkMode ? 'text-light' : ''}`}>\n              {userProfile.endDate\n                ? 'End Date ' + userProfile.endDate.substring(0, 10)\n                : 'End Date ' + 'N/A'}\n            </Label>\n          </Col>\n          {canEdit && canEditEndDate && (\n            <Col\n              style={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n                alignItems: 'center',\n              }}\n            >\n              <SetUpFinalDayButton\n                loadUserProfile={loadUserProfile}\n                setUserProfile={setUserProfile}\n                isBigBtn={true}\n                userProfile={userProfile}\n                darkMode={darkMode}\n                onFinalDaySave={updatedUser => {\n                  setUserProfile(updatedUser);\n                  loadUserProfile();\n                }}\n              />\n            </Col>\n          )}\n        </Row>\n      ) : (\n        <>\n          <Col md={desktopDisplay ? '8' : ''} className={desktopDisplay ? 'mr-5' : ''}>\n            <Label className={`mr-1 ${darkMode ? 'text-light' : ''}`}>\n              {userProfile.endDate\n                ? 'End Date ' + userProfile.endDate.substring(0, 10)\n                : 'End Date ' + 'N/A'}\n            </Label>\n            {canEdit && canEditEndDate && !desktopDisplay && (\n              <SetUpFinalDayButton\n                loadUserProfile={loadUserProfile}\n                setUserProfile={setUserProfile}\n                isBigBtn={true}\n                userProfile={userProfile}\n                darkMode={darkMode}\n              />\n            )}\n          </Col>\n          {desktopDisplay && canEdit && canEditEndDate && (\n            <Col>\n              <SetUpFinalDayButton\n                loadUserProfile={loadUserProfile}\n                setUserProfile={setUserProfile}\n                isBigBtn={true}\n                userProfile={userProfile}\n                darkMode={darkMode}\n                onFinalDaySave={updatedUser => {\n                  setUserProfile(updatedUser);\n                  loadUserProfile();\n                }}\n              />\n            </Col>\n          )}\n        </>\n      )}\n    </>\n  );\n\n  const statusComponent = (\n    <>\n      {desktopDisplay ? (\n        <Row\n          style={{\n            display: 'flex',\n            alignItems: 'center', // Ensures vertical alignment of all items\n            justifyContent: 'space-between', // Space between the columns\n          }}\n        >\n          <Col\n            md=\"2\"\n            className=\"mr-5\"\n            style={{\n              display: 'flex',\n              alignItems: 'center', // Align label vertically\n            }}\n          >\n            <Label className={darkMode ? 'text-light' : ''} style={{ margin: '0' }}>\n              Status\n            </Label>\n          </Col>\n\n          <Col\n            style={{\n              display: 'flex',\n              alignItems: 'center', // Align label and button vertically\n              justifyContent: 'flex-end', // Align button to the far right\n            }}\n          >\n            <Label\n              style={{ margin: '0' }}\n              className={darkMode ? 'text-light label-with-icon' : 'label-with-icon'}\n            >\n              {userProfile.isActive\n                ? 'Active'\n                : userProfile.reactivationDate\n                ? 'Paused until ' + formatDateLocal(userProfile.reactivationDate)\n                : 'Inactive'}\n            </Label>\n            &nbsp;\n            {canEdit && canEditStatus && (\n              <PauseAndResumeButton\n                setUserProfile={setUserProfile}\n                loadUserProfile={loadUserProfile}\n                isBigBtn={true}\n                userProfile={userProfile}\n                darkMode={darkMode}\n              />\n            )}\n          </Col>\n        </Row>\n      ) : (\n        // Non-desktop view\n        <>\n          <Col>\n            <Label className={darkMode ? 'text-light' : ''}>Status</Label>\n            <div>\n              <Label style={{ fontWeight: 'normal' }} className={darkMode ? 'text-light' : ''}>\n                {userProfile.isActive\n                  ? 'Active'\n                  : userProfile.reactivationDate\n                  ? 'Paused until ' + formatDateLocal(userProfile.reactivationDate)\n                  : 'Inactive'}\n              </Label>\n              &nbsp;\n              {canEdit && canEditStatus && (\n                <PauseAndResumeButton\n                  setUserProfile={setUserProfile}\n                  loadUserProfile={loadUserProfile}\n                  isBigBtn={true}\n                  userProfile={userProfile}\n                  darkMode={darkMode}\n                />\n              )}\n            </div>\n          </Col>\n          {endDateComponent}\n        </>\n      )}\n    </>\n  );\n\n  return (\n    <div className={darkMode ? 'bg-yinmn-blue text-light' : ''}>\n      <div\n        data-testid=\"basic-info-tab\"\n        className={desktopDisplay ? 'basic-info-tab-desktop' : 'basic-info-tab-tablet'}\n      >\n        {desktopDisplay ? (\n          <>\n            <Row>\n              {nameComponent}\n              <Col md=\"1\" lg=\"1\"></Col>\n            </Row>\n            <Row>\n              {titleComponent}\n              <Col md=\"1\" lg=\"1\"></Col>\n            </Row>\n            <Row>\n              {emailComponent}\n              <Col md=\"1\" lg=\"1\"></Col>\n            </Row>\n            <Row>\n              {phoneComponent}\n              <Col md=\"1\" lg=\"1\"></Col>\n            </Row>\n            <Row>\n              {videoCallPreferenceComponent}\n              <Col md=\"1\" lg=\"1\"></Col>\n            </Row>\n            <Row style={{ marginBottom: '10px' }}>{roleComponent}</Row>\n            <Row style={{ marginBottom: '10px' }}>\n              {locationComponent}\n              <Col md=\"1\"></Col>\n            </Row>\n            <Row style={{ marginTop: '15px', marginBottom: '10px' }}>\n              {timeZoneComponent}\n              <Col md=\"1\"></Col>\n            </Row>\n            <Row>{timeZoneDifferenceComponent}</Row>\n            <Row className=\"custom-row\" style={{ marginBottom: '10px' }}>\n              {statusComponent}\n            </Row>\n            <Row className=\"custom-row\" style={{ marginBottom: '10px' }}>\n              {endDateComponent}\n            </Row>\n          </>\n        ) : (\n          <>\n            <Col className=\"cols\">{nameComponent}</Col>\n            <Col className=\"cols\">{titleComponent}</Col>\n            <Col className=\"cols\">{emailComponent}</Col>\n            <Col className=\"cols\">{phoneComponent}</Col>\n            <Col className=\"cols\">{videoCallPreferenceComponent}</Col>\n            <Col className=\"cols\">{roleComponent}</Col>\n            <Col className=\"cols\">{locationComponent}</Col>\n            <Col className=\"cols\">{timeZoneComponent}</Col>\n            <Col className=\"cols\">{timeZoneDifferenceComponent}</Col>\n            <hr />\n            <Row xs=\"2\" style={{ marginLeft: '1rem' }}>\n              {statusComponent}\n            </Row>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default connect(null, { hasPermission })(BasicInformationTab);\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/BlueSquareLayout.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/BlueSquares/BlueSquare.jsx","messages":[{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":31,"column":15,"nodeType":"JSXOpeningElement","endLine":38,"endColumn":16},{"ruleId":"jsx-a11y/interactive-supports-focus","severity":2,"message":"Elements with the 'button' interactive role must be tabbable.","line":31,"column":15,"nodeType":"JSXOpeningElement","endLine":38,"endColumn":16},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":56,"column":11,"nodeType":"JSXOpeningElement","endLine":61,"endColumn":12},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":56,"column":11,"nodeType":"JSXOpeningElement","endLine":61,"endColumn":12}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import './BlueSquare.css';\nimport hasPermission from '~/utils/permissions';\nimport { connect } from 'react-redux';\nimport { formatCreatedDate, formatDate } from '~/utils/formatDate';\n\nconst BlueSquare = props => {\n  const { blueSquares, handleBlueSquare, hasPermission, darkMode } = props;\n\n  const canAddInfringements = hasPermission('addInfringements');\n  const canEditInfringements = hasPermission('editInfringements');\n  const canDeleteInfringements = hasPermission('deleteInfringements');\n  const isInfringementAuthorizer =\n    canAddInfringements || canEditInfringements || canDeleteInfringements;\n\n  const handleOnClick = blueSquare => {\n    if (!blueSquare._id) {\n      handleBlueSquare, darkMode(isInfringementAuthorizer, 'message', 'none');\n    } else if (canEditInfringements || canDeleteInfringements) {\n      handleBlueSquare(true, 'modBlueSquare', blueSquare._id);\n    } else {\n      handleBlueSquare(true, 'viewBlueSquare', blueSquare._id);\n    }\n  };\n  return (\n    <div className={`blueSquareContainer ${darkMode ? 'bg-darkmode-liblack' : ''}`}>\n      <div className={`blueSquares ${blueSquares?.length ? '' : 'NoBlueSquares'}`}>\n        {blueSquares?.length ? (\n          blueSquares\n            .sort((a, b) => (a.date > b.date ? 1 : -1)) // sorting by most recent date(awareded) last\n            .map((blueSquare, index) => (\n              <div\n                key={index}\n                role=\"button\"\n                id=\"wrapper\"\n                data-testid=\"blueSquare\"\n                className=\"blueSquareButton\"\n                onClick={() => handleOnClick(blueSquare)}\n              >\n                <div className=\"report\" data-testid=\"report\">\n                  <div className=\"title\">{formatDate(blueSquare.date)}</div>\n                  {blueSquare.description && (\n                    <div className=\"summary\">\n                      {blueSquare.createdDate\n                        ? `${formatCreatedDate(blueSquare.createdDate)}: `\n                        : ''}\n                      {blueSquare.description}\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))\n        ) : (\n          <div>No blue squares.</div>\n        )}\n        {canAddInfringements && (\n          <div\n            onClick={() => handleBlueSquare(true, 'addBlueSquare', '')}\n            className=\"blueSquareButton\"\n            color=\"primary\"\n            data-testid=\"addBlueSquare\"\n          >\n            +\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default connect(null, { hasPermission })(BlueSquare);\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/BlueSquares/__tests__/BlueSquare.test.jsx","messages":[{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":132,"column":39,"nodeType":"MemberExpression","messageId":"noContainer","endLine":132,"endColumn":62},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":132,"column":49,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":132,"column":49,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":135,"column":37,"nodeType":"MemberExpression","messageId":"noContainer","endLine":135,"endColumn":60},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":135,"column":47,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":135,"column":47,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-unnecessary-act","severity":2,"message":"Avoid wrapping Testing Library util calls in `act`","line":138,"column":11,"nodeType":"Identifier","messageId":"noUnnecessaryActTestingLibraryUtil","endLine":138,"endColumn":14}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, screen, fireEvent, waitFor, act } from '@testing-library/react';\nimport '@testing-library/jest-dom/extend-expect';\nimport BlueSquare from '../BlueSquare';\nimport thunk from 'redux-thunk';\nimport mockAdminState from '__tests__/mockAdminState';\nimport { configureStore } from 'redux-mock-store';\nimport { Provider } from 'react-redux';\nimport hasPermission from '~/utils/permissions';\n\nconst handleBlueSquare = vi.fn();\n\nconst mockStore = configureStore([thunk]);\nconst initialState = {\n  auth: {\n    user: {\n      permissions: {\n        frontPermissions: [\n          'addInfringements',\n          'editInfringements',\n          'deleteInfringements',\n          'infringementAuthorizer',\n          'putUserProfileImportantInfo',\n        ],\n        backPermissions: [],\n      },\n      role: 'Volunteer',\n    },\n  },\n  userProfile: {\n    infringements: [\n      { _id: '1', date: '2023-12-03T12:00:00.000+00:00', description: 'some reason' },\n      { _id: '2', date: '2023-12-10T12:00:00.000+00:00', description: 'test reason' },\n    ],\n  },\n  role: mockAdminState.role,\n};\n\nlet store;\n\nbeforeEach(() => {\n  store = mockStore(initialState);\n});\nafterEach(() => {\n  store.clearActions();\n});\n\ndescribe('BlueSquare component', () => {\n  beforeEach(() => {\n    handleBlueSquare.mockClear();\n  });\n\n  it('userProfile prop present', () => {\n    render(\n      <Provider store={store}>\n        <BlueSquare\n          blueSquares={store.getState().userProfile?.infringements}\n          handleBlueSquare={handleBlueSquare}\n        />\n      </Provider>,\n    );\n    const blueSquareElements = screen.getAllByTestId('blueSquare');\n    expect(blueSquareElements.length).toBeGreaterThanOrEqual(1);\n  });\n  it('userProfile prop is not present', () => {\n    const mockInitialState = JSON.parse(JSON.stringify(initialState));\n    delete mockInitialState.userProfile;\n    const testStore = mockStore(mockInitialState);\n\n    render(\n      <Provider store={testStore}>\n        <BlueSquare\n          blueSquares={testStore.getState().userProfile?.infringements}\n          handleBlueSquare={handleBlueSquare}\n        />\n      </Provider>,\n    );\n    expect(screen.queryByTestId('blueSquare')).not.toBeInTheDocument();\n  });\n  it('check date and description', () => {\n    render(\n      <Provider store={store}>\n        <BlueSquare\n          blueSquares={store.getState().userProfile?.infringements}\n          handleBlueSquare={handleBlueSquare}\n        />\n      </Provider>,\n    );\n    expect(screen.getByText('Dec-03-23')).toBeInTheDocument();\n    expect(screen.getByText('Dec-10-23')).toBeInTheDocument();\n    expect(screen.getByText('some reason')).toBeInTheDocument();\n    expect(screen.getByText('test reason')).toBeInTheDocument();\n  });\n  it('check if + sign is visible when addInfringements permission is not added', () => {\n    const mockInitialState = JSON.parse(JSON.stringify(initialState));\n    mockInitialState.auth.user.permissions.frontPermissions = [];\n    const testStore = mockStore(mockInitialState);\n\n    render(\n      <Provider store={testStore}>\n        <BlueSquare\n          blueSquares={testStore.getState().userProfile?.infringements}\n          handleBlueSquare={handleBlueSquare}\n        />\n      </Provider>,\n    );\n    expect(screen.queryByText('+')).not.toBeInTheDocument();\n  });\n  it('check if + sign is visible when addInfringements permission is added', () => {\n    render(\n      <Provider store={store}>\n        <BlueSquare\n          blueSquares={store.getState().userProfile?.infringements}\n          handleBlueSquare={handleBlueSquare}\n        />\n      </Provider>,\n    );\n    expect(screen.getByText('+')).toBeInTheDocument();\n  });\n  it('check if handleBlueSquare is called when user clicks on the button', async () => {\n    const { container } = render(\n      <Provider store={store}>\n        <BlueSquare\n          blueSquares={store.getState().userProfile?.infringements}\n          handleBlueSquare={handleBlueSquare}\n        />\n      </Provider>,\n    );\n\n    // Wait for the component to render completely\n    await waitFor(() => {\n      const blueSquareButtonElement = container.querySelector('.blueSquareButton');\n      expect(blueSquareButtonElement).toBeInTheDocument();\n    });\n    const blueSquareButtonElement = container.querySelector('.blueSquareButton');\n\n    // Use act to wrap the click event\n    await act(async () => {\n      fireEvent.click(blueSquareButtonElement);\n    });\n\n    // Wait for the handler to be called\n    await waitFor(() => {\n      expect(handleBlueSquare).toHaveBeenCalled();\n    });\n  });\n\n  it('check if handleBlueSquare is not called when user does not click on the button', () => {\n    render(\n      <Provider store={store}>\n        <BlueSquare\n          blueSquares={store.getState().userProfile?.infringements}\n          handleBlueSquare={handleBlueSquare}\n        />\n      </Provider>,\n    );\n    expect(handleBlueSquare).not.toHaveBeenCalled();\n  });\n\n  it('check hasPermission function returns false if permission is not present', () => {\n    const mockInitialState = JSON.parse(JSON.stringify(initialState));\n    mockInitialState.auth.user.permissions.frontPermissions = [];\n    const testStore = mockStore(mockInitialState);\n\n    const permissionValue = testStore.dispatch(hasPermission('infringementAuthorizer'));\n    expect(permissionValue).toBe(false);\n    testStore.clearActions();\n  });\n\n  it('check hasPermission function returns true if permission is present', () => {\n    const permissionValue = store.dispatch(hasPermission('infringementAuthorizer'));\n    expect(permissionValue).toBe(true);\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/BlueSquares/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/BlueSquaresTable/BlueSquaresTable.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/BlueSquaresTable/__tests__/BlueSquaresTable.test.jsx","messages":[{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":83,"column":12,"nodeType":"MemberExpression","messageId":"noContainer","endLine":83,"endColumn":35},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":83,"column":22,"nodeType":"MemberExpression","messageId":"noNodeAccess"}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { Provider } from 'react-redux';\nimport { configureStore } from 'redux-mock-store';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport BlueSquaresTable from '../BlueSquaresTable';\nimport thunk from 'redux-thunk';\nimport mockAdminState from '__tests__/mockAdminState';\nimport EditableInfoModal from '~/components/UserProfile/EditableModal/EditableInfoModal';\nimport axios from 'axios';\n\nvi.mock('axios');\n\nconst mockHandleUserProfile = vi.fn();\nconst mockHandleBlueSquare = vi.fn();\nconst mockStore = configureStore([thunk]);\n\nconst initialState = {\n  auth: {\n    user: {\n      permissions: {\n        frontPermissions: [\n          'addInfringements',\n          'editInfringements',\n          'deleteInfringements',\n          'infringementAuthorizer',\n          'putUserProfileImportantInfo',\n        ],\n        backPermissions: [],\n      },\n      role: 'Volunteer',\n    },\n  },\n  userProfile: {\n    infringements: [\n      { _id: '1', date: '2023-12-03T12:00:00.000+00:00', description: 'some reason' },\n      { _id: '2', date: '2023-12-10T12:00:00.000+00:00', description: 'test reason' },\n    ],\n  },\n  role: mockAdminState.role,\n};\nlet store;\n\nbeforeEach(() => {\n  store = mockStore(initialState);\n  axios.get.mockResolvedValue({ data: 'mocked response' });\n});\nafterEach(() => {\n  store.clearActions();\n  vi.clearAllMocks();\n});\n\ndescribe('BlueSquaresTable component unit tests', () => {\n  const renderComponent = (canEdit, isPrivate, darkMode = false, loading = true) => {\n    return render(\n      <Provider store={store}>\n        <EditableInfoModal loading={loading} />\n        <BlueSquaresTable\n          userProfile={initialState.userProfile}\n          canEdit={canEdit}\n          isPrivate={isPrivate}\n          handleUserProfile={mockHandleUserProfile}\n          handleBlueSquare={mockHandleBlueSquare}\n          darkMode={darkMode}\n        />\n      </Provider>,\n    );\n  };\n  it('renders BlueSquaresTable with editable toggle when canEdit is true', () => {\n    renderComponent(true, false, false, true);\n    expect(screen.getByTestId('blue-squares')).toBeInTheDocument();\n    expect(screen.getByTestId('blue-switch')).toBeInTheDocument();\n  });\n\n  it('renders BlueSquaresTable without editable toggle when canEdit is false', () => {\n    renderComponent(false, false, false, true);\n    expect(screen.getByTestId('blue-squares')).toBeInTheDocument();\n    expect(screen.queryByTestId('blue-switch')).not.toBeInTheDocument();\n  });\n\n  it('applies darkmode styling when darkmode is true', () => {\n    const { container } = renderComponent(true, false, true, true);\n    expect(container.querySelector('.user-profile-blue-square-div-header')).toHaveClass(\n      'bg-space-cadet',\n    );\n  });\n\n  it('calls handleUserProfile when toggleClass is clicked', () => {\n    renderComponent(true, false, false, true);\n    const toggleSwitch = screen.getByTestId('blue-switch');\n    fireEvent.click(toggleSwitch);\n    expect(mockHandleUserProfile).toHaveBeenCalled();\n  });\n\n  it('calls handleBlueSquare when BlueSquare button is clicked', () => {\n    renderComponent(true, false);\n    const blueSquareButton = screen.getAllByTestId('blueSquare')[0];\n    fireEvent.click(blueSquareButton);\n    expect(mockHandleBlueSquare).toHaveBeenCalled();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/BluequareEmailBBCPopUp.jsx","messages":[{"ruleId":"react/display-name","severity":2,"message":"Component definition is missing display name","line":26,"column":39,"nodeType":"CallExpression","messageId":"noDisplayName","endLine":180,"endColumn":3}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  getAllBlueSquareEmailAssignements,\r\n  setBlueSquareEmailAssignement,\r\n  deleteBlueSquareEmailAssignement,\r\n} from '../../actions/blueSquareEmailBCCAction';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Input,\r\n  InputGroup,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Container,\r\n} from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { boxStyle, boxStyleDark } from '~/styles';\r\n\r\nconst BluequareEmailAssignmentPopUp = React.memo(props => {\r\n  const darkMode = useSelector(state => state.theme.darkMode);\r\n  const dispatch = useDispatch();\r\n  const [searchWord, setSearchWord] = useState('');\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [addUser, setAddUser] = useState({});\r\n  const allUsers = useSelector(state => state.allUserProfiles.userProfiles);\r\n  const blueSquareEmailAssignments = useSelector(\r\n    state => state.blueSquareEmailAssignment.emailAssignment,\r\n  );\r\n  const activeUsers = allUsers.filter(user => user.isActive === true);\r\n\r\n  const closePopup = () => {\r\n    props.onClose();\r\n  };\r\n\r\n  const toggleDropdown = () => setDropdownOpen(prevState => !prevState);\r\n\r\n  const filteredUsers = activeUsers.filter(user => {\r\n    if (searchWord.includes(' ')) {\r\n      const splitWords = searchWord.split(' ');\r\n      const searchWordFirst = splitWords[0];\r\n      const searchWordLast = splitWords[1];\r\n      return (\r\n        user.firstName.toLowerCase().includes(searchWordFirst.toLowerCase()) &&\r\n        user.lastName.toLowerCase().includes(searchWordLast.toLowerCase())\r\n      );\r\n    } else {\r\n      return (\r\n        user.firstName.toLowerCase().includes(searchWord.toLowerCase()) ||\r\n        user.lastName.toLowerCase().includes(searchWord.toLowerCase())\r\n      );\r\n    }\r\n  });\r\n\r\n  const handleAddBCC = e => {\r\n    e.preventDefault();\r\n    dispatch(setBlueSquareEmailAssignement(addUser.email));\r\n  };\r\n\r\n  const handleAssignementDelete = id => {\r\n    dispatch(deleteBlueSquareEmailAssignement(id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllBlueSquareEmailAssignements());\r\n  }, []);\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={props.isOpen}\r\n      toggle={closePopup}\r\n      size=\"lg\"\r\n      className={darkMode ? 'dark-mode text-light' : ''}\r\n    >\r\n      <ModalHeader toggle={closePopup} className={darkMode ? 'bg-space-cadet' : ''}>\r\n        Set blue square email recipients\r\n      </ModalHeader>\r\n      <ModalBody className={darkMode ? 'bg-yinmn-blue' : ''}>\r\n        <Container>\r\n          <InputGroup>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Type to filter...\"\r\n              value={searchWord}\r\n              onChange={e => {\r\n                setSearchWord(e.target.value);\r\n                setDropdownOpen(true);\r\n              }}\r\n            />\r\n            <Button color=\"primary\" type=\"button\" onClick={handleAddBCC}>\r\n              Add\r\n            </Button>\r\n          </InputGroup>\r\n          {dropdownOpen && (\r\n            <Dropdown isOpen={dropdownOpen} toggle={toggleDropdown}>\r\n              <DropdownToggle tag=\"div\" data-toggle=\"dropdown\" aria-expanded={dropdownOpen} />\r\n              <DropdownMenu\r\n                style={{\r\n                  position: 'absolute',\r\n                  zIndex: 1000,\r\n                  width: '100%',\r\n                  maxHeight: '300px',\r\n                  overflow: 'auto',\r\n                }}\r\n              >\r\n                {filteredUsers.map((user, index) => (\r\n                  <DropdownItem\r\n                    key={index}\r\n                    onClick={() => {\r\n                      setAddUser(user);\r\n                      setSearchWord(`${user.firstName} ${user.lastName}`);\r\n                    }}\r\n                  >\r\n                    {user.firstName} {user.lastName}\r\n                  </DropdownItem>\r\n                ))}\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n          )}\r\n\r\n          <table\r\n            className={`table table-bordered table-responsive-lg mt-3 ${\r\n              darkMode ? 'text-light' : ''\r\n            }`}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>Status</th>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {blueSquareEmailAssignments.length > 0 &&\r\n                blueSquareEmailAssignments.map((assignment, index) => {\r\n                  return (\r\n                    <tr key={assignment._id}>\r\n                      <td>\r\n                        <span\r\n                          className={assignment.assignedTo?.isActive ? 'isActive' : 'isNotActive'}\r\n                        >\r\n                          <i className=\"fa fa-circle\" aria-hidden=\"true\" />\r\n                        </span>\r\n                      </td>\r\n                      <td>\r\n                        {assignment.assignedTo?.firstName} {assignment.assignedTo?.lastName} (\r\n                        {assignment.assignedTo?.role})\r\n                      </td>\r\n                      <td style={{ overflow: 'auto' }}>{assignment.email}</td>\r\n                      <td className=\"d-flex justify-content-center align-items-center\">\r\n                        <Button\r\n                          color=\"danger\"\r\n                          onClick={() => handleAssignementDelete(assignment._id)}\r\n                          style={props.darkMode ? boxStyleDark : boxStyle}\r\n                        >\r\n                          <FontAwesomeIcon icon={faTrashAlt} />\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </table>\r\n        </Container>\r\n      </ModalBody>\r\n      <ModalFooter className={darkMode ? 'bg-yinmn-blue' : ''}>\r\n        <Button color=\"secondary\" onClick={closePopup} style={darkMode ? boxStyleDark : boxStyle}>\r\n          Close\r\n        </Button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  );\r\n});\r\nexport default BluequareEmailAssignmentPopUp;\r\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/EditableModal/EditableInfoModal.jsx","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":150,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":150,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[3940,3961],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":241,"column":19,"nodeType":"JSXOpeningElement","endLine":246,"endColumn":21},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":241,"column":19,"nodeType":"JSXOpeningElement","endLine":246,"endColumn":21}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Row, Col } from 'reactstrap';\nimport Select from 'react-select';\nimport { toast } from 'react-toastify';\nimport { connect } from 'react-redux';\nimport {\n  getInfoCollections,\n  addInfoCollection,\n  updateInfoCollection,\n  deleteInfoCollectionById,\n} from '../../../actions/information';\nimport { boxStyle, boxStyleDark } from '~/styles';\nimport RichTextEditor from './RichTextEditor';\n\nconst options = [\n  { value: '0', label: 'All (default)' },\n  { value: '1', label: 'Admin + Owner User Classes Only' },\n  { value: '2', label: 'Everyone But Volunteer Class' },\n];\n\nexport class EditableInfoModal extends Component {\n  state = {\n    editableModalOpen: false,\n    infoElements: [],\n    fetchError: null,\n    loading: true,\n    editing: false,\n    CanRead: false,\n    CanEdit: false,\n    infoName: '',\n    infoContent: '',\n    visibility: '',\n    fontSize: 24,\n  };\n\n  _isMounted = false;\n\n  async componentDidMount() {\n    this._isMounted = true;\n    await this.props.getInfoCollections();\n    const { infoCollections, role, areaTitle, areaName, fontSize, isPermissionPage } = this.props;\n\n    let content = '';\n    let visible = '0';\n\n    if (Array.isArray(infoCollections)) {\n      infoCollections.forEach(info => {\n        if (info.infoName === areaName) {\n          content = info.infoContent;\n          visible = info.visibility;\n        }\n      });\n    }\n\n    content = content.replace(/<ul>/g, \"<ul class='custom-ul'>\");\n    let CanRead =\n      visible === '0' ||\n      (visible === '1' && (role === 'Owner' || role === 'Administrator')) ||\n      (visible === '2' && role !== 'Volunteer');\n    let CanEdit = role === 'Owner';\n\n    if (this._isMounted) {\n      this.setState({\n        infoElements: Array.isArray(infoCollections) ? [...infoCollections] : [],\n        fetchError: this.props.fetchError,\n        loading: this.props.loading,\n        infoName: areaName,\n        infoContent: content || 'Please input information!',\n        visibility: visible,\n        CanRead,\n        CanEdit,\n        fontSize: fontSize,\n        isPermissionPage,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.infoCollections !== prevState.infoElements) {\n      return { infoElements: nextProps.infoCollections };\n    } else {\n      return null;\n    }\n  }\n\n  toggleEditableModal = () => {\n    this.setState({ editableModalOpen: false });\n  };\n\n  handleEdit = edit => {\n    if (this.state.CanEdit) {\n      this.setState({ editing: edit });\n    }\n  };\n\n  handleSaveSuccess = async () => {\n    toast.success('✔ The info was saved successfully!', {\n      pauseOnFocusLoss: false,\n      autoClose: 3000,\n    });\n  };\n\n  handleSaveError = () => {\n    toast.error('✘ The info could not be saved!', {\n      pauseOnFocusLoss: false,\n      autoClose: 3000,\n    });\n  };\n  handleInputChange = (content, editor) => {\n    const infoContent = this.state.infoContent;\n    this.setState({ infoContent: content });\n  };\n\n  handleChangeInInfos = () => {\n    let newInfoElements = [...this.state.infoElements];\n    let findIndex = false;\n    let foundInfoId;\n\n    newInfoElements = newInfoElements.map(index => {\n      if (index.infoName === this.state.infoName) {\n        findIndex = true;\n        foundInfoId = index._id;\n        return { ...index, infoContent: this.state.infoContent };\n      }\n      return index;\n    });\n\n    this.setState({ infoElements: newInfoElements });\n\n    return {\n      findIndex,\n      infoId: foundInfoId,\n    };\n  };\n\n  handleSelectChange = selectedOption => {\n    this.setState({ visibility: selectedOption.value });\n  };\n\n  // Updates user profile and weekly summaries\n  updateUserData = async () => {\n    try {\n      await this.props.getInfoCollections();\n    } catch (error) {\n      console.error(error);\n      // Handle error appropriately here\n    }\n  };\n\n  mainSaveHandler = async () => {\n    const { findIndex: updatedInfo, infoId } = this.handleChangeInInfos();\n    const newInfo = {\n      infoName: this.state.infoName,\n      infoContent: this.state.infoContent,\n      visibility: this.state.visibility,\n    };\n    let saveResult;\n    if (!updatedInfo) {\n      saveResult = await this.props.addInfoCollection(newInfo);\n    } else {\n      saveResult = await this.props.updateInfoCollection(infoId, newInfo);\n    }\n    if (saveResult === 200 || saveResult === 201) {\n      await this.handleSaveSuccess();\n    } else {\n      this.handleSaveError();\n    }\n  };\n  handleDelete = async () => {\n    const { infoId } = this.handleChangeInInfos();\n    const deleteResult = await this.props.deleteInfoCollectionById(infoId);\n  };\n\n  handleClose = () => {\n    this.toggleEditableModal();\n    this.handleEdit(false);\n  };\n\n  handleSave = async event => {\n    this.handleEdit(false);\n    if (event) {\n      event.preventDefault();\n    }\n    await this.mainSaveHandler();\n  };\n  render() {\n    const {\n      infoContent,\n      editableModalOpen,\n      fontSize,\n      CanRead,\n      CanEdit,\n      isPermissionPage,\n    } = this.state;\n\n    const { darkMode } = this.props;\n    const sanitizedContent = darkMode\n      ? infoContent.replace(/color\\s*:\\s*[^;\"']+;?/gi, '')\n      : infoContent;\n    return (\n      CanRead && (\n        <div>\n          <i\n            data-toggle=\"tooltip\"\n            data-placement=\"right\"\n            title=\"Click for information about this\"\n            style={{ fontSize: fontSize, cursor: 'pointer', color: '#00CCFF', marginRight: '8px' }}\n            aria-hidden=\"true\"\n            className=\"fa fa-info-circle\"\n            onClick={() => this.setState({ editableModalOpen: true })}\n          />\n          {editableModalOpen && (\n            <Modal\n              isOpen={editableModalOpen}\n              toggle={this.toggleEditableModal}\n              size=\"lg\"\n              className={darkMode ? 'text-light' : ''}\n            >\n              <ModalHeader\n                className={`d-flex justify-content-center ${darkMode ? 'bg-space-cadet' : ''}`}\n              >\n                Welcome to the {this.props.areaTitle} Information Page!\n              </ModalHeader>\n              <ModalBody\n                className={darkMode ? 'bg-yinmn-blue' : ''}\n                style={{ padding: '20px 40px' }}\n              >\n                {this.state.editing ? (\n                  <RichTextEditor\n                    disabled={!this.state.editing}\n                    value={infoContent}\n                    onEditorChange={this.handleInputChange}\n                    darkMode={darkMode}\n                  />\n                ) : (\n                  <div\n                    className={darkMode ? 'info-modal-content force-white-text' : ''}\n                    style={{ paddingLeft: '20px' }}\n                    dangerouslySetInnerHTML={{ __html: sanitizedContent }}\n                    onClick={() => this.handleEdit(true)}\n                  />\n                )}\n              </ModalBody>\n              <ModalFooter className={darkMode ? 'bg-yinmn-blue' : ''}>\n                <Row className=\"no-gutters\">\n                  {this.state.editing && (\n                    <Col md={6} style={{ paddingRight: '2px' }}>\n                      <Select\n                        options={options}\n                        onChange={this.handleSelectChange}\n                        value={options.find(option => option.value === this.state.visibility)}\n                      />\n                    </Col>\n                  )}\n\n                  {CanEdit && this.state.editing && (\n                    <Col md={3} style={{ paddingLeft: '4px' }}>\n                      <Button\n                        className=\"saveBtn\"\n                        onClick={this.handleSave}\n                        color=\"primary\"\n                        style={darkMode ? boxStyleDark : boxStyle}\n                      >\n                        Save\n                      </Button>\n                    </Col>\n                  )}\n                  <Col md={3} className=\"d-flex justify-content-center\">\n                    <Button\n                      onClick={this.handleClose}\n                      color=\"danger\"\n                      style={darkMode ? boxStyleDark : boxStyle}\n                    >\n                      Close\n                    </Button>\n                  </Col>\n                </Row>\n              </ModalFooter>\n            </Modal>\n          )}\n        </div>\n      )\n    );\n  }\n}\n\nEditableInfoModal.propTypes = {\n  fetchError: PropTypes.any,\n  getInfoCollections: PropTypes.func.isRequired,\n  addInfoCollection: PropTypes.func.isRequired,\n  updateInfoCollection: PropTypes.func.isRequired,\n  deleteInfoCollectionById: PropTypes.func.isRequired,\n  loading: PropTypes.bool, //made loading prop optional to avoid warnings if not provided\n};\n\nconst mapStateToProps = ({ infoCollections }) => ({\n  loading: infoCollections?.loading,\n  fetchError: infoCollections?.error,\n  infoCollections: infoCollections?.infos,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getInfoCollections: () => dispatch(getInfoCollections()),\n    updateInfoCollection: (infoId, updatedInfo) =>\n      dispatch(updateInfoCollection(infoId, updatedInfo)),\n    addInfoCollection: newInfo => dispatch(addInfoCollection(newInfo)),\n    deleteInfoCollectionById: infoId => dispatch(deleteInfoCollectionById(infoId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditableInfoModal);\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/EditableModal/RichTextEditor.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/EditableModal/RoleInfoModal.jsx","messages":[{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":98,"column":17,"nodeType":"JSXOpeningElement","endLine":102,"endColumn":19},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":98,"column":17,"nodeType":"JSXOpeningElement","endLine":102,"endColumn":19}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector, connect } from 'react-redux';\nimport { Button, Modal, ModalBody, ModalFooter, ModalHeader, Col, Row } from 'reactstrap';\nimport { updateInfoCollection } from '../../../actions/information';\nimport { boxStyle, boxStyleDark } from '~/styles';\nimport { toast } from 'react-toastify';\nimport RichTextEditor from './RichTextEditor';\n\nconst RoleInfoModal = ({ info, auth }) => {\n  const darkMode = useSelector(state => state.theme.darkMode);\n  const [isOpen, setOpen] = useState(false);\n  const [canEditInfoModal, setCanEditInfoModal] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const { infoContent, CanRead } = { ...info };\n  const [infoContentModal, setInfoContentModal] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setInfoContentModal(infoContent);\n  }, [infoContent]);\n\n  const handleSaveSuccess = async () => {\n    toast.success('✔ The info was saved successfully!', {\n      pauseOnFocusLoss: false,\n      autoClose: 3000,\n    });\n  };\n\n  const handleSaveError = () => {\n    toast.error('✘ The info could not be saved!', {\n      pauseOnFocusLoss: false,\n      autoClose: 3000,\n    });\n  };\n\n  const handleMouseOver = () => {\n    setOpen(true);\n\n    if (auth?.user.role === 'Owner') {\n      setCanEditInfoModal(true);\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleInputChange = content => {\n    setInfoContentModal(content);\n  };\n\n  const handleSave = async e => {\n    setIsEditing(false);\n\n    if (e) {\n      e.preventDefault();\n    }\n\n    const updateInfo = { infoContent: infoContentModal };\n\n    let saveResult = await dispatch(updateInfoCollection(info._id, updateInfo));\n    setInfoContentModal(infoContentModal);\n\n    if (saveResult === 200 || saveResult === 201) {\n      await handleSaveSuccess();\n    } else {\n      handleSaveError();\n    }\n  };\n\n  if (CanRead) {\n    return (\n      <span>\n        <i\n          data-toggle=\"tooltip\"\n          data-placement=\"right\"\n          title=\"Click for user class information\"\n          style={{ fontSize: 24, cursor: 'pointer', color: '#00CCFF', marginLeft: '12px' }}\n          aria-hidden=\"true\"\n          className=\"fa fa-info-circle\"\n          onClick={handleMouseOver}\n        />\n        {isOpen && (\n          <Modal isOpen={isOpen} size=\"lg\" className={darkMode ? 'text-light' : ''}>\n            <ModalHeader className={darkMode ? 'bg-space-cadet' : ''}>\n              Welcome to Information Page!\n            </ModalHeader>\n            <ModalBody className={darkMode ? 'bg-yinmn-blue' : ''}>\n              {canEditInfoModal && isEditing ? (\n                <RichTextEditor\n                  disabled={!isEditing}\n                  value={infoContentModal}\n                  onEditorChange={handleInputChange}\n                  darkMode={darkMode}\n                />\n              ) : (\n                <div\n                  style={{ paddingLeft: '20px' }}\n                  dangerouslySetInnerHTML={{ __html: infoContentModal }}\n                  onClick={() => setIsEditing(true)}\n                />\n              )}\n            </ModalBody>\n            <ModalFooter className={darkMode ? 'bg-yinmn-blue' : ''}>\n              <Row className=\"no-gutters\" style={{ gap: '10px', justifyContent: 'flex-end' }}>\n                {canEditInfoModal && isEditing && (\n                  <Col xs=\"auto\">\n                    <Button\n                      className=\"saveBtn\"\n                      onClick={handleSave}\n                      style={darkMode ? boxStyleDark : boxStyle}\n                    >\n                      Save\n                    </Button>\n                  </Col>\n                )}\n                <Col xs=\"auto\">\n                  <Button onClick={handleClose} style={darkMode ? boxStyleDark : boxStyle}>\n                    Close\n                  </Button>\n                </Col>\n              </Row>\n            </ModalFooter>\n          </Modal>\n        )}\n      </span>\n    );\n  }\n  return <></>;\n};\n\nRoleInfoModal.propTypes = {\n  fetchError: PropTypes.any,\n  updateInfoCollection: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ infoCollections }) => ({\n  loading: infoCollections?.loading,\n  fetchError: infoCollections?.error,\n  infoCollections: infoCollections?.infos,\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateInfoCollection: (infoId, updatedInfo) =>\n      dispatch(updateInfoCollection(infoId, updatedInfo)),\n  };\n};\n\nexport default connect(mapDispatchToProps, mapStateToProps)(RoleInfoModal);\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/EditableModal/__mocks__/EditableMockData.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/EditableModal/__tests__/roleInfoModal.test.jsx","messages":[{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTitle` instead","line":24,"column":22,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":24,"endColumn":32},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTitle` instead","line":42,"column":22,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":42,"endColumn":32},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByText` instead","line":44,"column":24,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":44,"endColumn":33},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTitle` instead","line":61,"column":22,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":61,"endColumn":32},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByText` instead","line":63,"column":26,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":63,"endColumn":35},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.queryByText` instead","line":82,"column":24,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":82,"endColumn":35}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, fireEvent } from '@testing-library/react';\nimport { Provider } from 'react-redux';\nimport { configureStore } from 'redux-mock-store';\nimport { themeMock } from '__tests__/mockStates';\nimport RoleInfoModal from '../RoleInfoModal';\n\nconst mockStore = configureStore([]);\n\ndescribe('RoleInfoModal component Test cases', () => {\n  test('Test case 1 : Renders without crashing', () => {\n    const store = mockStore({\n      theme: themeMock,\n    });\n\n    const info = {\n      CanRead: true,\n    };\n    const { getByTitle } = render(\n      <Provider store={store}>\n        <RoleInfoModal info={info} />\n      </Provider>,\n    );\n    const infoIcon = getByTitle('Click for user class information');\n    expect(infoIcon).toBeInTheDocument();\n  });\n\n  it('Test case 2 : Displays modal when CanRead is true', () => {\n    const store = mockStore({\n      theme: themeMock,\n    });\n\n    const info = {\n      CanRead: true,\n    };\n\n    const { getByTitle, getByText } = render(\n      <Provider store={store}>\n        <RoleInfoModal info={info} />\n      </Provider>,\n    );\n    const infoIcon = getByTitle('Click for user class information');\n    fireEvent.click(infoIcon);\n    const modalTitle = getByText('Welcome to Information Page!');\n    expect(modalTitle).toBeInTheDocument();\n  });\n\n  it('Test case 3 : Displays modal with correct infoContent', () => {\n    const store = mockStore({\n      theme: themeMock,\n    });\n    const info = {\n      infoContent: '<p>Testing the info content</p>',\n      CanRead: true,\n    };\n    const { getByTitle, getByText } = render(\n      <Provider store={store}>\n        <RoleInfoModal info={info} />\n      </Provider>,\n    );\n    const infoIcon = getByTitle('Click for user class information');\n    fireEvent.click(infoIcon);\n    const modalContent = getByText('Testing the info content', { exact: false });\n    expect(modalContent).toBeInTheDocument();\n  });\n\n  it('Test case 4 : Does not display modal when CanRead is false', () => {\n    const store = mockStore({\n      theme: themeMock,\n    });\n    const info = {\n      infoContent: '<p>Some info content</p>',\n      CanRead: false,\n    };\n\n    const { queryByText } = render(\n      <Provider store={store}>\n        <RoleInfoModal info={info} />\n      </Provider>,\n    );\n\n    const modalTitle = queryByText('Welcome to Information Page!');\n    expect(modalTitle).not.toBeInTheDocument();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/FeaturedBadges/FeaturedBadges.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/FeaturedBadges/__mocks__/mockData.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/FeaturedBadges/__tests__/FeaturedBadges.test.jsx","messages":[{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getAllByTestId` instead","line":14,"column":29,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":14,"endColumn":43}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, screen } from '@testing-library/react';\nimport FeaturedBadges from '../FeaturedBadges';\nimport mockProps from '../__mocks__/mockData';\n\ndescribe('FeaturedBadges Component', () => {\n  it('renders correctly with badges data', () => {\n    render(<FeaturedBadges {...mockProps} />);\n    expect(screen.getByTestId('badge_featured_container')).toBeInTheDocument();\n  });\n\n  it('sort the badge image correctly', () => {\n    const { getAllByTestId } = render(<FeaturedBadges {...mockProps} />);\n    const displayedBadges = getAllByTestId('badge_featured_count');\n\n    expect(displayedBadges[0]).toHaveTextContent('4');\n    expect(displayedBadges[1]).toHaveTextContent('11');\n    expect(displayedBadges[2]).toHaveTextContent('1');\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/FeaturedBadges/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/InfoModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/MockData/MockAssignTableRow.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/QuickSetupModal/AddNewTitleModal.jsx","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":200,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":200,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[5252,5267],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":215,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":215,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[5681,5696],"text":""},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from 'reactstrap';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { addTitle, editTitle } from '../../../actions/title';\nimport AssignProjectField from './AssignProjectField';\nimport AssignTeamField from './AssignTeamField';\nimport AssignTeamCodeField from './AssignTeamCodeField';\nimport '../../Header/DarkMode.css';\n\nfunction AddNewTitleModal({\n  isOpen,\n  setIsOpen,\n  refreshModalTitles,\n  teamsData,\n  projectsData,\n  setWarningMessage,\n  setShowMessage,\n  editMode,\n  title,\n  QSTTeamCodes,\n}) {\n  const darkMode = useSelector(state => state.theme.darkMode);\n  const teamCodes = useSelector(state => state.teamCodes?.teamCodes || []);\n\n  const [titleData, setTitleData] = useState(() => {\n    if (editMode && Object.keys(title).length !== 0) {\n      return {\n        id: title._id,\n        titleName: title.titleName,\n        titleCode: title.titleCode,\n        mediaFolder: title.mediaFolder,\n        teamCode: title.teamCode,\n        projectAssigned: title.projectAssigned,\n        teamAssiged: title.teamAssiged == undefined ? { teamName: '', _id: '' } : title.teamAssiged,\n      };\n    }\n    return {\n      titleName: '',\n      titleCode: '',\n      mediaFolder: '',\n      teamCode: '',\n      projectAssigned: '',\n      teamAssiged: {},\n    };\n  });\n\n  const [isValidTeamCode, setIsValidTeamCode] = useState(true);\n\n  useEffect(() => {\n    if (editMode && Object.keys(title).length !== 0) {\n      setTitleData({\n        id: title._id,\n        titleName: title.titleName,\n        titleCode: title.titleCode || title.titleName.slice(0, 7),\n        mediaFolder: title.mediaFolder,\n        teamCode: title.teamCode,\n        projectAssigned: title.projectAssigned,\n        teamAssiged: title.teamAssiged,\n      });\n    } else {\n      setTitleData({\n        titleName: '',\n        titleCode: '',\n        mediaFolder: '',\n        teamCode: '',\n        projectAssigned: '',\n        teamAssiged: {},\n      });\n    }\n  }, [editMode, title]);\n\n  useEffect(() => {\n    const titleCode = titleData?.titleCode ? titleData.titleCode : titleData.titleName.slice(0, 7);\n    setTitleData(prev => ({\n      ...prev,\n      titleCode,\n    }));\n  }, [titleData.titleName]);\n\n  useEffect(() => {\n    setIsValidTeamCode(\n      titleData.teamCode === '' || QSTTeamCodes.some(code => code.value === titleData.teamCode),\n    );\n  }, [titleData.teamCode, QSTTeamCodes]);\n\n  let existTeamCodes = new Set();\n  let existTeamName = new Set();\n\n  if (teamsData?.allTeams) {\n    const codes = teamsData.allTeams.map(team => team.teamCode);\n    const names = teamsData.allTeams.map(team => team.teamName);\n    // Use allTeamCode rather than allTeams since team code is not related to records in the Team table.\n    // It is all distinct team codes from the UserProfile teamCode field.\n    existTeamCodes = new Set(teamsData?.allTeamCode?.distinctTeamCodes);\n    existTeamName = new Set(names);\n  }\n\n  const [selectedTeam, onSelectTeam] = useState(undefined);\n  const [selectedProject, onSelectProject] = useState(undefined);\n  const [selectedTeamCode, onSelectTeamCode] = useState(undefined);\n  const [isValidProject, onValidation] = useState(false);\n  const [searchText, setSearchText] = useState(''); // For addTeamAutoComplete\n\n  const selectProject = project => {\n    onSelectProject(project);\n    setTitleData({\n      ...titleData,\n      projectAssigned: {\n        projectName: project.projectName,\n        _id: project._id,\n        category: project.category,\n      },\n    });\n    onValidation(true);\n  };\n\n  const selectTeamCode = teamCode => {\n    onSelectTeamCode(teamCode);\n    setTitleData({\n      ...titleData,\n      teamCode,\n    });\n  };\n\n  const cleanProjectAssign = () => {\n    setTitleData({\n      ...titleData,\n      projectAssigned: '',\n    });\n  };\n\n  const selectTeam = team => {\n    onSelectTeam(team);\n    setTitleData(prev => ({\n      ...prev,\n      teamAssiged: {\n        teamName: team.teamName,\n        _id: team._id,\n      },\n    }));\n    onValidation(true);\n  };\n\n  const cleanTeamCodeAssign = () => {\n    setTitleData({\n      ...titleData,\n      teamCode: '',\n    });\n  };\n\n  const cleanTeamAssigned = () => {\n    // if clean all input field -> no team selected\n    const updatedTitleData = { ...titleData };\n    delete updatedTitleData.teamAssiged;\n    setTitleData(updatedTitleData);\n  };\n\n  const undoTeamAssigned = () => {\n    setTitleData({\n      ...titleData,\n      teamAssiged: {\n        teamName: searchText,\n        _id: 'N/A',\n      },\n    });\n  };\n\n  // confirm and save\n  const confirmOnClick = () => {\n    const isValidTeamName = onTeamNameValidation(titleData.teamAssiged);\n\n    if (!isValidTeamName) {\n      return;\n    }\n\n    if (editMode) {\n      editTitle(titleData)\n        .then(resp => {\n          if (resp.status !== 200) {\n            setWarningMessage({ title: 'Error', content: resp.message });\n            setShowMessage(true);\n          } else {\n            setIsOpen(false);\n            refreshModalTitles();\n            toast.success('Title updated successfully');\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    } else {\n      addTitle(titleData)\n        .then(resp => {\n          if (resp.status !== 200) {\n            setWarningMessage({ title: 'Error', content: resp.message });\n            setShowMessage(true);\n          } else {\n            setIsOpen(false);\n            refreshModalTitles();\n            toast.success('Title added successfully');\n          }\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    }\n  };\n\n  const onTeamCodeValidation = teamCode => {\n    const format1 = /^[A-Za-z]-[A-Za-z]{3}$/;\n    const format2 = /^[A-Z]{5}$/;\n    // Check if the input value matches either of the formats\n    const isValidFormat = format1.test(teamCode) || format2.test(teamCode);\n    if (!isValidFormat) {\n      setWarningMessage({ title: 'Error', content: 'Invalid Team Code Format' });\n      setShowMessage(true);\n      setTitleData({ ...titleData, teamCode: '' });\n      return;\n    }\n    if (!existTeamCodes.has(teamCode)) {\n      setWarningMessage({ title: 'Error', content: 'Team Code Not Exists' });\n      setShowMessage(true);\n      setTitleData({ ...titleData, teamCode: '' });\n      return;\n    }\n    setShowMessage(false);\n  };\n\n  const onTeamNameValidation = teamName => {\n    if (teamName && teamName !== '') {\n      if (!existTeamName.has(teamName.teamName)) {\n        setWarningMessage({ title: 'Error', content: 'Team Name Not Exists' });\n        setShowMessage(true);\n        return false;\n      }\n    }\n    setShowMessage(false);\n    return true;\n  };\n\n  const fontColor = darkMode ? 'text-light' : '';\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      toggle={() => setIsOpen(false)}\n      className={darkMode ? 'text-light dark-mode' : ''}\n    >\n      {editMode ? (\n        <ModalHeader toggle={() => setIsOpen(false)} className={darkMode ? 'bg-space-cadet' : ''}>\n          Edit Title\n        </ModalHeader>\n      ) : (\n        <ModalHeader toggle={() => setIsOpen(false)} className={darkMode ? 'bg-space-cadet' : ''}>\n          Add A New Title\n        </ModalHeader>\n      )}\n      <ModalBody className={darkMode ? 'bg-yinmn-blue' : ''}>\n        <Form>\n          <FormGroup>\n            <Label className={fontColor}>\n              Title Name<span className=\"qsm-modal-required\">*</span>:{' '}\n            </Label>\n            <Input\n              type=\"text\"\n              name=\"text\"\n              id=\"mediafolder\"\n              value={titleData.titleName}\n              onChange={e => {\n                e.persist();\n                setTitleData({ ...titleData, titleName: e.target.value });\n              }}\n            />\n            <Label className={fontColor}>\n              Title Code<span className=\"qsm-modal-required\">*</span>:{' '}\n            </Label>\n            <Input\n              type=\"text\"\n              name=\"text\"\n              id=\"titleCode\"\n              value={titleData.titleCode}\n              onChange={e => {\n                e.persist();\n                setTitleData({ ...titleData, titleCode: e.target.value });\n              }}\n              maxLength={7}\n            />\n            <Label className={fontColor}>\n              Media Folder<span className=\"qsm-modal-required\">*</span>:{' '}\n            </Label>\n            <Input\n              type=\"text\"\n              name=\"text\"\n              id=\"mediafolder\"\n              value={titleData.mediaFolder}\n              onChange={e => {\n                const inputValue = e.target.value;\n                setTitleData({ ...titleData, mediaFolder: inputValue });\n              }}\n              placeholder=\"Enter a valid URL\"\n            />\n            {!/^(https?:\\/\\/[^\\s]+)$/.test(titleData.mediaFolder.trim()) &&\n              titleData.mediaFolder !== '' && (\n                <small style={{ color: 'red', marginTop: '5px', display: 'block' }}>\n                  Please enter a valid URL that starts with http:// or https://\n                </small>\n              )}\n            <Label className={fontColor}>\n              Team Code<span className=\"qsm-modal-required\">*</span>:\n            </Label>\n            <AssignTeamCodeField\n              teamCodeData={QSTTeamCodes}\n              onDropDownSelect={selectTeamCode}\n              selectedTeamCode={selectedTeamCode}\n              cleanTeamCodeAssign={cleanTeamCodeAssign}\n              onSelectTeamCode={onSelectTeamCode}\n              editMode={editMode}\n              value={titleData.teamCode}\n              isError={!isValidTeamCode}\n            />\n            <Label className={fontColor}>\n              Project Assignment<span className=\"qsm-modal-required\">*</span>:\n            </Label>\n            <AssignProjectField\n              projectsData={projectsData}\n              onDropDownSelect={selectProject}\n              selectedProject={selectedProject}\n              cleanProjectAssign={cleanProjectAssign}\n              onSelectProject={onSelectProject}\n              editMode={editMode}\n              value={titleData.projectAssigned}\n            />\n            <Label className={fontColor}>Team Assignment:</Label>\n            <AssignTeamField\n              teamsData={teamsData}\n              onDropDownSelect={selectTeam}\n              selectedTeam={selectedTeam}\n              setSearchText={setSearchText}\n              searchText={searchText}\n              cleanTeamAssigned={cleanTeamAssigned}\n              onSelectTeam={onSelectTeam}\n              undoTeamAssigned={undoTeamAssigned}\n              editMode={editMode}\n              value={titleData.teamAssiged}\n            />\n          </FormGroup>\n        </Form>\n      </ModalBody>\n      <ModalFooter className={darkMode ? 'bg-yinmn-blue' : ''}>\n        <Button\n          color=\"primary\"\n          onClick={() => confirmOnClick()}\n          disabled={\n            !/^(https?:\\/\\/[^\\s]+)$/.test(titleData.mediaFolder.trim()) ||\n            titleData.mediaFolder === ''\n          }\n        >\n          Confirm\n        </Button>\n        <Button color=\"secondary\" onClick={() => setIsOpen(false)}>\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n\nexport default AddNewTitleModal;\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/QuickSetupModal/AssignProjectField.jsx","messages":[{"ruleId":"react/display-name","severity":2,"message":"Component definition is missing display name","line":5,"column":28,"nodeType":"CallExpression","messageId":"noDisplayName","endLine":78,"endColumn":3},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":60,"column":15,"nodeType":"JSXOpeningElement","endLine":68,"endColumn":16},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":60,"column":15,"nodeType":"JSXOpeningElement","endLine":68,"endColumn":16}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect, useState } from 'react';\nimport { Dropdown, Input } from 'reactstrap';\nimport { useSelector } from 'react-redux';\n\nconst AssignProjectField = React.memo(props => {\n  const [searchText, onInputChange] = useState(() => {\n    if (props.editMode) {\n      return props.value.projectName;\n    } else {\n      return '';\n    }\n  });\n  const [isOpen, toggle] = useState(false);\n  const darkMode = useSelector(state => state.theme.darkMode);\n\n  useEffect(() => {\n    if (props.selectedProject && props.selectedProject.projectName !== searchText) {\n      props.onSelectProject(undefined);\n      props.cleanProjectAssign();\n    }\n  }, [searchText]);\n\n  return (\n    <Dropdown\n      isOpen={isOpen}\n      toggle={() => {\n        toggle(!isOpen);\n      }}\n      style={{ width: '100%', marginRight: '5px' }}\n    >\n      <Input\n        type=\"text\"\n        value={searchText}\n        onFocus={() => toggle(true)}\n        onChange={e => {\n          onInputChange(e.target.value);\n          toggle(true);\n        }}\n        className={`${darkMode ? 'bg-darkmode-liblack border-0 text-light' : ''}`}\n      />\n\n      {props.projectsData && props.projectsData.length > 0 ? (\n        <div\n          tabIndex=\"-1\"\n          role=\"menu\"\n          aria-hidden=\"false\"\n          className={`dropdown-menu${isOpen ? ' show' : ''} ${\n            darkMode ? 'bg-darkmode-liblack text-light' : ''\n          }`}\n          style={{ marginTop: '0px', width: '100%' }}\n        >\n          {props.projectsData\n            .filter(project => {\n              if (project.projectName.toLowerCase().indexOf(searchText.toLowerCase()) > -1) {\n                return project;\n              }\n            })\n            .slice(0, 10)\n            .map(item => (\n              <div\n                className=\"project-auto-complete\"\n                key={item._id}\n                onClick={() => {\n                  onInputChange(item.projectName);\n                  toggle(false);\n                  props.onDropDownSelect(item);\n                }}\n              >\n                {item.projectName}\n              </div>\n            ))}\n        </div>\n      ) : (\n        <></>\n      )}\n    </Dropdown>\n  );\n});\n\nexport default AssignProjectField;\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/QuickSetupModal/AssignSetupModal.jsx","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":119,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":119,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4235,4250],"text":""},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Label, Input } from 'reactstrap';\nimport hasPermission from '../../../utils/permissions';\nimport { deleteTitleById } from '~/actions/title';\nimport { useSelector } from 'react-redux';\nimport '../../Header/DarkMode.css';\nimport { toast } from 'react-toastify';\n\nfunction AssignSetUpModal({\n  isOpen,\n  setIsOpen,\n  title,\n  userProfile,\n  setUserProfile,\n  setTitleOnSet,\n  refreshModalTitles,\n  updateUserProfile,\n  handleSubmit,\n}) {\n  const darkMode = useSelector(state => state.theme.darkMode);\n  const [validation, setValid] = useState({\n    volunteerAgree: false,\n  });\n  const [googleDoc, setGoogleDoc] = useState('');\n  const [warning, setWarning] = useState({\n    googleDoc: 'Link is required',\n    checkbox: 'Need to be confirmed',\n  });\n  const [isGoogleDocValid, setIsGoogleDocValid] = useState(true);\n  const [mediaFolder, setMediaFolder] = useState('');\n\n  const checkboxOnClick = () => {\n    // eslint-disable-next-line no-unused-expressions\n    validation.volunteerAgree\n      ? setValid(prev => ({ ...prev, volunteerAgree: false }))\n      : setValid(prev => ({ ...prev, volunteerAgree: true }));\n  };\n\n  const setAssignedOnClick = async () => {\n    const googleDocRegex = /^https:\\/\\/docs\\.google\\.com\\/document\\/d\\/.+$/;\n\n    if (!googleDocRegex.test(googleDoc)) {\n      setWarning(prev => ({ ...prev, googleDoc: 'Invalid Google Doc link' }));\n      setIsGoogleDocValid(false);\n      return;\n    }\n\n    if (validation.volunteerAgree && googleDoc.length !== 0) {\n      const originalTeamId = userProfile.teams.map(team => team._id);\n      const originalProjectId = userProfile.projects.map(project => project._id);\n      // If the title has team assigned, add the team to the user profile. Remove duplicate teams\n      const teamsAssigned = title.teamAssiged\n        ? originalTeamId.includes(title?.teamAssiged._id)\n          ? userProfile.teams\n          : [...userProfile.teams, title.teamAssiged]\n        : userProfile.teams;\n      // If the title has project assigned, add the project to the user profile. Remove duplicate projects\n      const projectAssigned = title.projectAssigned\n        ? originalProjectId.includes(title?.projectAssigned._id)\n          ? userProfile.projects\n          : [...userProfile.projects, title.projectAssigned]\n        : userProfile.projects;\n\n      // Ensure adminLinks is not undefined or null\n      const updatedAdminLinks = (userProfile.adminLinks || []).map(obj => {\n        if (obj.Name === 'Media Folder') obj.Link = mediaFolder || '';\n        if (obj.Name === 'Google Doc') obj.Link = googleDoc || '';\n        return obj;\n      });\n\n      if (!updatedAdminLinks.find(obj => obj.Name === 'Media Folder')) {\n        updatedAdminLinks.push({ Name: 'Media Folder', Link: mediaFolder || '' });\n      }\n      if (!updatedAdminLinks.find(obj => obj.Name === 'Google Doc')) {\n        updatedAdminLinks.push({ Name: 'Google Doc', Link: googleDoc || '' });\n      }\n\n      const data = {\n        teams: teamsAssigned,\n        jobTitle: userProfile.jobTitle,\n        projects: projectAssigned,\n        teamCode: title.teamCode,\n        adminLinks: updatedAdminLinks,\n      };\n\n      // Remove duplicates\n      if (userProfile.teams.includes(title?.teamAssiged)) data.teams.pop();\n      if (userProfile.projects.includes(title.projectAssigned)) data.projects.pop();\n\n      if (hasPermission('manageAdminLinks')) {\n        setUserProfile(prev => ({ ...prev, ...data }));\n      }\n      const result = await handleSubmit(Object.assign({}, userProfile, data));\n\n      setTitleOnSet(true);\n      setValid(() => ({ volunteerAgree: false }));\n      setIsOpen(false);\n\n      const SUCCESS_MESSAGE =\n        'Success! Google Doc, Team Code, Project Assignment, ' +\n        'and Media Folder details are now updated for this individual.';\n      toast.success(SUCCESS_MESSAGE, { autoClose: 10000 });\n    }\n  };\n\n  // close the modal\n  const setNoOnClick = () => {\n    setIsOpen(false);\n  };\n\n  // delete this title\n  const deleteTitle = titleId => {\n    deleteTitleById(titleId)\n      .then(() => {\n        refreshModalTitles();\n        setIsOpen(false);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const isLink = str => {\n    try {\n      const url = new URL(str);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  };\n\n  // UseEffect to get the media folder when userProfile or isOpen changes\n  useEffect(() => {\n    if (isOpen && userProfile) {\n      getMediaFolder(userProfile);\n    }\n  }, [isOpen, userProfile]);\n\n  // Gets the media Folder url from the mediaUrl\n  const getMediaFolder = userProfile => {\n    const currMediaFile = userProfile.adminLinks?.find(obj => obj.Name === 'Media Folder');\n\n    if (currMediaFile && currMediaFile.Link) {\n      setMediaFolder(currMediaFile.Link);\n    } else if (userProfile.mediaUrl) {\n      setMediaFolder(userProfile.mediaUrl);\n    } else if (title && title.mediaFolder) {\n      setMediaFolder(title.mediaFolder);\n    } else {\n      // setMediaFolder(\"No media folder available\");\n      setMediaFolder(null);\n    }\n  };\n\n  const fontColor = darkMode ? 'text-light' : '';\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      toggle={() => setIsOpen(false)}\n      className={darkMode ? 'text-light dark-mode' : ''}\n    >\n      <ModalHeader toggle={() => setIsOpen(false)} className={darkMode ? 'bg-space-cadet' : ''}>\n        Assign {userProfile?.firstName} as {title?.titleName}\n      </ModalHeader>\n      <ModalBody className={darkMode ? 'bg-yinmn-blue' : ''}>\n        <div className={`${fontColor} modal-cont`}>\n          <Label className={fontColor}>\n            <h6>Google Doc: </h6>\n          </Label>\n          <Input type=\"text\" onChange={e => setGoogleDoc(e.target.value)}></Input>\n          {!isGoogleDocValid || googleDoc === '' ? (\n            <p className=\"text-danger\">{warning.googleDoc}</p>\n          ) : null}\n\n          <h6>Team Code: {title?.teamCode}</h6>\n          <h6>Project Assignment: {title?.projectAssigned?.projectName}</h6>\n          <h6>\n            Media Folder:{' '}\n            {isLink(title?.mediaFolder) ? (\n              <a\n                href={title?.mediaFolder}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{\n                  display: 'inline-block',\n                  maxWidth: '100%',\n                  wordBreak: 'break-all',\n                  overflowWrap: 'break-word',\n                  color: darkMode ? 'white' : 'black',\n                }}\n              >\n                {title?.mediaFolder}\n              </a>\n            ) : (\n              <span style={{ wordBreak: 'break-all', overflowWrap: 'break-word' }}>\n                {title?.mediaFolder}\n              </span>\n            )}\n          </h6>\n          {title?.teamAssiged?.teamName ? (\n            <h6>Team Assignment: {title?.teamAssiged?.teamName}</h6>\n          ) : (\n            ''\n          )}\n          <div className=\"container ml-1 pdrl-1\">\n            <Input\n              type=\"checkbox\"\n              required\n              id=\"agreement\"\n              value=\"true\"\n              onClick={() => checkboxOnClick()}\n            />\n            <Label for=\"agreement\" className={fontColor}>\n              Volunteer Agreement Confirmed\n            </Label>\n          </div>\n          {validation.volunteerAgree ? '' : <p className=\"text-danger\">{warning.checkbox}</p>}\n        </div>\n      </ModalBody>\n      <ModalFooter className={darkMode ? 'bg-yinmn-blue' : ''}>\n        <div className=\"col text-center\">\n          <Button className=\"bg-success m-3\" onClick={() => setAssignedOnClick()}>\n            Yes\n          </Button>\n          <Button className=\"bg-danger m-3\" onClick={() => setNoOnClick()}>\n            No\n          </Button>\n          <Button className=\"bg-danger m-3\" onClick={() => deleteTitle(title._id)}>\n            Delete QSC\n          </Button>\n        </div>\n      </ModalFooter>\n    </Modal>\n  );\n}\n\nexport default AssignSetUpModal;\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/QuickSetupModal/AssignTeamCodeField.jsx","messages":[{"ruleId":"react/display-name","severity":2,"message":"Component definition is missing display name","line":5,"column":29,"nodeType":"CallExpression","messageId":"noDisplayName","endLine":87,"endColumn":3},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":71,"column":15,"nodeType":"JSXOpeningElement","endLine":79,"endColumn":16},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":71,"column":15,"nodeType":"JSXOpeningElement","endLine":79,"endColumn":16}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect, useState } from 'react';\nimport { Dropdown, Input } from 'reactstrap';\nimport { useSelector } from 'react-redux';\n\nconst AssignTeamCodeField = React.memo(props => {\n  const {\n    isError = false,\n    teamCodeData,\n    selectedTeamCode,\n    onSelectTeamCode,\n    cleanTeamCodeAssign,\n    onDropDownSelect,\n    editMode,\n    value,\n  } = props;\n\n  const [searchText, onInputChange] = useState(() => {\n    if (editMode) {\n      return value;\n    }\n    return '';\n  });\n  const [isOpen, toggle] = useState(false);\n  const darkMode = useSelector(state => state.theme.darkMode);\n\n  useEffect(() => {\n    if (selectedTeamCode && selectedTeamCode !== searchText) {\n      onSelectTeamCode(undefined);\n      cleanTeamCodeAssign();\n    }\n  }, [searchText]);\n\n  return (\n    <Dropdown\n      isOpen={isOpen}\n      toggle={() => {\n        toggle(!isOpen);\n      }}\n      style={{ width: '100%', marginRight: '5px' }}\n    >\n      <Input\n        type=\"text\"\n        value={searchText}\n        onFocus={() => toggle(true)}\n        onChange={e => {\n          onInputChange(e.target.value);\n          toggle(true);\n        }}\n        style={{\n          borderColor: isError ? 'red' : '',\n          borderWidth: isError ? '2px' : '',\n        }}\n      />\n\n      {teamCodeData?.length > 0 ? (\n        <div\n          tabIndex=\"-1\"\n          role=\"menu\"\n          aria-hidden=\"false\"\n          className={`dropdown-menu${isOpen ? ' show' : ''} ${\n            darkMode ? 'bg-darkmode-liblack text-light' : ''\n          }`}\n          style={{ marginTop: '0px', width: '100%' }}\n        >\n          {teamCodeData\n            .filter(teamCode => {\n              return teamCode.value.toLowerCase().includes(searchText.toLowerCase());\n            })\n            .slice(0, 10)\n            .map((teamCode, index) => (\n              <div\n                className=\"project-auto-complete\"\n                key={index}\n                onClick={() => {\n                  onInputChange(teamCode.value);\n                  toggle(false);\n                  onDropDownSelect(teamCode.value);\n                }}\n              >\n                {teamCode.value}\n              </div>\n            ))}\n        </div>\n      ) : null}\n    </Dropdown>\n  );\n});\n\nexport default AssignTeamCodeField;\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/QuickSetupModal/AssignTeamField.jsx","messages":[{"ruleId":"react/display-name","severity":2,"message":"Component definition is missing display name","line":5,"column":25,"nodeType":"CallExpression","messageId":"noDisplayName","endLine":89,"endColumn":3},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":71,"column":15,"nodeType":"JSXOpeningElement","endLine":79,"endColumn":16},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":71,"column":15,"nodeType":"JSXOpeningElement","endLine":79,"endColumn":16}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { Dropdown, Input } from 'reactstrap';\nimport { useSelector } from 'react-redux';\n\nconst AssignTeamField = React.memo(props => {\n  const [isOpen, toggle] = React.useState(false);\n  const [searchText, setSearchText] = useState(() => {\n    if (props.editMode) {\n      return props.value == undefined ? '' : props.value.teamName;\n    } else {\n      return props.searchText;\n    }\n  });\n\n  const darkMode = useSelector(state => state.theme.darkMode);\n\n  React.useEffect(() => {\n    if (props.selectedTeam && props.selectedTeam.teamName !== searchText) {\n      props.onSelectTeam(undefined);\n      props.undoTeamAssigned();\n    }\n\n    if (searchText === '') {\n      props.cleanTeamAssigned();\n    }\n  }, [searchText]);\n\n  const sTeam = props.teamsData.allTeams.find(team => team.teamName === '2021 Test new');\n  if (sTeam) {\n    // console.log('sTeam', sTeam);\n  }\n\n  return (\n    <Dropdown\n      isOpen={isOpen}\n      toggle={() => {\n        toggle(!isOpen);\n      }}\n      style={{ width: '100%', marginRight: '5px' }}\n    >\n      <Input\n        type=\"text\"\n        value={searchText}\n        onFocus={() => {\n          toggle(true);\n        }}\n        onChange={e => {\n          setSearchText(e.target.value);\n          toggle(true);\n        }}\n      />\n\n      {props.teamsData && props.teamsData.allTeams.length > 0 ? (\n        <div\n          tabIndex=\"-1\"\n          role=\"menu\"\n          aria-hidden=\"false\"\n          className={`dropdown-menu${isOpen ? ' show' : ''} ${\n            darkMode ? 'bg-darkmode-liblack text-light' : ''\n          }`}\n          style={{ marginTop: '0px', width: '100%' }}\n        >\n          {props.teamsData.allTeams\n            .filter(team => {\n              if (team.teamName.toLowerCase().indexOf(searchText.toLowerCase()) > -1) {\n                return team;\n              }\n            })\n            .slice(0, 10)\n            .map((item, index) => (\n              <div\n                key={index}\n                className=\"team-auto-complete\"\n                onClick={() => {\n                  setSearchText(item.teamName);\n                  toggle(false);\n                  props.onDropDownSelect(item);\n                }}\n              >\n                {item.teamName}\n              </div>\n            ))}\n        </div>\n      ) : (\n        <></>\n      )}\n    </Dropdown>\n  );\n});\n\nexport default AssignTeamField;\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/QuickSetupModal/EditTitlesModal.jsx","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":30,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":30,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[986,1032],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":34,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":34,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1146,1193],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":39,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":39,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1273,1324],"text":""},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useEffect, useState } from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport { ENDPOINTS } from '~/utils/URL';\nimport axios from 'axios';\n\nconst EditTitlesModal = ({ isOpen, toggle, titles, refreshModalTitles, darkMode }) => {\n  const [orderedTitles, setOrderedTitles] = useState([]);\n\n  useEffect(() => {\n    if (titles && titles.length > 0) {\n      setOrderedTitles(titles);\n    }\n  }, [titles]);\n\n  const handleDragEnd = result => {\n    if (!result.destination) return;\n    const items = Array.from(orderedTitles);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    setOrderedTitles(items);\n  };\n\n  const handleSave = async () => {\n    try {\n      const orderData = orderedTitles.map((title, index) => ({\n        id: title._id,\n        order: index + 1,\n      }));\n      console.log('Sending order data:', orderData);\n\n      const url = ENDPOINTS.REORDER_TITLES();\n      const response = await axios.put(url, { orderData });\n      console.log('Server response:', response.data);\n\n      await refreshModalTitles();\n      toggle();\n    } catch (error) {\n      console.error('Error saving title order: ', error);\n    }\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      toggle={toggle}\n      className={darkMode ? 'text-light dark-mode' : ''}\n      style={{ maxHeight: '100vh' }}\n    >\n      <ModalHeader toggle={toggle} className={darkMode ? 'bg-space-cadet' : ''}>\n        Edit Titles Order\n      </ModalHeader>\n      <ModalBody\n        className={darkMode ? 'bg-yinmn-blue' : ''}\n        style={{\n          overflowY: 'auto',\n          maxHeight: 'calc(100vh - 200px)',\n        }}\n      >\n        <DragDropContext onDragEnd={handleDragEnd}>\n          <Droppable droppableId=\"titles\">\n            {provided => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                className=\"titles-list\"\n                style={{ minHeight: '100%' }}\n              >\n                {orderedTitles.map((title, index) => (\n                  <Draggable key={title._id} draggableId={title._id} index={index}>\n                    {(provided, snapshot) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        className={`role-buttons ${snapshot.isDragging ? 'dragging' : ''}`}\n                        style={{\n                          ...provided.draggableProps.style,\n                          padding: '10px',\n                          margin: '8px 0',\n                          backgroundColor: darkMode ? '#2c3e50' : '#f8f9fa',\n                          border: '1px solid #dee2e6',\n                          borderRadius: '4px',\n                          cursor: 'grab',\n                        }}\n                      >\n                        {title?.titleCode ? title.titleCode : title?.titleName?.substring(0, 7)}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </ModalBody>\n      <ModalFooter className={darkMode ? 'bg-yinmn-blue' : ''}>\n        <Button color=\"secondary\" onClick={toggle}>\n          Cancel\n        </Button>\n        <Button color=\"primary\" onClick={handleSave}>\n          Save Order\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default EditTitlesModal;\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/QuickSetupModal/QuickSetupCodes.jsx","messages":[{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":17,"column":11,"nodeType":"JSXOpeningElement","endLine":31,"endColumn":12},{"ruleId":"jsx-a11y/interactive-supports-focus","severity":2,"message":"Elements with the 'button' interactive role must be tabbable.","line":17,"column":11,"nodeType":"JSXOpeningElement","endLine":31,"endColumn":12}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useSelector } from 'react-redux';\n\nfunction QuickSetupCodes({\n  titles,\n  setShowAssignModal,\n  setTitleOnClick,\n  setShowAddTitle,\n  editMode,\n  assignMode,\n  teamCodes,\n}) {\n  return (\n    <div className=\"blueSquares mt-3\" id=\"qsc-outer-wrapper\">\n      {titles.map(title => {\n        const isTeamCodeInList = teamCodes.some(code => code.value === title.teamCode);\n        return (\n          <div\n            key={title._id}\n            role=\"button\"\n            id=\"wrapper\"\n            className={`role-button ${isTeamCodeInList ? 'bg-warning' : 'bg-danger'}`}\n            onClick={() => {\n              if (editMode) {\n                setShowAddTitle(true);\n              } else if (assignMode) {\n                setShowAssignModal(true);\n              }\n              setTitleOnClick(title);\n            }}\n            value={title.titleName}\n          >\n            {title?.titleCode ? title.titleCode : title?.titleName?.substring(0, 7)}\n            <div className=\"title\">\n              <span className=\"setup-title-name\">{title?.titleName}</span>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default QuickSetupCodes;\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/QuickSetupModal/QuickSetupModal.jsx","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":40,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":40,"endColumn":32},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":51,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":51,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2197,2216],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":65,"column":23,"nodeType":"MemberExpression","messageId":"unexpected","endLine":65,"endColumn":36}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState, useEffect } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { connect, useSelector } from 'react-redux';\nimport hasPermission from '../../../utils/permissions';\nimport { boxStyle, boxStyleDark } from '../../../styles';\nimport AssignSetUpModal from './AssignSetupModal';\nimport QuickSetupCodes from './QuickSetupCodes';\nimport SaveButton from '../UserProfileEdit/SaveButton';\nimport AddNewTitleModal from './AddNewTitleModal';\nimport EditTitlesModal from './EditTitlesModal';\nimport { getAllTitle } from '../../../actions/title';\nimport './QuickSetupModal.css';\nimport '../../Header/DarkMode.css';\n\nfunction QuickSetupModal(props) {\n  const darkMode = useSelector(state => state.theme.darkMode);\n  const canEditTitle = props.hasPermission('editTitle');\n  const canAddTitle = props.hasPermission('addNewTitle');\n  const canAssignTitle = props.hasPermission('assignTitle');\n  const [showAddTitle, setShowAddTitle] = useState(false);\n  const [showAssignModal, setShowAssignModal] = useState(false);\n  const [titles, setTitles] = useState([]);\n  const [curtitle, setTitleOnClick] = useState({});\n  // const [titleOnSet, setTitleOnSet] = useState(true);\n  const [editMode, setEditMode] = useState(false);\n  const [showMessage, setShowMessage] = useState(false);\n  const [warningMessage, setWarningMessage] = useState({});\n  const [adminLinks, setAdminLinks] = useState([]);\n  const [editModal, showEditModal] = useState(false);\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n  const [QSTTeamCodes, setQSTTeamCodes] = useState([]);\n\n  const stateTeamCodes = useSelector(state => state.teamCodes?.teamCodes || []);\n\n  useEffect(() => {\n    getAllTitle()\n      .then(res => {\n        setTitles(res.data);\n      })\n      .catch(err => console.log(err));\n  }, [editModal, refreshTrigger]);\n\n  // refresh the QSCs after CREATE/DELETE operations on titles\n  const refreshModalTitles = async () => {\n    try {\n      setRefreshTrigger(prev => prev + 1);\n      const response = await getAllTitle();\n      const sortedData = response.data.sort((a, b) => a.order - b.order);\n      setTitles(sortedData);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    if (props.fetchTeamCodeAllUsers) {\n      props\n        .fetchTeamCodeAllUsers()\n        .then(fetchedCodes => {\n          if (fetchedCodes?.length) {\n            const formatted = fetchedCodes.map(code => ({ value: code }));\n            setQSTTeamCodes(formatted);\n          }\n        })\n        .catch(err => console.error('Failed to fetch team codes:', err));\n    }\n  }, [stateTeamCodes.length, props.teamsData && props.teamsData.allTeamCode]);\n\n  return (\n    <div className={`container pt-3 ${darkMode ? 'bg-yinmn-blue text-light border-0' : ''}`}>\n      {canAssignTitle || canEditTitle || canAddTitle ? (\n        <QuickSetupCodes\n          setSaved={props.setSaved}\n          userProfile={props.userProfile}\n          setUserProfile={props.setUserProfile}\n          titles={titles}\n          setShowAssignModal={setShowAssignModal}\n          setTitleOnClick={setTitleOnClick}\n          editMode={editMode}\n          assignMode={canAssignTitle}\n          setShowAddTitle={setShowAddTitle}\n          teamCodes={QSTTeamCodes}\n        />\n      ) : (\n        ''\n      )}\n\n      <div className=\"col text-center mt-3 flex\">\n        {canAddTitle ? (\n          <Button\n            color=\"primary\"\n            onClick={() => setShowAddTitle(true)}\n            style={darkMode ? boxStyleDark : boxStyle}\n            disabled={editMode == true}\n            title=\"Click this to add a new Quick Setup Title\"\n          >\n            Add New QST\n          </Button>\n        ) : (\n          ''\n        )}\n        {canAddTitle ? (\n          <Button\n            color=\"primary mx-2\"\n            onClick={() => showEditModal(true)}\n            style={darkMode ? boxStyleDark : boxStyle}\n            disabled={editMode == true}\n            title=\"Click this to change the order of QST codes\"\n          >\n            Change Order\n          </Button>\n        ) : (\n          ''\n        )}\n        {canEditTitle ? (\n          !editMode ? (\n            <Button\n              color=\"primary mx-2\"\n              onClick={() => setEditMode(true)}\n              style={darkMode ? boxStyleDark : boxStyle}\n            >\n              Edit\n            </Button>\n          ) : (\n            <Button\n              color=\"primary mx-2\"\n              onClick={() => setEditMode(false)}\n              style={darkMode ? boxStyleDark : boxStyle}\n            >\n              Save\n            </Button>\n          )\n        ) : (\n          ''\n        )}\n        <EditTitlesModal\n          isOpen={editModal}\n          toggle={() => showEditModal(false)}\n          titles={titles}\n          refreshModalTitles={refreshModalTitles}\n          darkMode={darkMode}\n        />\n      </div>\n      {showAddTitle || editMode ? (\n        <AddNewTitleModal\n          teamsData={props.teamsData}\n          projectsData={props.projectsData}\n          isOpen={showAddTitle}\n          setIsOpen={setShowAddTitle}\n          refreshModalTitles={refreshModalTitles}\n          setWarningMessage={setWarningMessage}\n          setShowMessage={setShowMessage}\n          editMode={editMode}\n          title={curtitle}\n          QSTTeamCodes={QSTTeamCodes}\n        />\n      ) : (\n        ''\n      )}\n\n      {canAssignTitle && showAssignModal && editMode === false ? (\n        <AssignSetUpModal\n          setSaved={() => props.setSaved(true)}\n          handleSubmit={props.handleSubmit}\n          userProfile={props.userProfile}\n          setUserProfile={props.setUserProfile}\n          isOpen={showAssignModal}\n          setIsOpen={setShowAssignModal}\n          toggle={setShowAssignModal}\n          title={curtitle}\n          setTitleOnSet={props.setTitleOnSet}\n          refreshModalTitles={refreshModalTitles}\n          updateUserProfile={props.updateUserProfile}\n        />\n      ) : (\n        ''\n      )}\n      {showMessage && (\n        <Modal\n          isOpen={showMessage}\n          toggle={() => setShowMessage(false)}\n          className={darkMode ? 'text-light dark-mode' : ''}\n        >\n          <ModalHeader\n            toggle={() => setShowMessage(false)}\n            className={darkMode ? 'bg-space-cadet' : ''}\n          >\n            {warningMessage.title}\n          </ModalHeader>\n          <ModalBody className={darkMode ? 'bg-yinmn-blue' : ''}>\n            {warningMessage.content}\n          </ModalBody>\n          <ModalFooter className={darkMode ? 'bg-yinmn-blue' : ''}>\n            <Button color=\"primary\" onClick={() => setShowMessage(false)}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      )}\n    </div>\n  );\n}\n\nexport default connect(null, { hasPermission })(QuickSetupModal);\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/QuickSetupModal/__mock__/mockData.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/QuickSetupModal/__test__/QuickSetupModal.test.jsx","messages":[{"ruleId":"testing-library/no-unnecessary-act","severity":2,"message":"Avoid wrapping Testing Library util calls in `act`","line":46,"column":11,"nodeType":"Identifier","messageId":"noUnnecessaryActTestingLibraryUtil","endLine":46,"endColumn":14},{"ruleId":"testing-library/no-unnecessary-act","severity":2,"message":"Avoid wrapping Testing Library util calls in `act`","line":60,"column":11,"nodeType":"Identifier","messageId":"noUnnecessaryActTestingLibraryUtil","endLine":60,"endColumn":14},{"ruleId":"testing-library/no-unnecessary-act","severity":2,"message":"Avoid wrapping Testing Library util calls in `act`","line":80,"column":11,"nodeType":"Identifier","messageId":"noUnnecessaryActTestingLibraryUtil","endLine":80,"endColumn":14}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, screen, fireEvent, act, waitFor } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport { Provider } from 'react-redux';\nimport { configureStore } from 'redux-mock-store';\nimport QuickSetupModal from '../QuickSetupModal';\nimport { getAllTitle } from '../../../../actions/title';\nimport {\n  mockTeamsData,\n  mockUserProfile,\n  mockTitles,\n  mockUserPermissions,\n} from '../__mock__/mockData';\nimport hasPermission from '~/utils/permissions';\nimport { vi } from 'vitest';\n\nvi.mock('react-redux', async importOriginal => {\n  const actual = await importOriginal();\n  return {\n    ...actual,\n    connect: () => Component => Component,\n  };\n});\nvi.mock('../../../../actions/title', () => ({\n  getAllTitle: vi.fn(),\n}));\n\nvi.mock('../../../../utils/permissions', () => ({\n  __esModule: true,\n  default: vi.fn(permission => mockUserPermissions[permission]),\n}));\n\nconst mockStore = configureStore([]);\n\ndescribe('QuickSetupModal Component', () => {\n  let store;\n\n  beforeEach(() => {\n    store = mockStore({\n      theme: { darkMode: false },\n    });\n    getAllTitle.mockResolvedValue({ data: mockTitles });\n  });\n\n  test('renders \"Add New QST\" button when user has addTitle permission', async () => {\n    await act(async () => {\n      render(\n        <Provider store={store}>\n          <QuickSetupModal userProfile={mockUserProfile} hasPermission={() => true} />\n        </Provider>,\n      );\n    });\n\n    const addButton = screen.getByText('Add New QST');\n    expect(addButton).toBeInTheDocument();\n    expect(addButton).toBeEnabled();\n  });\n\n  test('opens AddNewTitleModal when \"Add New QST\" button is clicked', async () => {\n    await act(async () => {\n      render(\n        <Provider store={store}>\n          <QuickSetupModal\n            userProfile={mockUserProfile}\n            hasPermission={() => true}\n            teamsData={mockTeamsData}\n          />\n        </Provider>,\n      );\n    });\n\n    fireEvent.click(screen.getByText('Add New QST'));\n\n    await waitFor(() => {\n      expect(screen.getByText('Add A New Title')).toBeInTheDocument();\n    });\n  });\n\n  test('renders Edit and Save buttons conditionally', async () => {\n    await act(async () => {\n      render(\n        <Provider store={store}>\n          <QuickSetupModal userProfile={mockUserProfile} hasPermission={() => true} />\n        </Provider>,\n      );\n    });\n\n    const editButton = screen.getByText('Edit');\n    expect(editButton).toBeInTheDocument();\n\n    fireEvent.click(editButton);\n\n    const saveButton = screen.getByText('Save');\n    expect(saveButton).toBeInTheDocument();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/ScheduleExplanationModal/ScheduleExplanationModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/ScheduleExplanationModal/__test__/ScheduleExplanationModal.test.jsx","messages":[{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":64,"column":34,"nodeType":"MemberExpression","messageId":"noContainer","endLine":64,"endColumn":57},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":64,"column":44,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":64,"column":44,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":65,"column":43,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":65,"column":43,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":103,"column":25,"nodeType":"MemberExpression","messageId":"noContainer","endLine":103,"endColumn":48},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":103,"column":35,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":103,"column":35,"nodeType":"MemberExpression","messageId":"noNodeAccess"}],"suppressedMessages":[],"errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, screen, within } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport ScheduleExplanationModal from '../ScheduleExplanationModal.jsx';\nimport moment from 'moment-timezone';\n\nconst mockHandleClose = vi.fn();\nconst mockInfringements = [\n  { _id: '1', date: '2023-12-01', description: 'Missed deadline' },\n  { _id: '2', date: '2024-01-15', description: 'Unapproved absence' },\n];\nconst mockTimeOffRequests = [\n  {\n    _id: '3',\n    startingDate: '2024-01-10',\n    duration: 5,\n    reason: 'it is the time for my Vacation, and all of my work is done',\n  },\n  {\n    _id: '4',\n    startingDate: '2024-03-15',\n    duration: 1,\n    reason: 'I want to take a medical leave, so I need to take a break',\n  },\n];\n\ndescribe('SchedulerExplanationModal', () => {\n  beforeEach(() => {\n    vi.clearAllMocks();\n  });\n\n  it('renders modal with correct title and content', () => {\n    render(\n      <ScheduleExplanationModal\n        infringementsNum={3}\n        handleClose={mockHandleClose}\n        infringements={mockInfringements}\n        timeOffRequests={mockTimeOffRequests}\n      />,\n    );\n    expect(screen.getByText('Please Refer To The Explanation')).toBeInTheDocument();\n\n    expect(\n      screen.getByText(\n        /Including your time already requested off, you have used the equivalent of/,\n      ),\n    ).toBeInTheDocument();\n    expect(screen.getByText('3')).toHaveStyle('color: rgb(255, 0, 0)');\n    expect(screen.getByText('2')).toHaveStyle('color: rgb(255, 0, 0)');\n    expect(screen.getByText('5 weeks')).toBeInTheDocument();\n  });\n\n  it('renders infringements list correctly', () => {\n    const { container } = render(\n      <ScheduleExplanationModal\n        infringementsNum={3}\n        handleClose={mockHandleClose}\n        infringements={mockInfringements}\n        timeOffRequests={[]}\n      />,\n    );\n    expect(screen.getByText('INFRINGEMENTS:')).toBeInTheDocument();\n\n    const infringementsSection = container.querySelector('.Schedule-explanation-modal-list-marker');\n    const boldText = infringementsSection.querySelectorAll('b');\n    expect(boldText[0]).toHaveTextContent('Date:');\n    expect(boldText[1]).toHaveTextContent('Reason:');\n\n    expect(screen.getByText(/2023-12-01/i)).toBeInTheDocument();\n    expect(screen.getByText('Missed deadline')).toBeInTheDocument();\n    expect(screen.getByText(/2024-01-15/i)).toBeInTheDocument();\n    expect(screen.getByText('Unapproved absence')).toBeInTheDocument();\n  });\n\n  it('renders time off requests list correctly', () => {\n    render(\n      <ScheduleExplanationModal\n        infringementsNum={3}\n        handleClose={mockHandleClose}\n        infringements={[]}\n        timeOffRequests={mockTimeOffRequests}\n      />,\n    );\n\n    expect(screen.getByText('SCHEDULED TIME OFF:')).toBeInTheDocument();\n    expect(screen.getByText(moment('2024-01-10').format('MM-DD-YYYY'))).toBeInTheDocument();\n    expect(screen.getByText('5 weeks')).toBeInTheDocument();\n    expect(screen.getByText(/Vacation/i)).toBeInTheDocument();\n  });\n\n  it('calls handleClose when Close button is clicked', async () => {\n    const { container } = render(\n      <ScheduleExplanationModal\n        infringementsNum={3}\n        handleClose={mockHandleClose}\n        infringements={[]}\n        timeOffRequests={[]}\n      />,\n    );\n    expect(\n      screen.getByText(/Blue squares expire after 1 calendar year from their issuance date./i),\n    ).toBeInTheDocument();\n    const modalFooter = container.querySelector('.modal-footer');\n    const closeButton = within(modalFooter).getByRole('button', { name: /Close/i });\n    await userEvent.click(closeButton);\n    expect(mockHandleClose).toHaveBeenCalledTimes(1);\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/ScheduleReasonModal/CustomDatePickerInput.jsx","messages":[{"ruleId":"react/display-name","severity":2,"message":"Component definition is missing display name","line":6,"column":31,"nodeType":"CallExpression","messageId":"noDisplayName","endLine":29,"endColumn":3},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","line":8,"column":50,"nodeType":"JSXText","messageId":"unescapedEntityAlts","suggestions":[{"messageId":"replaceWithAlt","data":{"alt":"&apos;"},"fix":{"range":[306,350],"text":"Choose the Sunday of the week you&apos;ll return:"},"desc":"Replace with `&apos;`."},{"messageId":"replaceWithAlt","data":{"alt":"&lsquo;"},"fix":{"range":[306,350],"text":"Choose the Sunday of the week you&lsquo;ll return:"},"desc":"Replace with `&lsquo;`."},{"messageId":"replaceWithAlt","data":{"alt":"&#39;"},"fix":{"range":[306,350],"text":"Choose the Sunday of the week you&#39;ll return:"},"desc":"Replace with `&#39;`."},{"messageId":"replaceWithAlt","data":{"alt":"&rsquo;"},"fix":{"range":[306,350],"text":"Choose the Sunday of the week you&rsquo;ll return:"},"desc":"Replace with `&rsquo;`."}]}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { forwardRef } from 'react';\nimport { Form, FormControl, Button } from 'react-bootstrap';\nimport { FaCalendarAlt } from 'react-icons/fa';\nimport styles from './CustomDatePickerInput.css';\n\nconst CustomDatePickerInput = forwardRef(({ value, onClick }, ref) => (\n  <Form.Group>\n    <Form.Label>Choose the Sunday of the week you'll return:</Form.Label>\n    <div className=\"input-group\">\n      <FormControl\n        value={value}\n        readOnly\n        ref={ref}\n        className=\"form-control\" // Use 'form-control' class for Bootstrap styling\n        placeholder=\"Select a Sunday\"\n      />\n      <div className=\"input-group-append\">\n        <Button\n          onClick={onClick}\n          variant=\"outline-secondary\"\n          className=\"btn-icon\"\n          style={{ borderColor: 'lightgrey' }}\n        >\n          <FaCalendarAlt style={{ transform: 'translateY(-1px)' }} />\n        </Button>\n      </div>\n    </div>\n  </Form.Group>\n));\n\nexport default React.memo(CustomDatePickerInput);\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/ScheduleReasonModal/ScheduleReasonModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/ScheduleReasonModal/ScheduleReasonModalCard.jsx","messages":[{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":30,"column":13,"nodeType":"JSXOpeningElement","endLine":30,"endColumn":95},{"ruleId":"jsx-a11y/no-noninteractive-element-interactions","severity":2,"message":"Non-interactive elements should not be assigned mouse or keyboard event listeners.","line":30,"column":13,"nodeType":"JSXOpeningElement","endLine":30,"endColumn":95}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { useState } from 'react';\r\nimport { Card, CardBody, Row, Col, Button } from 'reactstrap';\r\nimport moment from 'moment-timezone';\r\n\r\nfunction ScheduleReasonModalCard({ request, handleDeleteRequest }) {\r\n  const [showFullText, setShowFullText] = useState(false);\r\n  const toggleShowText = () => {\r\n    setShowFullText(!showFullText);\r\n  };\r\n  return (\r\n    <Card className=\"mb-2\">\r\n      <CardBody>\r\n        <Row>\r\n          <Col md=\"7\">\r\n            <p>\r\n              <strong>Date Of Leave: </strong>\r\n              {moment(request.startingDate).format('MMM Do YYYY')}\r\n            </p>\r\n          </Col>\r\n          <Col md=\"5\">\r\n            <p>\r\n              <strong>Duration: </strong>\r\n              {request.duration}\r\n              {Number(request.duration) > 1 ? ` weeks` : ` week`}\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <p className={`${!showFullText ? 'text-truncate' : ''}`} onClick={toggleShowText}>\r\n              <strong>Reason: </strong>\r\n              {request.reason}\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Button className=\"btn btn-danger\" onClick={() => handleDeleteRequest(request._id)}>\r\n              Delete\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ScheduleReasonModalCard;\r\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TeamWeeklySummaries/TeamWeeklySummaries.jsx","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":21,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":21,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[658,692],"text":""},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import './TeamWeeklySummaries.css';\nimport moment from 'moment';\nimport parse from 'html-react-parser';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { toast } from 'react-toastify';\nimport { faCopy } from '@fortawesome/free-solid-svg-icons';\n\nfunction TeamWeeklySummaries({ name, i, data, darkMode }) {\n  const getWeekDates = weekIndex => ({\n    fromDate: moment()\n      .tz('America/Los_Angeles')\n      .startOf('week')\n      .subtract(weekIndex, 'week')\n      .format('DD-MMM-YY'),\n    toDate: moment()\n      .tz('America/Los_Angeles')\n      .endOf('week')\n      .subtract(weekIndex, 'week')\n      .format('DD-MMM-YY'),\n  });\n  console.log('darkMode', darkMode);\n  return (\n    <div\n      className={`team-weekly-summaries ${darkMode ? 'bg-space-cadet' : ''}`}\n      data-testid=\"team-weekly-summaries\"\n    >\n      <div className=\"team-weekly-header\">\n        <h6 className=\"team-weekly-header-date\">\n          {getWeekDates(i).fromDate} to {getWeekDates(i).toDate}\n        </h6>{' '}\n        <h6>\n          {i === 0 && !data.summary && `${name} did not submit a summary yet for this week.`}\n          {data.summary && `Viewing ${name}'s summary`}\n          {i !== 0 && !data.summary && `${name} did not submit a summary for this week.`}\n        </h6>\n      </div>\n      {data.summary && (\n        <div className=\"team-weekly-summary-container\">\n          <div className=\"team-week-summary-text\">\n            {' '}\n            {darkMode\n              ? parse('<span class=darkSpan >' + data.summary + '</span>')\n              : parse(data.summary)}\n          </div>\n\n          <FontAwesomeIcon\n            icon={faCopy}\n            className=\"copy-icon\"\n            data-testid=\"copy-icon\"\n            onClick={() => {\n              const parsedSummary = data.summary.replace(/<\\/?[^>]+>|&nbsp;/g, '');\n              navigator.clipboard.writeText(parsedSummary);\n              toast.success('Summary Copied!');\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TeamWeeklySummaries;\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TeamWeeklySummaries/__tests__/TeamWeeklySummaries.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TeamsAndProjects/AddProjectPopup.jsx","messages":[{"ruleId":"react/display-name","severity":2,"message":"Component definition is missing display name","line":10,"column":25,"nodeType":"CallExpression","messageId":"noDisplayName","endLine":211,"endColumn":3},{"ruleId":"jsx-a11y/no-autofocus","severity":2,"message":"The autoFocus prop should not be used, as it can reduce usability and accessibility for users.","line":136,"column":7,"nodeType":"JSXAttribute","endLine":136,"endColumn":24}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Alert, Input } from 'reactstrap';\nimport AddProjectsAutoComplete from './AddProjectsAutoComplete';\nimport { boxStyle, boxStyleDark } from '~/styles';\nimport '../../Header/DarkMode.css';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { ENDPOINTS } from '~/utils/URL';\n\nconst AddProjectPopup = React.memo(props => {\n  const { darkMode } = props;\n\n  const closePopup = () => {\n    props.onClose();\n    setIsOpenDropdown(false);\n    isSetShowAlert(false);\n  };\n\n  const [selectedProject, onSelectProject] = useState(undefined);\n  const [isValidProject, onValidation] = useState(true);\n  const [isShowAlert, isSetShowAlert] = useState(false);\n  const [itemsDropdown, setItemsDropdown] = useState([]);\n  const [isOpenDropdown, setIsOpenDropdown] = useState(false);\n  const [isUserIsNotSelectedAutoComplete, isSetUserIsNotSelectedAutoComplete] = useState(false);\n  const [dropdownText, setDropdownText] = useState('Unspecified');\n  const [searchText, onInputChange] = useState('');\n  const [allProjects, setAllProjects] = useState(props.projects);\n\n  const formatText = result =>\n    result\n      .toLowerCase()\n      .trim()\n      .replace(/\\s+/g, '');\n\n  useEffect(() => {\n    const categoriesProjects = props.projects.map(item => item.category);\n    const uniqueCategoriesProjects = Array.from(new Set(categoriesProjects));\n    setItemsDropdown(uniqueCategoriesProjects);\n  }, [props.projects]);\n\n  const onAssignProject = async () => {\n    try {\n      if (isUserIsNotSelectedAutoComplete) {\n        const validateProjectName = validationProjectName();\n\n        if (!validateProjectName) {\n          isSetShowAlert(true);\n          setIsOpenDropdown(true);\n          return;\n        }\n      }\n\n      if (selectedProject && !props.userProjectsById.some(x => x._id === selectedProject._id)) {\n        await props.onSelectAssignProject(selectedProject);\n        onSelectProject(undefined);\n        if (props.handleSubmit !== undefined) {\n          await props.handleSubmit();\n        }\n        toast.success('Project assigned successfully');\n      } else {\n        onValidation(false);\n      }\n    } catch (error) {}\n  };\n\n  const selectProject = project => {\n    onSelectProject(project);\n    onValidation(true);\n    isSetUserIsNotSelectedAutoComplete(false);\n  };\n\n  useEffect(() => {\n    onValidation(true);\n  }, [props.open]);\n\n  const finishFetch = status => {\n    setIsOpenDropdown(false);\n\n    toast.success(\n      status === 200\n        ? 'Project created successfully'\n        : 'Project created successfully, but it is not possible to retrieve the new project.',\n    );\n\n    setDropdownText(dropdownText);\n  };\n\n  const format = result => result.toLowerCase();\n\n  const validationProjectName = () =>\n    props.projects.find(project => format(project.projectName) === format(searchText));\n\n  const onCreateNewProject = async () => {\n    if (isShowAlert) isSetShowAlert(false);\n\n    // prettier-ignore\n    if (searchText === '') {onValidation(false); onSelectProject(undefined); return;}\n\n    const validateProjectName = validationProjectName();\n    // prettier-ignore\n    if (validateProjectName) { toast.error('This project already exists.'); return;}\n\n    const urlCreateProject = ENDPOINTS.PROJECTS;\n\n    const newProject = {\n      projectName: searchText,\n      projectCategory: dropdownText,\n      isActive: true,\n    };\n\n    try {\n      await axios.post(urlCreateProject, newProject);\n      const url = ENDPOINTS.PROJECTS;\n      const res = await axios.get(url);\n      const status = res.status;\n      const projects = res.data;\n      if (status === 200) {\n        const findNewProject = projects.filter((item, i) => i === 0)[0];\n        selectProject(findNewProject);\n        setAllProjects(res.data);\n        finishFetch(status);\n      } else {\n        onInputChange('');\n        finishFetch(status);\n      }\n    } catch (err) {\n      toast.error('Project creation failed');\n      onInputChange('');\n    }\n  };\n\n  return (\n    <Modal\n      isOpen={props.open}\n      toggle={closePopup}\n      autoFocus={false}\n      className={darkMode ? 'text-light dark-mode' : ''}\n    >\n      <ModalHeader className={darkMode ? 'bg-space-cadet' : ''} toggle={closePopup}>\n        {isOpenDropdown ? 'Create' : '  Add'} Project{' '}\n      </ModalHeader>\n      <ModalBody className={darkMode ? 'bg-yinmn-blue' : ''} style={{ textAlign: 'center' }}>\n        <>\n          <div className=\"input-group-prepend\" style={{ marginBottom: '10px' }}>\n            <AddProjectsAutoComplete\n              projectsData={allProjects}\n              onDropDownSelect={selectProject}\n              selectedProject={selectedProject}\n              setIsOpenDropdown={setIsOpenDropdown}\n              searchText={searchText}\n              onInputChange={onInputChange}\n              isSetUserIsNotSelectedAutoComplete={isSetUserIsNotSelectedAutoComplete}\n              formatText={formatText}\n            />\n            <Button\n              color={isOpenDropdown ? 'success' : 'primary'}\n              style={darkMode ? {} : { ...boxStyle, marginLeft: '5px' }}\n              onClick={isOpenDropdown ? onCreateNewProject : onAssignProject}\n            >\n              {isOpenDropdown ? 'Create' : 'Confirm'}\n            </Button>\n          </div>\n\n          {isOpenDropdown && (\n            <div\n              className=\"input-group-prepend\"\n              style={{ marginBottom: '10px', display: 'flex', flexDirection: 'row', gap: '10px' }}\n            >\n              <Input\n                type=\"select\"\n                onChange={e => setDropdownText(e.target.value)}\n                value={dropdownText}\n              >\n                {itemsDropdown.map(item => {\n                  return <option key={item}>{item}</option>;\n                })}\n              </Input>\n\n              <Button\n                color=\"danger\"\n                onClick={() => {\n                  setIsOpenDropdown(false), isSetShowAlert(false), onInputChange('');\n                }}\n                style={{ width: '100%' }}\n              >\n                Cancel project creation\n              </Button>\n            </div>\n          )}\n        </>\n        <div>\n          {!isValidProject && selectedProject && (\n            <Alert color=\"danger\">Great idea, but they already have that one! Pick another! </Alert>\n          )}\n          {!isValidProject && !selectedProject && (\n            <Alert color=\"danger\">\n              Hey, You need to {isOpenDropdown ? 'write the name of' : 'pick'} a project first!\n            </Alert>\n          )}\n\n          {isShowAlert && <Alert color=\"danger\">This project does not exist.</Alert>}\n        </div>\n      </ModalBody>\n      <ModalFooter className={darkMode ? 'bg-yinmn-blue' : ''}>\n        <Button color=\"secondary\" onClick={closePopup} style={darkMode ? boxStyleDark : boxStyle}>\n          Close\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n});\nexport default AddProjectPopup;\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TeamsAndProjects/AddProjectsAutoComplete.jsx","messages":[{"ruleId":"react/display-name","severity":2,"message":"Component definition is missing display name","line":6,"column":33,"nodeType":"CallExpression","messageId":"noDisplayName","endLine":88,"endColumn":3},{"ruleId":"jsx-a11y/no-autofocus","severity":2,"message":"The autoFocus prop should not be used, as it can reduce usability and accessibility for users.","line":26,"column":9,"nodeType":"JSXAttribute","endLine":26,"endColumn":25},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":56,"column":15,"nodeType":"JSXOpeningElement","endLine":64,"endColumn":16},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":56,"column":15,"nodeType":"JSXOpeningElement","endLine":64,"endColumn":16},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":72,"column":13,"nodeType":"JSXOpeningElement","endLine":78,"endColumn":14},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":72,"column":13,"nodeType":"JSXOpeningElement","endLine":78,"endColumn":14}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect, useState } from 'react';\nimport { Dropdown, Input } from 'reactstrap';\nimport './TeamsAndProjects.css';\nimport { useSelector } from 'react-redux';\n\nconst AddProjectsAutoComplete = React.memo(props => {\n  const [isOpen, toggle] = useState(false);\n  const darkMode = useSelector(state => state.theme.darkMode);\n\n  useEffect(() => {\n    if (!props.selectedProject) props.onInputChange('');\n    else props.onInputChange(props.selectedProject.projectName);\n  }, [props.selectedProject]);\n\n  return (\n    <Dropdown\n      isOpen={isOpen}\n      toggle={() => {\n        toggle(!isOpen);\n      }}\n      style={{ width: '100%', marginRight: '5px' }}\n    >\n      <Input\n        type=\"text\"\n        value={props.searchText}\n        autoFocus={true}\n        onChange={e => {\n          props.onInputChange(e.target.value);\n          toggle(true);\n          props.isSetUserIsNotSelectedAutoComplete(true);\n        }}\n        className={`${darkMode ? 'bg-darkmode-liblack border-0 text-light' : ''}`}\n      />\n\n      {props.searchText !== '' && props.projectsData && props.projectsData.length > 0 ? (\n        <div\n          tabIndex=\"-1\"\n          role=\"menu\"\n          aria-hidden=\"false\"\n          className={`dropdown-menu${isOpen ? ' show' : ''} ${\n            darkMode ? 'bg-darkmode-liblack text-light' : ''\n          }`}\n          style={{ marginTop: '0px', width: '100%' }}\n        >\n          {props.projectsData\n            .filter(project => {\n              if (\n                //prettier-ignore\n                props.formatText(project.projectName).indexOf(props.formatText(props.searchText)) >-1\n              ) {\n                return project;\n              }\n            })\n            .slice(0, 10)\n            .map(item => (\n              <div\n                className=\"project-auto-complete\"\n                key={item._id}\n                onClick={() => {\n                  props.onInputChange(item.projectName);\n                  toggle(false);\n                  props.onDropDownSelect(item);\n                }}\n              >\n                {item.projectName}\n              </div>\n            ))}\n\n          {props.projectsData.every(\n            item => props.formatText(item.projectName) !== props.formatText(props.searchText),\n          ) && (\n            <div\n              className=\"project-auto-complete\"\n              onClick={() => {\n                toggle(false);\n                props.setIsOpenDropdown(true);\n              }}\n            >\n              Create new project: {props.searchText}\n            </div>\n          )}\n        </div>\n      ) : (\n        <></>\n      )}\n    </Dropdown>\n  );\n});\n\nexport default AddProjectsAutoComplete;\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TeamsAndProjects/AddTeamPopup.jsx","messages":[{"ruleId":"react/display-name","severity":2,"message":"Component definition is missing display name","line":10,"column":22,"nodeType":"CallExpression","messageId":"noDisplayName","endLine":190,"endColumn":3},{"ruleId":"import/no-named-as-default-member","severity":1,"message":"Caution: `axios` also has a named export `CancelToken`. Check if you meant to write `import {CancelToken} from 'axios'` instead.","line":84,"column":27,"nodeType":"MemberExpression","endLine":84,"endColumn":44},{"ruleId":"jsx-a11y/no-autofocus","severity":2,"message":"The autoFocus prop should not be used, as it can reduce usability and accessibility for users.","line":124,"column":7,"nodeType":"JSXAttribute","endLine":124,"endColumn":24},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must be associated with a control.","line":131,"column":9,"nodeType":"JSXOpeningElement","endLine":131,"endColumn":87}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect, useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Alert, Spinner } from 'reactstrap';\nimport AddTeamsAutoComplete from './AddTeamsAutoComplete';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../../Header/DarkMode.css';\nimport { postNewTeam, getAllUserTeams } from '../../../../src/actions/allTeamsAction';\nimport axios from 'axios';\nconst AddTeamPopup = React.memo(props => {\n  const { darkMode } = props;\n\n  const dispatch = useDispatch();\n\n  const [selectedTeam, onSelectTeam] = useState(undefined);\n  const [isValidTeam, onValidation] = useState(true);\n  const [isValidNewTeam, onNewTeamValidation] = useState(true);\n  const [searchText, setSearchText] = useState(''); // add searchText state\n\n  // states and onrs for the new team form\n  const [isDuplicateTeam, setDuplicateTeam] = useState(false);\n  const [isNotDisplayAlert, setIsNotDisplayAlert] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const closePopup = () => {\n    props.onClose();\n    !isNotDisplayAlert && setIsNotDisplayAlert(true);\n  };\n\n  // prettier-ignore\n  const format = result => result.toLowerCase().trim().replace(/\\s+/g, '');\n\n  const FilteredToTeamSpecific = arrayOrObj => {\n    const result = props.teamsData.allTeams.filter(\n      item => format(item.teamName) === format(searchText),\n    );\n    if (result.length > 0) {\n      if (arrayOrObj) return result[0];\n      else return result;\n    } else return undefined;\n  };\n\n  const IfTheUserNotSelectedSuggestionAutoComplete = () => {\n    // prettier-ignore\n    if(searchText === '')  {onValidation(false);  return;}\n\n    const filterTeamData = FilteredToTeamSpecific(true);\n\n    if (filterTeamData) {\n      onAssignTeam(filterTeamData);\n      onValidation(true);\n      !isNotDisplayAlert && setIsNotDisplayAlert(true);\n    } else setIsNotDisplayAlert(false);\n  };\n\n  const onAssignTeam = result => {\n    //  prettier-ignore\n    if (!searchText) {onValidation(false);  return;} /* when the user typed nothing  */\n\n    const idToCheck = result ? result._id : selectedTeam._id;\n\n    const some = !props.userTeamsById.some(x => x._id === idToCheck);\n\n    if ((result || selectedTeam) && some) {\n      props.onSelectAssignTeam(result ? result : selectedTeam);\n\n      setSearchText('');\n\n      selectedTeam && (onSelectTeam(undefined), onValidation(false));\n      closePopup(); // automatically closes the popup after team assigned\n    } else\n      toast.error(\n        'Your user has been found in this team. Please select another team to add your user.',\n      );\n  };\n\n  const axiosResponseExceededTimeout = source => {\n    setIsLoading(false);\n    source.cancel();\n  };\n\n  const onCreateTeam = async () => {\n    if (searchText !== '') {\n      const CancelToken = axios.CancelToken;\n      const source = CancelToken.source();\n      const timeout = setTimeout(() => axiosResponseExceededTimeout(source), 20000);\n\n      setIsLoading(true);\n      const response = await dispatch(postNewTeam(searchText, true, source));\n      clearTimeout(timeout);\n      if (response.status === 200) {\n        setDuplicateTeam(false);\n        !isNotDisplayAlert && setIsNotDisplayAlert(true);\n        // Get updated teams list and select the new team\n        await dispatch(getAllUserTeams());\n        toast.success('Team created successfully');\n        const newTeam = response.data; // Assuming response contains the new team data\n        const updatedTeams = [...props.teamsData.allTeams, newTeam];\n        props.teamsData.allTeams = updatedTeams;\n        setIsLoading(false);\n        onAssignTeam(newTeam);\n      } else {\n        setIsLoading(false);\n        const messageToastError =\n          response.status === 500\n            ? 'No response received from the server'\n            : 'Error occurred while creating team';\n        response.status === 403 ? setDuplicateTeam(true) : toast.error(messageToastError);\n      }\n    } else {\n      onNewTeamValidation(false);\n    }\n  };\n\n  useEffect(() => {\n    onValidation(true);\n    onNewTeamValidation(true);\n  }, [props.open]);\n\n  return (\n    <Modal\n      isOpen={props.open}\n      toggle={closePopup}\n      autoFocus={false}\n      className={darkMode ? 'text-light dark-mode' : ''}\n    >\n      <ModalHeader className={darkMode ? 'bg-space-cadet' : ''} toggle={closePopup}>\n        Add Team\n      </ModalHeader>\n      <ModalBody className={darkMode ? 'bg-yinmn-blue' : ''} style={{ textAlign: 'center' }}>\n        <label className={darkMode ? 'text-light' : ''} style={{ textAlign: 'left' }}>\n          Add to Team\n        </label>\n        <div className=\"input-group-prepend\" style={{ marginBottom: '10px' }}>\n          <AddTeamsAutoComplete\n            teamsData={props.teamsData}\n            onCreateNewTeam={onCreateTeam}\n            searchText={searchText}\n            setInputs={onSelectTeam}\n            setSearchText={setSearchText} // Added setSearchText prop\n          />\n          <Button\n            color=\"primary\"\n            style={{ marginLeft: '5px' }}\n            onClick={() => {\n              if (!searchText) onValidation(false);\n              else IfTheUserNotSelectedSuggestionAutoComplete();\n            }}\n            disabled={isLoading}\n          >\n            {isLoading ? <Spinner color=\"light\" size=\"sm\" /> : 'Confirm'}\n          </Button>\n        </div>\n        {!isNotDisplayAlert && (\n          <>\n            <Alert color=\"danger\">Oops, this team does not exist! Create it if you want it.</Alert>\n            <div\n              style={{\n                marginBottom: '10px',\n                display: 'flex',\n                flexDirection: 'row',\n                gap: '10px',\n                justifyContent: 'center',\n              }}\n            >\n              {/* prettier-ignore  */}\n              <Button color=\"info\" onClick={onCreateTeam}><b>Create Team</b></Button>\n              {/* prettier-ignore  */}\n              <Button color=\"danger\" onClick={() => setIsNotDisplayAlert(true)}><b>Cancel team creation </b></Button>\n            </div>\n          </>\n        )}\n\n        {!isValidTeam && !searchText && (\n          <Alert color=\"danger\">Hey, You need to pick a team first!</Alert>\n        )}\n\n        {!isValidNewTeam && !isDuplicateTeam ? (\n          <Alert color=\"danger\">Please enter a team name.</Alert>\n        ) : null}\n        {isDuplicateTeam && <Alert color=\"danger\">A team with this name already exists</Alert>}\n      </ModalBody>\n      <ModalFooter className={darkMode ? 'bg-yinmn-blue' : ''}>\n        <Button color=\"secondary\" onClick={closePopup}>\n          Close\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n});\n\nexport default AddTeamPopup;\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TeamsAndProjects/AddTeamsAutoComplete.jsx","messages":[{"ruleId":"react/display-name","severity":2,"message":"Component definition is missing display name","line":7,"column":30,"nodeType":"CallExpression","messageId":"noDisplayName","endLine":89,"endColumn":3},{"ruleId":"jsx-a11y/no-autofocus","severity":2,"message":"The autoFocus prop should not be used, as it can reduce usability and accessibility for users.","line":22,"column":9,"nodeType":"JSXAttribute","endLine":22,"endColumn":25},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":49,"column":19,"nodeType":"JSXOpeningElement","endLine":60,"endColumn":20},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":49,"column":19,"nodeType":"JSXOpeningElement","endLine":60,"endColumn":20},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":70,"column":15,"nodeType":"JSXOpeningElement","endLine":76,"endColumn":16},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":70,"column":15,"nodeType":"JSXOpeningElement","endLine":76,"endColumn":16}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { Dropdown, Input } from 'reactstrap';\nimport './TeamsAndProjects.css';\nimport { toast } from 'react-toastify';\nimport { useSelector } from 'react-redux';\n\nconst AddTeamsAutoComplete = React.memo(props => {\n  const [isOpen, toggle] = React.useState(false);\n  const darkMode = useSelector(state => state.theme.darkMode);\n\n  return (\n    <Dropdown\n      isOpen={isOpen}\n      toggle={() => {\n        toggle(!isOpen);\n      }}\n      style={{ width: '100%', marginRight: '5px' }}\n    >\n      <Input\n        type=\"text\"\n        value={props.searchText}\n        autoFocus={true}\n        onChange={e => {\n          props.setSearchText(e.target.value);\n          toggle(true);\n        }}\n        className={darkMode ? 'bg-darkmode-liblack border-0 text-light' : ''}\n      />\n\n      {props.searchText !== '' && props.teamsData ? (\n        <div\n          tabIndex=\"-1\"\n          role=\"menu\"\n          aria-hidden=\"false\"\n          className={`dropdown-menu${isOpen ? ' show' : ''} ${\n            darkMode ? 'bg-darkmode-liblack text-light' : ''\n          }`}\n          style={{ marginTop: '0px', width: '100%' }}\n        >\n          {props.teamsData.allTeams\n            ? props.teamsData.allTeams\n                .filter(team => {\n                  if (team.teamName.toLowerCase().indexOf(props.searchText.toLowerCase()) > -1)\n                    return team;\n                  else return;\n                })\n                .slice(0, 10)\n                .map(item => (\n                  <div\n                    key={item._id}\n                    className=\"team-auto-complete\"\n                    onClick={() => {\n                      props.setSearchText(item.teamName);\n                      props.setInputs(inputs => ({\n                        ...inputs,\n                        teamId: item._id,\n                      }));\n                      toggle(false);\n                    }}\n                  >\n                    {item.teamName}\n                  </div>\n                ))\n            : toast.error('No teams found')}\n\n          {props.teamsData.allTeams ? (\n            props.teamsData.allTeams.every(\n              team => team.teamName.toLowerCase() !== props.searchText.toLowerCase(),\n            ) && (\n              <div\n                className=\"team-auto-complete\"\n                onClick={() => {\n                  toggle(false);\n                  props.onCreateNewTeam(props.searchText);\n                }}\n              >\n                Create new team: {props.searchText}\n              </div>\n            )\n          ) : (\n            <></>\n          )}\n        </div>\n      ) : (\n        <></>\n      )}\n    </Dropdown>\n  );\n});\n\nexport default AddTeamsAutoComplete;\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TeamsAndProjects/AutoCompleteTeamCode.jsx","messages":[{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":105,"column":23,"nodeType":"JSXOpeningElement","endLine":113,"endColumn":24},{"ruleId":"jsx-a11y/no-noninteractive-element-interactions","severity":2,"message":"Non-interactive elements should not be assigned mouse or keyboard event listeners.","line":105,"column":23,"nodeType":"JSXOpeningElement","endLine":113,"endColumn":24}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useEffect } from 'react';\nimport { Spinner, ListGroup, ListGroupItem } from 'reactstrap';\nimport { IoReload } from 'react-icons/io5';\nimport './autoComplete.css';\n\nexport const AutoCompleteTeamCode = props => {\n  const {\n    refDropdown,\n    handleCodeChange,\n    setShowDropdown,\n    showDropdown,\n    arrayInputAutoComplete,\n    inputAutoStatus,\n    isLoading,\n    fetchTeamCodeAllUsers,\n    darkMode,\n    isMobile,\n    refInput,\n  } = props;\n\n  useEffect(() => {\n    if (showDropdown) {\n      const handleClickOutside = event =>\n        refDropdown.current && !refDropdown.current.contains(event.target)\n          ? (setShowDropdown(false), document.getElementById('teamCode').blur())\n          : null;\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => document.removeEventListener('mousedown', handleClickOutside);\n    }\n  }, [refDropdown, showDropdown]);\n\n  const classNameStyleP = `m-0 p-1 d-flex justify-content-center align-items-center list-group-item-action`;\n\n  const styleP = {\n    border: '1px solid #ccc',\n    backgroundColor: '#fff',\n    width:\n      arrayInputAutoComplete && arrayInputAutoComplete.length <= 3\n        ? '100%'\n        : arrayInputAutoComplete && arrayInputAutoComplete.length <= 30\n        ? '102px'\n        : '100px',\n  };\n\n  const borderBottomRadius = {\n    borderBottomRightRadius: '10px',\n    borderBottomLeftRadius: '10px',\n  };\n\n  const styleSpinner = { ...styleP, ...borderBottomRadius, width: 'auto' };\n  const styleReload = { fontSize: '1.5rem', color: '#0780eb', cursor: 'pointer' };\n  const colordarkWithBorder = {\n    backgroundColor: '#1c2541',\n    color: '#fff',\n    border: '2px solid #1c5b87',\n  };\n\n  let autoComplete = false;\n\n  return (\n    <>\n      <section>\n        {showDropdown && (\n          <section\n            ref={refDropdown}\n            className=\"overflow-auto mb-2 scrollAutoComplete\"\n            style={{\n              height: isLoading ? '7rem' : arrayInputAutoComplete.length <= 30 ? 'auto' : '23rem',\n              width: 'auto',\n              position: arrayInputAutoComplete.length <= 3 || isLoading ? '' : 'relative',\n            }}\n          >\n            {!isLoading ? (\n              inputAutoStatus !== 200 ? (\n                <ListGroup>\n                  <ListGroupItem\n                    className=\"d-flex justify-content-center align-items-center\"\n                    onClick={fetchTeamCodeAllUsers}\n                    style={darkMode ? colordarkWithBorder : null}\n                  >\n                    <IoReload style={styleReload} />\n                  </ListGroupItem>\n                </ListGroup>\n              ) : arrayInputAutoComplete.length === 0 ? (\n                <p\n                  className={classNameStyleP}\n                  style={\n                    darkMode\n                      ? { ...styleP, ...colordarkWithBorder, width: 'auto' }\n                      : { ...styleP, width: 'auto' }\n                  }\n                >\n                  No options\n                </p>\n              ) : (\n                <div\n                  className={`${arrayInputAutoComplete.length > 3 &&\n                    'row row-cols-lg-5 row-cols-sm-4'}`}\n                >\n                  {arrayInputAutoComplete.map(item => (\n                    <div\n                      key={item}\n                      className={`${arrayInputAutoComplete.length <= 3 ? '' : 'col col-cols-3'}`}\n                    >\n                      <p\n                        className={classNameStyleP}\n                        style={\n                          darkMode\n                            ? { ...styleP, ...colordarkWithBorder, cursor: 'pointer' }\n                            : { ...styleP, cursor: 'pointer' }\n                        }\n                        onClick={() => handleCodeChange(item, (autoComplete = true))}\n                      >\n                        {item}\n                      </p>\n                    </div>\n                  ))}\n                </div>\n              )\n            ) : (\n              <section\n                className=\"h-100 d-flex justify-content-center align-items-center\"\n                style={darkMode ? { ...styleSpinner, ...colordarkWithBorder } : styleSpinner}\n              >\n                <Spinner color=\"primary\" />\n              </section>\n            )}\n          </section>\n        )}\n      </section>\n    </>\n  );\n};\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TeamsAndProjects/ProjectsTab.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TeamsAndProjects/Switch.jsx","messages":[{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must have accessible text.","line":13,"column":7,"nodeType":"JSXOpeningElement","endLine":17,"endColumn":8}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import './Switch.css';\nconst Switch = ({ isOn, handleToggle }) => {\n  return (\n    <div className=\"switch-container\">\n      <p className=\"switch-title\">invisible</p>\n      <input\n        checked={isOn}\n        onChange={handleToggle}\n        className=\"switch-checkbox\"\n        id=\"switch\"\n        type=\"checkbox\"\n      />\n      <label\n        style={{ background: isOn ? '#0062cc' : ' ' }}\n        className=\"switch-label\"\n        htmlFor=\"switch\"\n      >\n        <span className=\"switch-button\" />\n      </label>\n      <p className=\"switch-title\">visible</p>\n    </div>\n  );\n};\n\nexport default Switch;\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TeamsAndProjects/TeamMember.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TeamsAndProjects/TeamsTab.jsx","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":68,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":68,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1625,1670],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":81,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":81,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[2014,2060],"text":""},"desc":"Remove the console.error()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { addTeamMember, deleteTeamMember } from '~/actions/allTeamsAction';\nimport { toast } from 'react-toastify';\nimport AddTeamPopup from './AddTeamPopup';\nimport UserTeamsTable from './UserTeamsTable';\n\nfunction TeamsTab(props) {\n  const {\n    teamsData,\n    userTeams,\n    onDeleteTeam,\n    onAssignTeam,\n    onAssignTeamCode,\n    edit,\n    role,\n    onUserVisibilitySwitch,\n    isVisible,\n    canEditVisibility,\n    handleSubmit,\n    disabled,\n    canEditTeamCode,\n    setUserProfile,\n    userProfile,\n    codeValid,\n    setCodeValid,\n    saved,\n    inputAutoComplete,\n    inputAutoStatus,\n    isLoading,\n    fetchTeamCodeAllUsers,\n    darkMode,\n  } = props;\n  const [addTeamPopupOpen, setaddTeamPopupOpen] = useState(false);\n  const [renderedOn, setRenderedOn] = useState(0);\n  const [removedTeams, setRemovedTeams] = useState([]);\n\n  useEffect(() => {\n    if (typeof fetchTeamCodeAllUsers === 'function') {\n      fetchTeamCodeAllUsers();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (saved && removedTeams.length > 0) {\n      removedTeams.forEach(teamId => {\n        deleteTeamMember(teamId, userProfile._id);\n        setRemovedTeams([]);\n      });\n    }\n  }, [saved]);\n\n  const onAddTeamPopupShow = () => {\n    setaddTeamPopupOpen(true);\n  };\n\n  const onAddTeamPopupClose = () => {\n    setaddTeamPopupOpen(false);\n  };\n\n  const onSelectDeleteTeam = teamId => {\n    try {\n      if (userProfile._id) {\n        deleteTeamMember(teamId, userProfile._id);\n      }\n      toast.success('Team Deleted successfully');\n      onDeleteTeam(teamId);\n    } catch (error) {\n      console.error('Error deleting team:', error);\n      toast.error('Failed to delete team');\n    }\n  };\n\n  const onSelectAssignTeam = team => {\n    try {\n      if (userProfile?._id) {\n        addTeamMember(team._id, userProfile._id, userProfile.firstName, userProfile.lastName);\n      }\n      onAssignTeam(team);\n      toast.success('Team assigned successfully');\n    } catch (error) {\n      console.error('Error assigning team:', error);\n      toast.error('Failed to assign team');\n    }\n  };\n\n  return (\n    <>\n      <AddTeamPopup\n        data-testid=\"add-team-popup\"\n        open={addTeamPopupOpen}\n        onClose={onAddTeamPopupClose}\n        teamsData={teamsData}\n        userTeamsById={userTeams}\n        onSelectAssignTeam={onSelectAssignTeam}\n        handleSubmit={handleSubmit}\n        userProfile={userProfile}\n        darkMode={darkMode}\n      />\n      <UserTeamsTable\n        data-testid=\"user-teams-table\"\n        userTeamsById={userTeams}\n        onButtonClick={onAddTeamPopupShow}\n        onDeleteClick={onSelectDeleteTeam}\n        onUserVisibilitySwitch={onUserVisibilitySwitch}\n        canEditVisibility={canEditVisibility}\n        isVisible={isVisible}\n        renderedOn={renderedOn}\n        edit={edit}\n        role={role}\n        disabled={disabled}\n        canEditTeamCode={canEditTeamCode}\n        setUserProfile={setUserProfile}\n        userProfile={userProfile}\n        codeValid={codeValid}\n        setCodeValid={setCodeValid}\n        onAssignTeamCode={onAssignTeamCode}\n        inputAutoComplete={inputAutoComplete}\n        inputAutoStatus={inputAutoStatus}\n        isLoading={isLoading}\n        fetchTeamCodeAllUsers={() => fetchTeamCodeAllUsers()}\n        darkMode={darkMode}\n      />\n    </>\n  );\n}\nexport default TeamsTab;\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TeamsAndProjects/UserProjectsTable.jsx","messages":[{"ruleId":"react/display-name","severity":2,"message":"Component definition is missing display name","line":11,"column":27,"nodeType":"CallExpression","messageId":"noDisplayName","endLine":556,"endColumn":3}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useMemo } from 'react';\nimport { Button, Col, Tooltip, NavItem, UncontrolledTooltip } from 'reactstrap';\nimport './TeamsAndProjects.css';\nimport hasPermission from '../../../utils/permissions';\n// import styles from './UserProjectsTable.css';\nimport { boxStyle, boxStyleDark } from '~/styles';\nimport { useLocation, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport EditableInfoModal from '~/components/UserProfile/EditableModal/EditableInfoModal';\n\nconst UserProjectsTable = React.memo(props => {\n  const { darkMode } = props;\n\n  const [tooltipOpen, setTooltip] = useState(false);\n  const canAssignProjectToUsers = props.hasPermission('assignProjectToUsers');\n  const canUpdateTask = props.hasPermission('updateTask');\n  const canDeleteProjects = props.hasPermission('deleteProject');\n  const canDeleteTasks = props.hasPermission('deleteTask');\n  const canPostTask = props.hasPermission('postTask');\n\n  const userProjects = props.userProjectsById;\n  const userTasks = props.userTasks;\n  const [actualType, setActualType] = useState('active');\n\n  const location = useLocation();\n  const currentRoute = location.pathname;\n  const isUserProfilePage = currentRoute === '/usermanagement';\n\n  const toggleTooltip = () => setTooltip(!tooltipOpen);\n\n  //Situation can be all, active, or complete\n  const filterTasksAndUpdateFilter = situation => {\n    setActualType(situation);\n  };\n\n  const sortedTasksByNumber = useMemo(() => {\n    return userTasks?.sort((task1, task2) => task1.num - task2.num);\n  }, [userTasks]);\n\n  const tasksByProject = userProjects?.map(project => {\n    const tasks = sortedTasksByNumber?.filter(task => task.projectId.includes(project._id));\n    return { ...project, tasks };\n  });\n\n  const filterTasksByUserTaskSituation = useMemo(() => {\n    return situation => {\n      if (sortedTasksByNumber) {\n        return userProjects?.map(project => {\n          const filteredTasks = sortedTasksByNumber.filter(task => {\n            const isTaskForProject = task.projectId.includes(project._id);\n            const isCompletedTask = task.resources?.find(user => user.userID === props.userId)\n              ?.completedTask;\n\n            if (isTaskForProject) {\n              if (situation === 'active' && !isCompletedTask) {\n                return true;\n              } else if (situation === 'complete' && isCompletedTask) {\n                return true;\n              } else if (situation === 'all') {\n                return true;\n              }\n            }\n            return false;\n          });\n\n          return { ...project, tasks: filteredTasks };\n        });\n      }\n    };\n  }, [sortedTasksByNumber, props.userId, userProjects]);\n\n  const [filteredTasks, setFilteredTasks] = useState(filterTasksByUserTaskSituation('active'));\n\n  useEffect(() => {\n    setFilteredTasks(() => filterTasksByUserTaskSituation(actualType));\n  }, [sortedTasksByNumber, actualType]);\n\n  const removeOrAddTaskFromUser = (task, method) => {\n    const newResources = task.resources?.map(resource => {\n      if (resource.userID === props.userId) {\n        return {\n          ...resource,\n          completedTask: method === 'remove',\n        };\n      }\n      return resource;\n    });\n\n    const updatedTask = {\n      ...task,\n      resources: newResources,\n      status: method === 'remove' ? 'Complete' : 'Started',\n    };\n\n    props.updateTask(task._id, updatedTask, method);\n  };\n\n  //For updating tasks visually but not saving until user clicks save changes\n  const deleteTasksTemporarily = project_id => {\n    setFilteredTasks(filteredTasks?.filter(project => project._id !== project_id));\n  };\n\n  useEffect(() => {\n    setFilteredTasks(() => filterTasksByUserTaskSituation('active'));\n  }, [props.userProjectsById]);\n\n  return (\n    <div>\n      <div className=\"desktop\" data-testid=\"userProjectTest\">\n        <div className={`projecttable-container ${darkMode ? 'bg-yinmn-blue' : ''}`}>\n          <div className=\"container\">\n            <div className=\"row mr-auto\">\n              <Col\n                md=\"12\"\n                className={`projects-and-tasks-header d-flex ${darkMode ? 'bg-space-cadet' : ''}`}\n              >\n                <span className=\"projects-span mr-auto pt-2\">Projects</span>\n                {props.edit && props.role && canAssignProjectToUsers && (\n                  <Col md=\"4\" className=\"p-0\">\n                    {props.disabled ? (\n                      <>\n                        <Tooltip\n                          placement=\"bottom\"\n                          isOpen={tooltipOpen}\n                          target=\"btn-assignproject\"\n                          toggle={toggleTooltip}\n                        >\n                          Please save changes before assign project\n                        </Tooltip>\n                        <Button\n                          className=\"btn-addproject mt-2\"\n                          id=\"btn-assignproject\"\n                          color=\"primary\"\n                          style={darkMode ? boxStyleDark : boxStyle}\n                          disabled\n                        >\n                          Assign Project\n                        </Button>\n                      </>\n                    ) : (\n                      <Button\n                        className=\"btn-addproject mt-2\"\n                        color=\"primary\"\n                        onClick={() => {\n                          props.onButtonClick();\n                        }}\n                        style={darkMode ? boxStyleDark : boxStyle}\n                      >\n                        Assign Project\n                      </Button>\n                    )}\n                  </Col>\n                )}\n              </Col>\n            </div>\n          </div>\n          <div className={`table-container ${darkMode ? 'bg-yinmn-blue' : ''}`}>\n            <table\n              className={`table table-bordered table-responsive-sm ${darkMode ? 'text-light' : ''}`}\n            >\n              <thead className={darkMode ? 'bg-space-cadet' : ''}>\n                {props.role && (\n                  <tr className={darkMode ? 'bg-space-cadet' : ''}>\n                    <th className=\"table-header\">#</th>\n                    <th>Project Name</th>\n                    {canPostTask && (\n                      <th style={{ width: '100px' }}>\n                        <div className=\"d-flex align-items-center\">\n                          <span className=\"mr-2\">WBS</span>\n                          <EditableInfoModal\n                            areaName=\"ProjectTableHeaderWBS\"\n                            areaTitle=\"WBS\"\n                            fontSize={24}\n                            isPermissionPage={true}\n                            role={props.role}\n                            className=\"p-2\"\n                            darkMode={darkMode}\n                          />\n                        </div>\n                      </th>\n                    )}\n                    {canAssignProjectToUsers ? <th style={{ width: '100px' }}>{}</th> : null}\n                  </tr>\n                )}\n              </thead>\n              <tbody>\n                {props.userProjectsById.length > 0 ? (\n                  tasksByProject?.map((project, index) => (\n                    <tr key={project._id} className={darkMode ? 'bg-yinmn-blue' : ''}>\n                      <td>{index + 1}</td>\n                      <td className=\"taskName\">{project.projectName}</td>\n                      {props.role && canPostTask && (\n                        <td className=\"table-cell\">\n                          <Link to={`/project/wbs/${project._id}`}>\n                            <button\n                              id={`wbs-tooltip-${project._id}`}\n                              type=\"button\"\n                              className=\"btn btn-outline-info\"\n                              style={darkMode ? {} : boxStyle}\n                            >\n                              <i className=\"fa fa-tasks\" aria-hidden=\"true\"></i>\n                            </button>\n                          </Link>\n\n                          <UncontrolledTooltip\n                            placement=\"left\"\n                            target={`wbs-tooltip-${project._id}`}\n                            delay={{ show: 250, hide: 100 }} // Optional: smoother UX\n                          >\n                            Click to access the Work Breakdown Structures &#40;WBSs&#41; for this\n                            project\n                          </UncontrolledTooltip>\n                        </td>\n                      )}\n                      {props.edit && props.role && canDeleteProjects && (\n                        <td className=\"table-cell\">\n                          <Button\n                            color=\"danger\"\n                            disabled={!canUpdateTask}\n                            onClick={e => {\n                              props.onDeleteClicK(project._id);\n                              deleteTasksTemporarily(project._id);\n                            }}\n                            style={darkMode ? boxStyleDark : boxStyle}\n                          >\n                            Delete\n                          </Button>\n                        </td>\n                      )}\n                    </tr>\n                  ))\n                ) : (\n                  <></>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        {!isUserProfilePage && (\n          <>\n            <div className=\"projecttable-container\">\n              <Col\n                md={'12'}\n                className={`projects-and-tasks-header d-flex flex-row ${\n                  darkMode ? 'bg-space-cadet' : ''\n                }`}\n              >\n                <span className=\"projects-span py-2 mr-auto\">Tasks</span>\n                <div className=\"justify-content-end d-flex py-2\" style={{ gap: '4px' }}>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-primary btn-sm\"\n                    onClick={() => filterTasksAndUpdateFilter('all')}\n                    style={darkMode ? boxStyleDark : boxStyle}\n                  >\n                    All\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-success btn-sm\"\n                    onClick={() => filterTasksAndUpdateFilter('active')}\n                    style={darkMode ? boxStyleDark : boxStyle}\n                  >\n                    Active\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-danger btn-sm\"\n                    onClick={() => filterTasksAndUpdateFilter('complete')}\n                    style={darkMode ? boxStyleDark : boxStyle}\n                  >\n                    Complete\n                  </button>\n                </div>\n              </Col>\n            </div>\n            <div\n              className={`table-container ${darkMode ? 'bg-yinmn-blue' : ''}`}\n              data-testid=\"userProjectTaskTest\"\n            >\n              <table\n                className={`table table-bordered table-responsive-sm ${\n                  darkMode ? 'text-light' : ''\n                }`}\n              >\n                <thead className={darkMode ? 'bg-space-cadet' : ''}>\n                  {props.role && (\n                    <tr className={darkMode ? 'bg-space-cadet' : ''}>\n                      <th className=\"table-header\">#</th>\n                      <th>Task Name</th>\n                      {canAssignProjectToUsers ? <th className=\"table-cell\">{}</th> : null}\n                    </tr>\n                  )}\n                </thead>\n                <tbody>\n                  {props.userProjectsById.length > 0 ? (\n                    filteredTasks?.map(project =>\n                      project?.tasks?.map(task => {\n                        const isCompletedTask = task?.resources?.find(\n                          ({ userID }) => userID === props.userId,\n                        )?.completedTask;\n                        return (\n                          <tr key={task._id}>\n                            <td>{task.num}</td>\n                            <td className=\"taskName\">\n                              <span className=\"opacity-70\">{project.projectName} </span>\n                              <br />\n                              <a className=\"fs-18\" href={`/wbs/tasks/${task._id}`}>\n                                {task.taskName && `\\u2003 ↳ ${task.taskName}`}\n                              </a>\n                            </td>\n                            {!isCompletedTask && props.edit && props.role && canDeleteTasks && (\n                              <td>\n                                <Button\n                                  color=\"danger\"\n                                  style={\n                                    darkMode\n                                      ? { ...boxStyleDark, width: '72px' }\n                                      : { ...boxStyle, width: '72px' }\n                                  }\n                                  disabled={!canAssignProjectToUsers}\n                                  onClick={e => removeOrAddTaskFromUser(task, 'remove')}\n                                >\n                                  Delete\n                                </Button>\n                              </td>\n                            )}\n                            {isCompletedTask && props.edit && props.role && (\n                              <td>\n                                <Button\n                                  color=\"success\"\n                                  style={\n                                    darkMode\n                                      ? { ...boxStyleDark, width: '72px' }\n                                      : { ...boxStyle, width: '72px' }\n                                  }\n                                  disabled={!canAssignProjectToUsers}\n                                  onClick={e => removeOrAddTaskFromUser(task, 'add')}\n                                >\n                                  Add\n                                </Button>\n                              </td>\n                            )}\n                          </tr>\n                        );\n                      }),\n                    )\n                  ) : (\n                    <></>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </>\n        )}\n      </div>\n      <div className=\"tablet\">\n        <div className={`projecttable-container ${darkMode ? 'bg-yinmn-blue' : ''}`}>\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\n            <Col\n              md=\"12\"\n              className={`d-flex projects-and-tasks-header ${\n                darkMode ? 'bg-space-cadet text-light' : ''\n              }`}\n            >\n              <span className=\"projects-span mr-auto pt-2\">Projects</span>\n              {props.edit && props.role && (\n                <div className=\"pt-2\">\n                  {canAssignProjectToUsers && (\n                    <div\n                      className=\"div-addproject\"\n                      title=\"Please save changes before assign project\"\n                      display={props.disabled ? 'none' : 'block'}\n                    >\n                      <Button\n                        className=\"btn-addproject\"\n                        color=\"primary\"\n                        disabled={props.disabled ? true : false}\n                        onClick={() => {\n                          props.onButtonClick();\n                        }}\n                        style={darkMode ? boxStyleDark : boxStyle}\n                      >\n                        Assign Project\n                      </Button>\n                    </div>\n                  )}\n                </div>\n              )}\n            </Col>\n          </div>\n          <div className={`table-container ${darkMode ? 'bg-yinmn-blue' : ''}`}>\n            <table className={`table table-bordered ${darkMode ? 'text-light' : ''}`}>\n              <thead className={darkMode ? 'bg-space-cadet' : ''}>\n                {props.role && (\n                  <tr>\n                    <th className={`table-header ${darkMode ? 'bg-space-cadet' : ''}`}>#</th>\n                    <th className={darkMode ? 'bg-space-cadet' : ''}>Project Name</th>\n                    {canAssignProjectToUsers ? (\n                      <th className={darkMode ? 'bg-space-cadet' : ''} style={{ width: '100px' }}>\n                        {}\n                      </th>\n                    ) : null}\n                  </tr>\n                )}\n              </thead>\n              <tbody>\n                {props.userProjectsById.length > 0 ? (\n                  tasksByProject?.map((project, index) => (\n                    <tr key={project._id}>\n                      <td>{index + 1}</td>\n                      <td className=\"taskName\">{`${project.projectName}`}</td>\n                      {props.edit && props.role && canDeleteProjects && (\n                        <td className=\"table-cell\">\n                          <Button\n                            color=\"danger\"\n                            disabled={!canUpdateTask}\n                            onClick={e => {\n                              props.onDeleteClicK(project._id);\n                              deleteTasksTemporarily(project._id);\n                            }}\n                            style={darkMode ? boxStyleDark : boxStyle}\n                          >\n                            Delete\n                          </Button>\n                        </td>\n                      )}\n                    </tr>\n                  ))\n                ) : (\n                  <></>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        {!isUserProfilePage && (\n          <>\n            <div className=\"projecttable-container\">\n              <div>\n                <Col\n                  md={'12'}\n                  className={`projects-and-tasks-header d-flex ${\n                    darkMode ? 'bg-space-cadet text-light' : ''\n                  }`}\n                >\n                  <span className=\"projects-span mr-auto pt-2\">Tasks</span>\n                  <div className=\"justify-content-end d-flex py-2\" style={{ gap: '4px' }}>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-primary btn-sm\"\n                      onClick={() => filterTasksAndUpdateFilter('all')}\n                      style={darkMode ? boxStyleDark : boxStyle}\n                    >\n                      All\n                    </button>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-success btn-sm\"\n                      onClick={() => filterTasksAndUpdateFilter('active')}\n                      style={darkMode ? boxStyleDark : boxStyle}\n                    >\n                      Active\n                    </button>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-danger btn-sm\"\n                      onClick={() => filterTasksAndUpdateFilter('complete')}\n                      style={darkMode ? boxStyleDark : boxStyle}\n                    >\n                      Complete\n                    </button>\n                  </div>\n                </Col>\n              </div>\n            </div>\n            <div className={`table-container ${darkMode ? 'bg-yinmn-blue' : ''}`}>\n              <table className=\"table table-bordered\">\n                <thead className={darkMode ? 'text-light' : ''}>\n                  {props.role && (\n                    <tr>\n                      <th className={`table-header ${darkMode ? 'bg-space-cadet' : ''}`}>#</th>\n                      <th className={`taskName ${darkMode ? 'bg-space-cadet' : ''}`}>Task Name</th>\n                      {canAssignProjectToUsers ? (\n                        <th className={darkMode ? 'bg-space-cadet' : ''} style={{ width: '100px' }}>\n                          {}\n                        </th>\n                      ) : null}\n                    </tr>\n                  )}\n                </thead>\n                <tbody className={darkMode ? 'text-light' : ''}>\n                  {props.userProjectsById.length > 0 ? (\n                    filteredTasks?.map(project =>\n                      project?.tasks?.map(task => {\n                        const isCompletedTask = task?.resources?.find(\n                          ({ userID }) => userID === props.userId,\n                        )?.completedTask;\n                        return (\n                          <tr key={task._id}>\n                            <td>{task.num}</td>\n                            <td>\n                              <span className=\"opacity-70\">{project.projectName}</span>\n                              <br />\n                              <span className=\"fs-18\">\n                                {task.taskName && `\\u2003 ↳ ${task.taskName}`}\n                              </span>\n                            </td>\n                            {!isCompletedTask && props.edit && props.role && canDeleteTasks && (\n                              <td>\n                                <Button\n                                  color=\"danger\"\n                                  style={\n                                    darkMode\n                                      ? { ...boxStyleDark, width: '72px' }\n                                      : { ...boxStyle, width: '72px' }\n                                  }\n                                  disabled={!canAssignProjectToUsers}\n                                  onClick={e => removeOrAddTaskFromUser(task, 'remove')}\n                                >\n                                  Delete\n                                </Button>\n                              </td>\n                            )}\n                            {isCompletedTask && props.edit && props.role && (\n                              <td>\n                                <Button\n                                  color=\"success\"\n                                  style={\n                                    darkMode\n                                      ? { ...boxStyleDark, width: '72px' }\n                                      : { ...boxStyle, width: '72px' }\n                                  }\n                                  disabled={!canAssignProjectToUsers}\n                                  onClick={e => removeOrAddTaskFromUser(task, 'add')}\n                                >\n                                  Add\n                                </Button>\n                              </td>\n                            )}\n                          </tr>\n                        );\n                      }),\n                    )\n                  ) : (\n                    <></>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n});\n\nexport default connect(null, { hasPermission })(UserProjectsTable);\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TeamsAndProjects/UserTeamProjectContainer.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TeamsAndProjects/UserTeamsTable.jsx","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":139,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":139,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4494,4513],"text":""},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { React, useState, useEffect, useRef } from 'react';\nimport { Button, Col, Input } from 'reactstrap';\nimport './TeamsAndProjects.css';\nimport hasPermission from '../../../utils/permissions';\n// import styles from './UserTeamsTable.css';\nimport { boxStyle, boxStyleDark } from '~/styles';\nimport { connect } from 'react-redux';\nimport Switch from './Switch';\nimport './UserTeamsTable.css';\n\nimport { AutoCompleteTeamCode } from './AutoCompleteTeamCode';\n\nimport ToggleSwitch from '../UserProfileEdit/ToggleSwitch';\n\nimport './../../Teams/Team.css';\nimport { TeamMember } from './TeamMember';\nimport axios from 'axios';\nimport { ENDPOINTS } from '~/utils/URL.js';\nimport { toast } from 'react-toastify';\n\nconst UserTeamsTable = props => {\n  const { darkMode } = props;\n\n  const [showDropdown, setShowDropdown] = useState(false);\n\n  const [autoComplete, setAutoComplete] = useState(false);\n\n  const [arrayInputAutoComplete, setArrayInputAutoComplete] = useState(props.inputAutoComplete);\n\n  const [teamCode, setTeamCode] = useState(\n    props.userProfile ? props.userProfile.teamCode : props.teamCode,\n  );\n\n  const [isOpenModalTeamMember, setIsOpenModalTeamMember] = useState(false);\n\n  const [members, setMembers] = useState({\n    members: [],\n    TeamData: [],\n    myTeamId: null,\n    myTeamName: '',\n  });\n\n  const refDropdown = useRef();\n\n  const refInput = useRef(null);\n\n  const canAssignTeamToUsers = props.hasPermission('assignTeamToUsers');\n  const fullCodeRegex = /^(|([a-zA-Z0-9]-[a-zA-Z0-9]{3,5}|[a-zA-Z0-9]{5,7}|.-[a-zA-Z0-9]{3}))$/;\n\n  useEffect(() => {\n    if (props.userProfile?.teamCode) {\n      setTeamCode(props.userProfile.teamCode);\n    }\n  }, [props.userProfile?.teamCode]);\n\n  const handleCodeChange = async (e, autoComplete) => {\n    const validation = autoComplete ? e : e.target.value;\n    setTeamCode(validation);\n    // prettier-ignore\n    validationUpdateAutoComplete(validation, props.inputAutoComplete);\n    if (validation !== '') {\n      const regexTest = fullCodeRegex.test(validation);\n      refInput.current = validation;\n      if (regexTest) {\n        props.setCodeValid(true);\n        if (props.userProfile) {\n          try {\n            const url = ENDPOINTS.USER_PROFILE_PROPERTY(props.userProfile._id);\n            await axios.patch(url, { key: 'teamCode', value: refInput.current });\n            toast.success('Team code updated!');\n          } catch {\n            toast.error('It is not possible to save the team code.');\n          }\n        } else {\n          props.onAssignTeamCode(validation);\n        }\n      } else {\n        setTeamCode(validation);\n        props.setCodeValid(false);\n      }\n      autoComplete ? setShowDropdown(false) : null;\n      autoComplete = false;\n    }\n  };\n\n  const validationUpdateAutoComplete = (e, autoComplete) => {\n    if (e !== '' && !props.isLoading) {\n      const isMatchingSearch = autoComplete.filter(item =>\n        filterInputAutoComplete(item).includes(filterInputAutoComplete(e)),\n      );\n      setArrayInputAutoComplete(isMatchingSearch);\n      //prettier-ignore\n      return isMatchingSearch.filter(item => filterInputAutoComplete(item) === filterInputAutoComplete(e));\n    } else setArrayInputAutoComplete(props.inputAutoComplete);\n  };\n  //prettier-ignore\n  useEffect(() => {setArrayInputAutoComplete(props.inputAutoComplete)}, [props.inputAutoStatus]);\n\n  const filterInputAutoComplete = result => {\n    return result\n      .toLowerCase()\n      .trim()\n      .replace(/\\s+/g, '');\n  };\n\n  const styleDefault = {\n    cursor: !props.canEditTeamCode ? 'not-allowed' : 'pointer',\n    opacity: !props.canEditTeamCode ? 0.6 : 0.9,\n  };\n\n  const colordark = {\n    backgroundColor: '#1c2541',\n    color: '#fff',\n    outline: 'none',\n    border: 'none',\n    cursor: !props.canEditTeamCode ? 'not-allowed' : 'pointer',\n    opacity: !props.canEditTeamCode ? 0.6 : 0.9,\n  };\n\n  const fetchTeamSelected = async (teamId, teamName, isUpdate) => {\n    const urlTeamData = ENDPOINTS.TEAM_BY_ID(teamId);\n    const urlTeamMembers = ENDPOINTS.TEAM_USERS(teamId);\n    try {\n      const TeamDataMember = await axios.get(urlTeamMembers);\n      const TeamData = await axios.get(urlTeamData);\n\n      const array = [];\n      array.push(TeamData.data);\n\n      setMembers({\n        members: TeamDataMember.data,\n        TeamData: array,\n        myTeamId: teamId,\n        myTeamName: teamName,\n      });\n\n      isUpdate ? toast.info('Team updated successfully') : setIsOpenModalTeamMember(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className={`teamtable-container   ${darkMode ? 'bg-yinmn-blue' : ''}`}>\n      <TeamMember\n        isOpenModalTeamMember={isOpenModalTeamMember}\n        setIsOpenModalTeamMember={setIsOpenModalTeamMember}\n        members={members}\n        fetchTeamSelected={fetchTeamSelected}\n      />\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        {props.canEditVisibility && (\n          <div className=\"row\">\n            <Col\n              md=\"7\"\n              xs=\"12\"\n              style={{\n                backgroundColor: darkMode ? '#1C2541' : '#e9ecef',\n                border: '1px solid #ced4da',\n                marginBottom: '10px',\n              }}\n            >\n              <span className=\"teams-span\">Visibility</span>\n            </Col>\n            <Col\n              md=\"5\"\n              xs=\"12\"\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                backgroundColor: darkMode ? '#1C2541' : '#ffffff',\n                border: darkMode ? '0px' : '1px solid #ced4da',\n                marginBottom: '10px',\n              }}\n            >\n              <ToggleSwitch\n                switchType=\"visible\"\n                state={props.isVisible}\n                handleUserProfile={props.onUserVisibilitySwitch}\n                darkMode={darkMode}\n              />\n            </Col>\n          </div>\n        )}\n        <div className=\"row\">\n          <Col\n            md=\"9\"\n            xs=\"12\"\n            style={{\n              backgroundColor: darkMode ? '#1C2541' : '#e9ecef',\n              border: '1px solid #ced4da',\n              marginBottom: '10px',\n              height: '10%',\n            }}\n          >\n            <span className=\"teams-span\">Teams</span>\n          </Col>\n          <Col md=\"3\" xs=\"12\" style={{ padding: '0', marginBottom: '10px' }}>\n            <Input\n              id=\"teamCode\"\n              value={teamCode}\n              onChange={handleCodeChange}\n              style={darkMode ? colordark : styleDefault}\n              placeholder=\"X-XXX\"\n              onFocus={() => !showDropdown && setShowDropdown(true)}\n              disabled={!props.canEditTeamCode}\n            />\n          </Col>\n          <div className=\"row\" style={{ display: 'flex', flexDirection: 'column' }}>\n            <AutoCompleteTeamCode\n              refDropdown={refDropdown}\n              showDropdown={showDropdown}\n              handleCodeChange={handleCodeChange}\n              setShowDropdown={setShowDropdown}\n              arrayInputAutoComplete={arrayInputAutoComplete}\n              inputAutoStatus={props.inputAutoStatus}\n              isLoading={props.isLoading}\n              fetchTeamCodeAllUsers={props.fetchTeamCodeAllUsers}\n              darkMode={darkMode}\n            />\n          </div>\n        </div>\n        {props.edit && props.role && (\n          <Col md=\"12\" style={{ padding: '0' }}>\n            {canAssignTeamToUsers ? (\n              props.disabled ? (\n                <Button\n                  id=\"teamCodeAssign\"\n                  className=\"btn-addteam\"\n                  color=\"primary\"\n                  style={boxStyle}\n                  disabled\n                >\n                  Assign Team\n                </Button>\n              ) : (\n                <>\n                  <Button\n                    id=\"teamCodeAssign\"\n                    className=\"btn-addteam\"\n                    color=\"primary\"\n                    onClick={() => {\n                      props.onButtonClick();\n                    }}\n                  >\n                    Assign Team\n                  </Button>\n                </>\n              )\n            ) : (\n              <></>\n            )}\n          </Col>\n        )}\n      </div>\n      <div style={{ maxHeight: '300px', overflow: 'auto' }}>\n        <table className={`table table-bordered ${darkMode ? 'text-light' : ''}`}>\n          <thead className=\"user-team-head\">\n            {props.role && (\n              <tr>\n                <th className={darkMode ? 'bg-space-cadet' : ''}>#</th>\n                <th className={darkMode ? 'bg-space-cadet' : ''}>Team Name</th>\n                {canAssignTeamToUsers ? (\n                  <>\n                    <th className={darkMode ? 'bg-space-cadet' : ''}>Members</th>\n                    <th style={{ flex: 2 }} className={darkMode ? 'bg-space-cadet' : ''}>\n                      {}\n                    </th>\n                  </>\n                ) : null}\n              </tr>\n            )}\n          </thead>\n          <tbody className={`user-team-body ${darkMode ? 'text-light' : ''}`}>\n            {props.userTeamsById.length > 0 ? (\n              props.userTeamsById.map((team, index) => (\n                <tr key={index} className={`tr ${darkMode ? 'dark-mode' : ''}`}>\n                  <td style={{ alignContent: 'center' }}>{index + 1}</td>\n                  <td style={{ alignContent: 'center' }}>{`${team.teamName}`}</td>\n                  {props.edit && props.role && (\n                    <>\n                      <td\n                        style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n                      >\n                        <button\n                          style={\n                            darkMode ? { boxShadow: 'none' } : { boxShadow: 'none', ...boxStyle }\n                          }\n                          disabled={!canAssignTeamToUsers}\n                          type=\"button\"\n                          className=\"btn btn-outline-info\"\n                          data-testid=\"members-btn\"\n                          onClick={() => fetchTeamSelected(team._id, team.teamName)}\n                        >\n                          <i className=\"fa fa-users\" aria-hidden=\"true\" />\n                        </button>\n                      </td>\n\n                      <td>\n                        <div\n                          style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                          }}\n                        >\n                          <Button\n                            disabled={!canAssignTeamToUsers}\n                            color=\"danger\"\n                            onClick={e => {\n                              props.onDeleteClick(team._id);\n                            }}\n                          >\n                            Delete\n                          </Button>\n                        </div>\n                      </td>\n                    </>\n                  )}\n                </tr>\n              ))\n            ) : (\n              <></>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(null, { hasPermission })(UserTeamsTable);\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TeamsAndProjects/__tests__/AddProjectPopup.test.jsx","messages":[{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByText` instead","line":46,"column":22,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":46,"endColumn":31},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByText` instead","line":47,"column":24,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":47,"endColumn":33},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByText` instead","line":48,"column":28,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":48,"endColumn":37},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByText` instead","line":56,"column":25,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":56,"endColumn":34},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByText` instead","line":63,"column":27,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":63,"endColumn":36},{"ruleId":"testing-library/no-wait-for-multiple-assertions","severity":2,"message":"Avoid using multiple assertions within `waitFor` callback","line":67,"column":7,"nodeType":"ExpressionStatement","messageId":"noWaitForMultipleAssertion","endLine":67,"endColumn":50},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByText` instead","line":73,"column":27,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":73,"endColumn":36},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByText` instead","line":75,"column":24,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":75,"endColumn":33}],"suppressedMessages":[],"errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { render, fireEvent, waitFor } from '@testing-library/react';\nimport { Provider } from 'react-redux';\nimport { configureStore } from 'redux-mock-store';\nimport AddProjectPopup from '../AddProjectPopup';\n\n/** TEST DATA **/\n\nconst onCloseMock = vi.fn();\nconst onSelectAssignProjectMock = vi.fn();\nconst handleSubmitMock = vi.fn();\n\nconst projectsMock = [{ _id: 'proj1', projectName: 'Project 1' }];\nconst userProjectsByIdMock = [];\n\nconst mockStore = configureStore([]);\nconst initialState = {\n  theme: { darkMode: false },\n};\nconst store = mockStore(initialState);\n\nconst props = {\n  open: true,\n  onClose: onCloseMock,\n  onSelectAssignProject: onSelectAssignProjectMock,\n  userProjectsById: userProjectsByIdMock,\n  projects: projectsMock,\n  handleSubmit: handleSubmitMock,\n};\n\nconst renderComponent = props => {\n  return render(\n    <Provider store={store}>\n      <AddProjectPopup {...props} />\n    </Provider>,\n  );\n};\n\n/** TEST CASE **/\n\ndescribe('AddProjectPopup component Unit test case', () => {\n  beforeEach(() => {\n    vi.clearAllMocks();\n  });\n  it('Test 1 : Expected  UI elements are present', () => {\n    const { getByText } = renderComponent(props);\n    const closeBtn = getByText('Close');\n    const confirmBtn = getByText('Confirm');\n    const addProjectText = getByText('Add Project');\n    expect(closeBtn).toBeInTheDocument();\n    expect(confirmBtn).toBeInTheDocument();\n    expect(addProjectText).toBeInTheDocument();\n  });\n\n  it('Test 2 : Calls onClose when Close button is clicked', () => {\n    const { getByText } = renderComponent(props);\n    const closeButton = getByText('Close');\n    fireEvent.click(closeButton);\n    expect(onCloseMock).toHaveBeenCalled();\n  });\n\n  it('Test 3 : Calls onSelectAssignProject and resets selectedProject when Confirm button is clicked', async () => {\n    const { getByText } = renderComponent(props);\n    const confirmButton = getByText('Confirm');\n    fireEvent.click(confirmButton);\n    await waitFor(() => {\n      expect(onSelectAssignProjectMock).not.toHaveBeenCalled();\n      expect(onCloseMock).not.toHaveBeenCalled();\n    });\n  });\n\n  it('Test 4 : Shows error alert when attempting to confirm without selecting a project', () => {\n    const { getByText } = renderComponent(props);\n    const confirmButton = getByText('Confirm');\n    fireEvent.click(confirmButton);\n    const errorAlert = getByText('Hey, You need to pick a project first!');\n    expect(errorAlert).toBeInTheDocument();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TeamsAndProjects/__tests__/AddTeamPopup.test.jsx","messages":[{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":115,"column":50,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":115,"column":50,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":116,"column":50,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":116,"column":50,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":117,"column":44,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":117,"column":44,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":158,"column":50,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":158,"column":50,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":159,"column":50,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":159,"column":50,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":160,"column":44,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":160,"column":44,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":164,"column":45,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":164,"column":45,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":165,"column":36,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":184,"column":50,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":184,"column":50,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":185,"column":50,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":185,"column":50,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":186,"column":44,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":186,"column":44,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":209,"column":50,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":209,"column":50,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":210,"column":50,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":210,"column":50,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":211,"column":44,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":211,"column":44,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":215,"column":45,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":215,"column":45,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":216,"column":36,"nodeType":"MemberExpression","messageId":"noNodeAccess"}],"suppressedMessages":[],"errorCount":30,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport '@testing-library/jest-dom/extend-expect';\nimport AddTeamPopup from '../AddTeamPopup';\nimport thunk from 'redux-thunk';\nimport { configureStore } from 'redux-mock-store';\nimport { Provider } from 'react-redux';\nimport { postNewTeam, getAllUserTeams } from '~/actions/allTeamsAction';\nimport { ADD_NEW_TEAM, RECEIVE_ALL_USER_TEAMS } from '~/constants/allTeamsConstants';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\n\nconst userTeams = [\n  {\n    teamName: 'team11',\n    _id: 'aaa123',\n  },\n];\n\nconst mockStore = configureStore([thunk]);\n\nconst store = mockStore({\n  allTeams: [\n    {\n      teamName: 'team11',\n      _id: 'aaa123',\n      isActive: true,\n    },\n    {\n      teamName: 'team12',\n      _id: 'bbb456',\n      isActive: true,\n    },\n    {\n      teamName: 'team13',\n      _id: 'ccc789',\n      isActive: true,\n    },\n    {\n      teamName: 'team24',\n      _id: 'ddd056',\n      isActive: false,\n    },\n  ],\n  fetched: true,\n  fetching: false,\n  status: '200',\n  theme: { darkMode: false },\n});\n\nconst onAddTeamPopupClose = vi.fn();\nconst onSelectAssignTeam = vi.fn();\nconst handleSubmit = vi.fn();\nvi.mock('react-toastify');\nvi.mock('axios');\nconst renderComponent = (mockOpen, mockTeamsData, mockUserTeams) => {\n  return render(\n    <Provider store={store}>\n      <AddTeamPopup\n        open={mockOpen}\n        onClose={onAddTeamPopupClose}\n        teamsData={mockTeamsData}\n        userTeamsById={mockUserTeams}\n        onSelectAssignTeam={onSelectAssignTeam}\n        handleSubmit={handleSubmit}\n      />\n    </Provider>,\n  );\n};\n\ndescribe('AddTeamPopup component', () => {\n  it('renders modal elements when addTeamPopupOpen is true', () => {\n    axios.get.mockResolvedValue({\n      status: 200,\n    });\n\n    axios.post.mockResolvedValue({\n      status: 200,\n    });\n    const teamsData = {\n      allTeams: [],\n    };\n    renderComponent(true, teamsData, userTeams);\n    expect(screen.getByText('Add Team')).toBeInTheDocument();\n  });\n\n  it('does not render modal elements when addTeamPopupOpen is true', () => {\n    axios.get.mockResolvedValue({\n      status: 200,\n    });\n\n    axios.post.mockResolvedValue({\n      status: 200,\n    });\n    const teamsData = {\n      allTeams: [],\n    };\n    renderComponent(false, teamsData, userTeams);\n    expect(screen.queryByText('Add Team')).not.toBeInTheDocument();\n  });\n  it.skip('check if confirm button works', async () => {\n    axios.get.mockResolvedValue({\n      status: 200,\n    });\n\n    axios.post.mockResolvedValue({\n      status: 200,\n    });\n    const teamsData = {\n      allTeams: store.getState().allTeams,\n    };\n    toast.success = vi.fn();\n    renderComponent(true, teamsData, userTeams);\n    const modalFadeElement = screen.getByRole('document');\n    const modalContentElement = modalFadeElement.querySelector('.modal-content');\n    const modalBodyElement = modalContentElement.querySelector('.modal-body');\n    const searchElement = modalBodyElement.querySelector('.form-control');\n\n    fireEvent.change(searchElement, { target: { value: 'team1' } });\n    await waitFor(() => {});\n    const team12Element = screen.getByText('team12');\n    fireEvent.click(team12Element);\n    const confirmElement = screen.getByText('Confirm');\n    fireEvent.click(confirmElement);\n    expect(onSelectAssignTeam).toHaveBeenCalled();\n    expect(toast.success).toHaveBeenCalledWith('Team assigned successfully');\n  });\n  it('check if close button works', async () => {\n    axios.get.mockResolvedValue({\n      status: 200,\n    });\n\n    axios.post.mockResolvedValue({\n      status: 200,\n    });\n    const teamsData = {\n      allTeams: [],\n    };\n    renderComponent(true, teamsData, userTeams);\n    const closeElement = screen.getByText('Close');\n    fireEvent.click(closeElement);\n    expect(onAddTeamPopupClose).toHaveBeenCalled();\n  });\n  it('check team name does not exist message', async () => {\n    axios.get.mockResolvedValue({\n      status: 200,\n    });\n\n    axios.post.mockResolvedValue({\n      status: 200,\n    });\n    const teamsData = {\n      allTeams: store.getState().allTeams,\n    };\n    renderComponent(true, teamsData, userTeams);\n    expect(screen.getByText('Add to Team')).toBeInTheDocument();\n    const modalFadeElement = screen.getByRole('document');\n    const modalContentElement = modalFadeElement.querySelector('.modal-content');\n    const modalBodyElement = modalContentElement.querySelector('.modal-body');\n    const searchElement = modalBodyElement.querySelector('.form-control');\n\n    fireEvent.change(searchElement, { target: { value: 'team111' } });\n    await waitFor(() => {});\n    const nextDivElement = modalBodyElement.querySelector('.input-group-prepend');\n    fireEvent.click(nextDivElement.querySelector('.btn.btn-primary'));\n    expect(\n      screen.getByText('Oops, this team does not exist! Create it if you want it.'),\n    ).toBeInTheDocument();\n  });\n  it('check searched value results', async () => {\n    axios.get.mockResolvedValue({\n      status: 200,\n    });\n\n    axios.post.mockResolvedValue({\n      status: 200,\n    });\n    const teamsData = {\n      allTeams: store.getState().allTeams,\n    };\n    renderComponent(true, teamsData, userTeams);\n    expect(screen.getByText('Add to Team')).toBeInTheDocument();\n    const modalFadeElement = screen.getByRole('document');\n    const modalContentElement = modalFadeElement.querySelector('.modal-content');\n    const modalBodyElement = modalContentElement.querySelector('.modal-body');\n    const searchElement = modalBodyElement.querySelector('.form-control');\n\n    fireEvent.change(searchElement, { target: { value: 'team1' } });\n    await waitFor(() => {});\n    expect(screen.getByText('team11')).toBeInTheDocument();\n    expect(screen.getByText('team12')).toBeInTheDocument();\n    expect(screen.getByText('team13')).toBeInTheDocument();\n    expect(screen.queryByText('team24')).not.toBeInTheDocument();\n  });\n  it('check results without team name', async () => {\n    axios.get.mockResolvedValue({\n      status: 200,\n    });\n\n    axios.post.mockResolvedValue({\n      status: 200,\n    });\n    const teamsData = {\n      allTeams: store.getState().allTeams,\n    };\n    renderComponent(true, teamsData, userTeams);\n    expect(screen.getByText('Add to Team')).toBeInTheDocument();\n    const modalFadeElement = screen.getByRole('document');\n    const modalContentElement = modalFadeElement.querySelector('.modal-content');\n    const modalBodyElement = modalContentElement.querySelector('.modal-body');\n    const searchElement = modalBodyElement.querySelector('.form-control');\n\n    fireEvent.change(searchElement, { target: { value: '' } });\n    await waitFor(() => {});\n    const nextDivElement = modalBodyElement.querySelector('.input-group-prepend');\n    fireEvent.click(nextDivElement.querySelector('.btn.btn-primary'));\n    expect(screen.getByText('Hey, You need to pick a team first!')).toBeInTheDocument();\n  });\n  it('check if postNewTeam action works as expected', async () => {\n    const responseData = { teamName: 'New Team', isActive: true };\n\n    axios.post.mockResolvedValue({\n      data: responseData,\n    });\n    const store = mockStore({});\n\n    const expectedActions = [{ type: ADD_NEW_TEAM, payload: responseData, status: true }];\n    await store.dispatch(postNewTeam('New Team', true));\n    expect(store.getActions()).toEqual(expectedActions);\n  });\n  it('check if getAllUserTeams action works as expected', async () => {\n    const responseData = { teamName: 'New Team', _id: 'aaa333', isActive: true };\n    axios.get.mockResolvedValue({\n      data: responseData,\n    });\n    const store = mockStore({});\n\n    const expectedActions = [{ type: RECEIVE_ALL_USER_TEAMS, payload: responseData }];\n    await store.dispatch(getAllUserTeams());\n    expect(store.getActions()).toEqual(expectedActions);\n  });\n  it('check if postNewTeams puts out an error message when the axios post request fails', async () => {\n    const errorResponse = { response: { status: 404, data: { message: 'Not Found' } } };\n\n    axios.post.mockRejectedValue(errorResponse);\n    const store = mockStore({});\n\n    // when the resource is not present\n    const errorResponseMessage = await store.dispatch(postNewTeam('New Team', true));\n    expect(errorResponseMessage.status).toBe(404);\n    expect(errorResponseMessage.data.message).toBe('Not Found');\n\n    // when there is a server error\n    const errorRequest = { request: {} };\n    axios.post.mockRejectedValue(errorRequest);\n    const errorRequestMessage = await store.dispatch(postNewTeam('New Team', true));\n    expect(errorRequestMessage.status).toBe(500);\n    expect(errorRequestMessage.message).toBe('No response received from the server');\n\n    // when the error does not have request or response\n    const error = { message: 'Internal Server Error' };\n    axios.post.mockRejectedValue(error);\n    const errorMessage = await store.dispatch(postNewTeam('New Team', true));\n    expect(errorMessage.message).toBe('Internal Server Error');\n  });\n  it('check if getAllUserTeams puts out an error message when axios get request fails', async () => {\n    axios.get.mockRejectedValue();\n    const store = mockStore({});\n\n    const expectedActions = [{ type: RECEIVE_ALL_USER_TEAMS, payload: undefined }];\n    await store.dispatch(getAllUserTeams());\n\n    // when there is error in the get request then the payload becomes undefined\n    expect(store.getActions()).toEqual(expectedActions);\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TeamsAndProjects/__tests__/AddTeamsAutoComplete.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TeamsAndProjects/__tests__/ProjectsTab.test.jsx","messages":[{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTestId` instead","line":97,"column":12,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":97,"endColumn":23},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTestId` instead","line":98,"column":12,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":98,"endColumn":23},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTestId` instead","line":118,"column":23,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":118,"endColumn":34},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTestId` instead","line":123,"column":23,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":123,"endColumn":34},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTestId` instead","line":134,"column":21,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":134,"endColumn":32},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTestId` instead","line":140,"column":21,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":140,"endColumn":32},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.queryByTestId` instead","line":146,"column":23,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":146,"endColumn":36},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTestId` instead","line":152,"column":12,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":152,"endColumn":23},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTestId` instead","line":153,"column":12,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":153,"endColumn":23},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTestId` instead","line":158,"column":23,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":158,"endColumn":34},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTestId` instead","line":164,"column":12,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":164,"endColumn":23},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTestId` instead","line":169,"column":21,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":169,"endColumn":32},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTestId` instead","line":190,"column":21,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":190,"endColumn":32},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTestId` instead","line":191,"column":23,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":191,"endColumn":34}],"suppressedMessages":[],"errorCount":14,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { vi } from 'vitest';\n\nvi.mock('../AddProjectPopup', () => ({\n  __esModule: true,\n  default: function AddProjectPopupMock(props) {\n    const { projects, userProjectsById, onSelectAssignProject, handleSubmit, darkMode } = props;\n    return (\n      <div data-testid=\"add-project-popup\">\n        <div\n          data-testid=\"popup-info\"\n          data-projects={JSON.stringify(projects)}\n          data-userprojectsbyid={userProjectsById ? JSON.stringify(userProjectsById) : undefined}\n          data-darkmode={darkMode ? 'true' : 'false'}\n          data-handlesubmit={handleSubmit ? 'true' : undefined}\n        />\n        <button data-testid=\"assign-btn\" onClick={() => onSelectAssignProject({ _id: '123' })} />\n        <button\n          data-testid=\"assign-undefined-btn\"\n          onClick={() => onSelectAssignProject(undefined)}\n        />\n      </div>\n    );\n  },\n}));\n\nvi.mock('../UserProjectsTable', () => ({\n  __esModule: true,\n  default: function UserProjectsTableMock(props) {\n    const {\n      userTasks,\n      userProjectsById,\n      onButtonClick,\n      onDeleteClicK,\n      edit,\n      role,\n      userId,\n      disabled,\n      darkMode,\n    } = props;\n    return (\n      <div data-testid=\"user-projects-table\">\n        <div\n          data-testid=\"table-info\"\n          data-usertasks={JSON.stringify(userTasks)}\n          data-userprojectsbyid={userProjectsById ? JSON.stringify(userProjectsById) : undefined}\n          data-edit={edit ? 'true' : 'false'}\n          data-role={role}\n          data-userid={userId}\n          data-disabled={disabled ? 'true' : 'false'}\n          data-darkmode={darkMode ? 'true' : 'false'}\n        />\n        <button data-testid=\"add-btn\" onClick={onButtonClick} />\n        <button data-testid=\"delete-btn\" onClick={() => onDeleteClicK('123')} />\n      </div>\n    );\n  },\n}));\n/* eslint-disable func-names */\nimport { render, fireEvent } from '@testing-library/react';\nimport configureMockStore from 'redux-mock-store';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport '@testing-library/jest-dom/extend-expect';\nimport ProjectsTab from '../ProjectsTab';\n\nconst mockStore = configureMockStore([thunk]);\nconst defaultState = {};\n\nfunction renderWithRedux(\n  ui,\n  { initialState = defaultState, store = mockStore(initialState) } = {},\n) {\n  return render(<Provider store={store}>{ui}</Provider>);\n}\n\ntest('setup mock store and provider', () => {\n  const store = mockStore(defaultState);\n  expect(store.getState()).toEqual(defaultState);\n});\n\ndescribe('ProjectsTab', () => {\n  const projectsData = [];\n  const userProjects = [];\n  const onDeleteProject = vi.fn();\n  const onAssignProject = vi.fn();\n  const edit = true;\n  const role = 'admin';\n  const userTasks = [];\n  const userId = '123';\n  const updateTask = vi.fn();\n  const handleSubmit = vi.fn();\n  const disabled = false;\n\n  it('should render AddProjectPopup and UserProjectsTable components', () => {\n    const { getByTestId } = renderWithRedux(<ProjectsTab />);\n    expect(getByTestId('add-project-popup')).toBeInTheDocument();\n    expect(getByTestId('user-projects-table')).toBeInTheDocument();\n  });\n\n  it('should render all the props correctly', () => {\n    const { getByTestId } = renderWithRedux(\n      <ProjectsTab\n        projectsData={projectsData}\n        userProjects={userProjects}\n        onDeleteProject={onDeleteProject}\n        onAssignProject={onAssignProject}\n        edit={edit}\n        role={role}\n        userTasks={userTasks}\n        userId={userId}\n        updateTask={updateTask}\n        handleSubmit={handleSubmit}\n        disabled={disabled}\n      />,\n    );\n\n    const popupInfo = getByTestId('popup-info');\n    expect(popupInfo.getAttribute('data-projects')).toBe(JSON.stringify(projectsData));\n    expect(popupInfo.getAttribute('data-userprojectsbyid')).toBe(JSON.stringify(userProjects));\n    expect(popupInfo).toHaveAttribute('data-handlesubmit', 'true');\n\n    const tableInfo = getByTestId('table-info');\n    expect(tableInfo.getAttribute('data-usertasks')).toBe(JSON.stringify(userTasks));\n    expect(tableInfo.getAttribute('data-userprojectsbyid')).toBe(JSON.stringify(userProjects));\n    expect(tableInfo).toHaveAttribute('data-edit', edit.toString());\n    expect(tableInfo).toHaveAttribute('data-role', role);\n    expect(tableInfo).toHaveAttribute('data-userid', userId);\n    expect(tableInfo).toHaveAttribute('data-disabled', disabled.toString());\n  });\n\n  it('should call onAssignProject when project is selected in AddProjectPopup', () => {\n    const { getByTestId } = renderWithRedux(<ProjectsTab onAssignProject={onAssignProject} />);\n    fireEvent.click(getByTestId('assign-btn'));\n    expect(onAssignProject).toHaveBeenCalledWith({ _id: '123' });\n  });\n\n  it('should call onDeleteProject when project is deleted in UserProjectsTable', () => {\n    const { getByTestId } = renderWithRedux(<ProjectsTab onDeleteProject={onDeleteProject} />);\n    fireEvent.click(getByTestId('delete-btn'));\n    expect(onDeleteProject).toHaveBeenCalledWith('123');\n  });\n\n  it('should have undefined handleSubmit prop', () => {\n    const { queryByTestId } = renderWithRedux(<ProjectsTab />);\n    const popupInfo = queryByTestId('popup-info');\n    expect(popupInfo).not.toHaveAttribute('data-handlesubmit');\n  });\n\n  it('should render UserProjectsTable and AddProjectPopup', () => {\n    const { getByTestId } = renderWithRedux(<ProjectsTab />);\n    expect(getByTestId('add-project-popup')).toBeInTheDocument();\n    expect(getByTestId('user-projects-table')).toBeInTheDocument();\n  });\n\n  it('should render AddProjectPopup with empty userProjectsById', () => {\n    const { getByTestId } = renderWithRedux(<ProjectsTab />);\n    const popupInfo = getByTestId('popup-info');\n    expect(popupInfo).not.toHaveAttribute('data-userprojectsbyid');\n  });\n\n  it('should render AddProjectPopup with no projects', () => {\n    const { getByTestId } = renderWithRedux(<ProjectsTab projectsData={[]} />);\n    expect(getByTestId('popup-info')).toHaveAttribute('data-projects', JSON.stringify([]));\n  });\n\n  it('should call onAssignProject with an undefined project', () => {\n    const { getByTestId } = renderWithRedux(<ProjectsTab onAssignProject={onAssignProject} />);\n    fireEvent.click(getByTestId('assign-undefined-btn'));\n    expect(onAssignProject).toHaveBeenCalledWith(undefined);\n  });\n\n  it('should call onAssignProject with a project that has already been assigned to the user', () => {\n    const userProjectsTest = [{ _id: '123' }];\n    const { getByTestId } = renderWithRedux(\n      <ProjectsTab\n        projectsData={projectsData}\n        userProjects={userProjectsTest}\n        onDeleteProject={onDeleteProject}\n        onAssignProject={onAssignProject}\n        edit={edit}\n        role={role}\n        userTasks={userTasks}\n        userId={userId}\n        updateTask={updateTask}\n        handleSubmit={handleSubmit}\n        disabled={disabled}\n      />,\n    );\n    fireEvent.click(getByTestId('assign-btn'));\n    const popupInfo = getByTestId('popup-info');\n    expect(popupInfo.getAttribute('data-userprojectsbyid')).toBe(JSON.stringify(userProjectsTest));\n    expect(onAssignProject).toHaveBeenCalledWith({ _id: '123' });\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TeamsAndProjects/__tests__/TeamsTab.test.jsx","messages":[{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":9,"column":7,"nodeType":"JSXOpeningElement","endLine":16,"endColumn":9},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":9,"column":7,"nodeType":"JSXOpeningElement","endLine":16,"endColumn":9},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":25,"column":7,"nodeType":"JSXOpeningElement","endLine":29,"endColumn":9},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":25,"column":7,"nodeType":"JSXOpeningElement","endLine":29,"endColumn":9}],"suppressedMessages":[],"errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { vi } from 'vitest';\n\n// MUST come before you import TeamsTab!\nvi.mock('../AddTeamPopup', () => ({\n  __esModule: true,\n  default: function AddTeamPopupMock(props) {\n    return (\n      <div\n        data-testid=\"add-team-popup\"\n        data-open={props.open ? 'true' : 'false'}\n        onClick={() => props.onClose && props.onClose()}\n        onDoubleClick={() =>\n          props.onSelectAssignTeam && props.onSelectAssignTeam({ _id: 'TEAM999' })\n        }\n      />\n    );\n  },\n}));\n\nvi.mock('../UserTeamsTable', () => ({\n  __esModule: true,\n  default: function UserTeamsTableMock(props) {\n    return (\n      <div\n        data-testid=\"user-teams-table\"\n        onClick={() => props.onButtonClick && props.onButtonClick()}\n        onDoubleClick={() => props.onDeleteClick && props.onDeleteClick('TEAM123')}\n      />\n    );\n  },\n}));\n\n// Stub your action creators\nvi.mock('../../../../actions/allTeamsAction', () => ({\n  __esModule: true,\n  addTeamMember: vi.fn(),\n  deleteTeamMember: vi.fn(),\n}));\n\n// Stub toast\nvi.mock('react-toastify', () => ({\n  __esModule: true,\n  toast: {\n    success: vi.fn(),\n    error: vi.fn(),\n  },\n}));\n\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport TeamsTab from '../TeamsTab';\nimport { addTeamMember, deleteTeamMember } from '../../../../actions/allTeamsAction';\nimport { toast } from 'react-toastify';\n\ndescribe('TeamsTab (unit)', () => {\n  beforeEach(() => {\n    vi.clearAllMocks();\n  });\n  const baseProps = {\n    teamsData: [],\n    userTeams: {},\n    onDeleteTeam: vi.fn(),\n    onAssignTeam: vi.fn(),\n    onAssignTeamCode: vi.fn(),\n    edit: true,\n    role: 'admin',\n    onUserVisibilitySwitch: vi.fn(),\n    isVisible: true,\n    canEditVisibility: true,\n    handleSubmit: vi.fn(),\n    disabled: false,\n    canEditTeamCode: true,\n    setUserProfile: vi.fn(),\n    userProfile: { _id: 'userId', firstName: 'John', lastName: 'Doe' },\n    codeValid: true,\n    setCodeValid: vi.fn(),\n    saved: false,\n    inputAutoComplete: '',\n    inputAutoStatus: '',\n    isLoading: false,\n    fetchTeamCodeAllUsers: vi.fn(),\n    darkMode: false,\n  };\n\n  it('1. renders without crashing', () => {\n    const { container } = render(<TeamsTab {...baseProps} />);\n    expect(container).toBeInTheDocument();\n  });\n\n  it('2. always renders the AddTeamPopup stub', () => {\n    render(<TeamsTab {...baseProps} />);\n    expect(screen.getByTestId('add-team-popup')).toBeInTheDocument();\n  });\n\n  it('3. always renders the UserTeamsTable stub', () => {\n    render(<TeamsTab {...baseProps} />);\n    expect(screen.getByTestId('user-teams-table')).toBeInTheDocument();\n  });\n\n  it('4. opens the popup when UserTeamsTable “add” is clicked', () => {\n    render(<TeamsTab {...baseProps} />);\n    fireEvent.click(screen.getByTestId('user-teams-table'));\n    expect(screen.getByTestId('add-team-popup')).toHaveAttribute('data-open', 'true');\n  });\n\n  it('5. closes the popup when AddTeamPopup is clicked (onClose)', () => {\n    render(<TeamsTab {...baseProps} />);\n    fireEvent.click(screen.getByTestId('user-teams-table')); // open\n    fireEvent.click(screen.getByTestId('add-team-popup')); // close\n    expect(screen.getByTestId('add-team-popup')).toHaveAttribute('data-open', 'false');\n  });\n\n  it('6. calls onDeleteTeam and toast.success on delete', () => {\n    render(<TeamsTab {...baseProps} />);\n    fireEvent.doubleClick(screen.getByTestId('user-teams-table'));\n    expect(baseProps.onDeleteTeam).toHaveBeenCalledWith('TEAM123');\n    expect(toast.success).toHaveBeenCalledWith('Team Deleted successfully');\n  });\n\n  it('7. calls onAssignTeam, addTeamMember and toast.success on assign', () => {\n    render(<TeamsTab {...baseProps} />);\n    // open popup so it's mounted with open=true\n    fireEvent.click(screen.getByTestId('user-teams-table'));\n    // double-click popup to simulate assign\n    fireEvent.doubleClick(screen.getByTestId('add-team-popup'));\n\n    expect(baseProps.onAssignTeam).toHaveBeenCalledWith({ _id: 'TEAM999' });\n    expect(addTeamMember).toHaveBeenCalledWith(\n      'TEAM999',\n      baseProps.userProfile._id,\n      baseProps.userProfile.firstName,\n      baseProps.userProfile.lastName,\n    );\n    expect(toast.success).toHaveBeenCalledWith('Team assigned successfully');\n  });\n\n  it('8. runs the saved→useEffect and clears removedTeams', () => {\n    const { rerender } = render(<TeamsTab {...baseProps} saved={false} />);\n    rerender(<TeamsTab {...baseProps} saved />);\n    expect(deleteTeamMember).not.toHaveBeenCalled();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TeamsAndProjects/__tests__/UserProjectsTable.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/Teamsview.jsx","messages":[{"ruleId":"react/display-name","severity":2,"message":"Component definition is missing display name","line":55,"column":15,"nodeType":"CallExpression","messageId":"noDisplayName","endLine":112,"endColumn":3}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport {\n  Card,\n  Table,\n  CardTitle,\n  CardText,\n  CardBody,\n  Button,\n  Dropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport TeamsModal from './AddNewTeamModal';\n\nconst Teamdataheader = () => (\n  <tr>\n    <th>Name</th>\n  </tr>\n);\n\nconst Teamtabledata = ({ teammembers, edit, handleTeam }) => {\n  const handleDelete = e => {\n    const id = e.target.getAttribute('data-item');\n    handleTeam('delete', id);\n  };\n  return (\n    <tr>\n      <td>{teammembers.teamName}</td>\n      <td>\n        {edit && (\n          <Button\n            type=\"button\"\n            data-item={teammembers._id}\n            size=\"sm\"\n            color=\"danger\"\n            onClick={handleDelete}\n          >\n            Delete\n          </Button>\n        )}\n      </td>\n    </tr>\n  );\n};\nTeamtabledata.propTypes = {\n  teammembers: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    teamName: PropTypes.string.isRequired,\n  }).isRequired,\n  edit: PropTypes.bool.isRequired,\n  handleTeam: PropTypes.func.isRequired,\n};\nconst Teams = React.memo(props => {\n  const [addNewTeamModal, setAddNewTeamModal] = useState(false);\n  const [remainedTeams, setRemainedTeams] = useState([]);\n  const [teams, setTeams] = useState(props.teamsdata);\n  useEffect(() => {\n    const teamsId = props.allTeams.map(team => {\n      const { _id, teamName } = team;\n      return { _id, teamName };\n    });\n    setRemainedTeams(\n      teamsId.filter(team => {\n        for (let i = 0; i < props.teamsdata.length; i += 1) {\n          if (team._id === props.teamsdata[i]._id) {\n            return false;\n          }\n        }\n        return true;\n      }),\n    );\n  }, [teams]);\n  const onAddNewTeam = () => {\n    setAddNewTeamModal(!addNewTeamModal);\n  };\n  return (\n    <React.Fragment>\n      <TeamsModal\n        isOpen={addNewTeamModal}\n        toggle={onAddNewTeam}\n        teams={remainedTeams}\n        submitHandler={props.handleTeam}\n      />\n      <Table bordered size=\"sm\">\n        <thead>\n          <tr>\n            <th>Teams</th>\n            <th>\n              {props.edit && (\n                <Button size=\"sm\" color=\"info\" disabled={!props.edit} onClick={onAddNewTeam}>\n                  Add a Team\n                </Button>\n              )}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.teamsdata.map(team => (\n            <Teamtabledata\n              key={team._id}\n              teammembers={team}\n              edit={props.edit}\n              handleTeam={props.handleTeam}\n            />\n          ))}\n        </tbody>\n      </Table>\n    </React.Fragment>\n  );\n});\n\nTeams.propTypes = {\n  edit: PropTypes.bool.isRequired,\n  allTeams: PropTypes.arrayOf(PropTypes.object).isRequired,\n  teamsdata: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleTeam: PropTypes.func.isRequired,\n};\n\nexport default Teams;\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TimeEntryEditHistory.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TimeOffRequestsTable/TimeOffRequestsTable.jsx","messages":[{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":37,"column":21,"nodeType":"JSXOpeningElement","endLine":37,"endColumn":101},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":37,"column":21,"nodeType":"JSXOpeningElement","endLine":37,"endColumn":101}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import './TimeOffRequestsTable.css';\r\nimport moment from 'moment';\r\n\r\nconst TimeOffRequestsTable = ({ requests, openModal, darkMode }) => {\r\n  const sortRequests = (a, b) => {\r\n    const momentA = moment(a.startingDate, 'YYYY-MM-DD');\r\n    const momentB = moment(b.startingDate, 'YYYY-MM-DD');\r\n    return momentA - momentB;\r\n  };\r\n  return (\r\n    <div className=\"user-profile-time-off-section\">\r\n      <div className=\"user-profile-time-off-div-header\">\r\n        <div className=\"user-profile-time-off-div-header-title\">SCHEDULED TIME OFF</div>\r\n      </div>\r\n      {requests?.length > 0 ? (\r\n        <>\r\n          <div\r\n            className={`user-profile-time-off-div-table-header ${\r\n              darkMode ? 'bg-space-cadet text-light' : ''\r\n            }`}\r\n          >\r\n            <div className=\"user-profile-time-off-div-table-date\">Date</div>\r\n            <div className=\"user-profile-time-off-div-table-duration\">Duration</div>\r\n          </div>\r\n          <div className=\"user-profile-time-off-div-table-data\">\r\n            {requests\r\n              .slice()\r\n              .sort(sortRequests)\r\n              .map(request => (\r\n                <div\r\n                  className={`user-profile-time-off-div-table-entry ${\r\n                    darkMode ? 'bg-space-cadet text-light' : ''\r\n                  }`}\r\n                  key={request._id}\r\n                >\r\n                  <div className=\"user-profile-time-off-div-table-entry-icon-tooltip-wrapper\">\r\n                    <div className=\"user-profile-time-off-div-table-entry-icon\" onClick={openModal}>\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"22\"\r\n                        height=\"19\"\r\n                        viewBox=\"0 0 448 512\"\r\n                      >\r\n                        <path d=\"M128 0c17.7 0 32 14.3 32 32V64H288V32c0-17.7 14.3-32 32-32s32 14.3 32 32V64h48c26.5 0 48 21.5 48 48v48H0V112C0 85.5 21.5 64 48 64H96V32c0-17.7 14.3-32 32-32zM0 192H448V464c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V192zm64 80v32c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V272c0-8.8-7.2-16-16-16H80c-8.8 0-16 7.2-16 16zm128 0v32c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V272c0-8.8-7.2-16-16-16H208c-8.8 0-16 7.2-16 16zm144-16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V272c0-8.8-7.2-16-16-16H336zM64 400v32c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V400c0-8.8-7.2-16-16-16H80c-8.8 0-16 7.2-16 16zm144-16c-8.8 0-16 7.2-16 16v32c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V400c0-8.8-7.2-16-16-16H208zm112 16v32c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16V400c0-8.8-7.2-16-16-16H336c-8.8 0-16 7.2-16 16z\" />\r\n                      </svg>\r\n                      <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"18\"\r\n                        height=\"18\"\r\n                        viewBox=\"0 0 512 512\"\r\n                      >\r\n                        <path d=\"M464 256A208 208 0 1 1 48 256a208 208 0 1 1 416 0zM0 256a256 256 0 1 0 512 0A256 256 0 1 0 0 256zM232 120V256c0 8 4 15.5 10.7 20l96 64c11 7.4 25.9 4.4 33.3-6.7s4.4-25.9-6.7-33.3L280 243.2V120c0-13.3-10.7-24-24-24s-24 10.7-24 24z\" />\r\n                      </svg>\r\n                    </div>\r\n                    <div className=\"user-profile-time-off-div-table-entry-tooltip\">\r\n                      <div>\r\n                        <span style={{ fontWeight: 500, textDecoration: 'underline' }}>Date:</span>{' '}\r\n                        {moment(request.startingDate).format('MM/DD/YYYY')}\r\n                      </div>\r\n                      <div>\r\n                        <span style={{ fontWeight: 500, textDecoration: 'underline' }}>\r\n                          Duration:\r\n                        </span>{' '}\r\n                        {`${request.duration} ${Number(request.duration) > 1 ? 'Weeks' : 'week'}`}\r\n                      </div>\r\n                      <div>\r\n                        <span style={{ fontWeight: 500, textDecoration: 'underline' }}>\r\n                          Reason:\r\n                        </span>{' '}\r\n                        {request.reason}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"user-profile-time-off-div-table-entry-date\">\r\n                    {moment(request.startingDate).format('MM/DD/YYYY')}\r\n                  </div>\r\n                  <div className=\"user-profile-time-off-div-table-entry-duration\">\r\n                    {request.duration}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className={`pl-1 ${darkMode ? 'bg-space-cadet text-light' : ''}`}>\r\n          No time off scheduled.\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeOffRequestsTable;\r\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TimeOffRequestsTable/__test__/TimeOffRequestsTable.test.jsx","messages":[{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":69,"column":27,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":69,"column":27,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":70,"column":26,"nodeType":"MemberExpression","messageId":"noNodeAccess"}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport '@testing-library/jest-dom/extend-expect';\nimport TimeOffRequestsTable from '../TimeOffRequestsTable';\nimport moment from 'moment';\n\ndescribe('TimeOffRequestsTable Component', () => {\n  const mockRequests = [\n    {\n      _id: '1',\n      startingDate: '2024-11-01',\n      duration: 1,\n      reason: 'Vacation',\n    },\n    {\n      _id: '2',\n      startingDate: '2024-12-01',\n      duration: 2,\n      reason: 'Family Event',\n    },\n  ];\n\n  const mockOpenModal = vi.fn();\n\n  it('should display \"No time off scheduled\" when no requests are provided', () => {\n    render(<TimeOffRequestsTable requests={[]} openModal={mockOpenModal} darkMode={false} />);\n    expect(screen.getByText('No time off scheduled.')).toBeInTheDocument();\n  });\n\n  it('should display the correct number of requests', () => {\n    render(\n      <TimeOffRequestsTable requests={mockRequests} openModal={mockOpenModal} darkMode={false} />,\n    );\n    const entries = screen.getAllByText(/\\/\\d{2}\\/\\d{4}$/);\n    expect(entries).toHaveLength(4);\n  });\n\n  it('renders duration in weeks correctly', () => {\n    render(\n      <TimeOffRequestsTable requests={mockRequests} openModal={mockOpenModal} darkMode={false} />,\n    );\n\n    const durationCells = screen.getAllByText(/2 Weeks|1 week/);\n    expect(durationCells).toHaveLength(2);\n\n    expect(screen.getByText('2 Weeks')).toBeInTheDocument();\n    expect(screen.getByText('1 week')).toBeInTheDocument();\n  });\n\n  it('should correctly display request details', () => {\n    render(\n      <TimeOffRequestsTable requests={mockRequests} openModal={mockOpenModal} darkMode={false} />,\n    );\n    mockRequests.forEach(request => {\n      const dateElement = screen.getAllByText(moment(request.startingDate).format('MM/DD/YYYY'))[0];\n      const durationElement = screen.getAllByText(request.duration.toString())[0];\n      const reasonElement = screen.getByText(request.reason);\n\n      expect(dateElement).toBeInTheDocument();\n      expect(durationElement).toBeInTheDocument();\n      expect(reasonElement).toBeInTheDocument();\n    });\n  });\n\n  it('should open modal when clicking on the icon', () => {\n    render(\n      <TimeOffRequestsTable requests={mockRequests} openModal={mockOpenModal} darkMode={false} />,\n    );\n    const icon = document.querySelector('.user-profile-time-off-div-table-entry-icon svg');\n    fireEvent.click(icon.closest('div'));\n    expect(mockOpenModal).toHaveBeenCalled();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TimeZoneDropDown/TimeZoneDropDown.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TimeZoneDropDown/__tests__/TimeZoneDropDown.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/TimeZoneDropDown/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/ToolTips/BasicTabTips.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/ToolTips/MockData/MockNavLink.jsx","messages":[],"suppressedMessages":[{"ruleId":"jsx-a11y/anchor-is-valid","severity":2,"message":"Anchor used as a button. Anchors are primarily expected to navigate. Use the button element instead. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","line":8,"column":5,"nodeType":"JSXOpeningElement","endLine":8,"endColumn":92,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/ToolTips/TabToolTips.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/ToolTips/TeamsTabTips.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/ToolTips/__tests__/BasicTabTips.test.jsx","messages":[{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTestId` instead","line":61,"column":12,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":61,"endColumn":23},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":67,"column":12,"nodeType":"MemberExpression","messageId":"noContainer","endLine":67,"endColumn":35},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":67,"column":22,"nodeType":"MemberExpression","messageId":"noNodeAccess"}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { render, screen } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport MockNavLink from '../MockData/MockNavLink'; // mock component\nimport BasicTabTips from '../BasicTabTips';\n\n// Mock reactstrap Tooltip component to avoid issues in test environment\nvi.mock('reactstrap', () => ({\n  Tooltip: ({ children, isOpen, target, toggle, ...props }) =>\n    isOpen ? (\n      <div data-testid={`tooltip-${target}`} className=\"tooltip\" {...props}>\n        {children}\n      </div>\n    ) : null,\n}));\n\n/** ****************************TESTS PRE-REQUISITE************************************ */\nlet clickedLinkId = null;\n\nconst handleNavLinkClick = id => {\n  clickedLinkId = id;\n};\n\nconst mockComponentWithNavLink = () => {\n  return render(\n    <div>\n      <MockNavLink id=\"info-email\" onClickHandler={handleNavLinkClick}>\n        Email\n      </MockNavLink>\n      <MockNavLink id=\"info-phone\" onClickHandler={handleNavLinkClick}>\n        Phone\n      </MockNavLink>\n      <MockNavLink id=\"info-title\" onClickHandler={handleNavLinkClick}>\n        Title\n      </MockNavLink>\n      <MockNavLink id=\"info-name\" onClickHandler={handleNavLinkClick}>\n        Name\n      </MockNavLink>\n      <BasicTabTips />\n    </div>,\n  );\n};\n\nconst mockComponentWithoutNavLink = () => {\n  return render(<BasicTabTips />);\n};\n\n/** ****************************TESTS CASES************************************ */\nconst tooltipName = 'First Name and Last Name';\nconst tooltipEmail = 'Your Email';\nconst tooltipPhone = 'Your Phone Number';\nconst tooltipTitle = 'Your Preferred Title';\n\ndescribe('TabToolTip Component Tests', () => {\n  beforeEach(() => {\n    clickedLinkId = null;\n    vi.clearAllMocks();\n  });\n\n  it('Test case 1: Renders without crashing', () => {\n    const { getByTestId } = mockComponentWithoutNavLink();\n    expect(getByTestId('test-basictabtips')).toBeInTheDocument();\n  });\n\n  it('Test case 2: Renders with correct structure', () => {\n    const { container } = mockComponentWithoutNavLink();\n    // Check if the root div exists\n    expect(container.querySelector('div[data-testid=\"test-basictabtips\"]')).toBeInTheDocument();\n  });\n\n  it('Test case 3: Contains tooltip components with the correct targets', () => {\n    // We can check the source code for tooltip content\n    const sourceCode = BasicTabTips.toString();\n    expect(sourceCode).toContain(tooltipName);\n    expect(sourceCode).toContain(tooltipEmail);\n    expect(sourceCode).toContain(tooltipPhone);\n    expect(sourceCode).toContain(tooltipTitle);\n  });\n\n  it('Test case 4: Assert that the tooltip is not initially visible', () => {\n    mockComponentWithNavLink();\n\n    // Check that none of the tooltips are visible initially\n    expect(screen.queryByText(tooltipName)).not.toBeInTheDocument();\n    expect(screen.queryByText(tooltipEmail)).not.toBeInTheDocument();\n    expect(screen.queryByText(tooltipPhone)).not.toBeInTheDocument();\n    expect(screen.queryByText(tooltipTitle)).not.toBeInTheDocument();\n  });\n\n  it('Test case 5: Assert clicking Email component sets the correct ID', async () => {\n    mockComponentWithNavLink();\n    const emailComp = screen.getByText('Email');\n    await userEvent.click(emailComp);\n\n    // Check if the clicked link ID matches\n    expect(clickedLinkId).toBe('info-email');\n  });\n\n  // Similar tests for other tooltip interactions\n  it('Test case 6: Assert clicking Phone component sets the correct ID', async () => {\n    mockComponentWithNavLink();\n    const phoneComp = screen.getByText('Phone');\n    await userEvent.click(phoneComp);\n\n    expect(clickedLinkId).toBe('info-phone');\n  });\n\n  it('Test case 7: Assert clicking Title component sets the correct ID', async () => {\n    mockComponentWithNavLink();\n    const titleComp = screen.getByText('Title');\n    await userEvent.click(titleComp);\n\n    expect(clickedLinkId).toBe('info-title');\n  });\n\n  it('Test case 8: Assert clicking Name component sets the correct ID', async () => {\n    mockComponentWithNavLink();\n    const nameComp = screen.getByText('Name');\n    await userEvent.click(nameComp);\n\n    expect(clickedLinkId).toBe('info-name');\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/ToolTips/__tests__/TabToolTips.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserLinkLayout/UserLinkLayout.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserLinkLayout/__tests__/UserLinkLayout.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserLinkLayout/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserLinks/UserLinks.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserLinks/__tests__/UserLinks.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserLinks/__tests__/UserLinks_1.test.jsx","messages":[{"ruleId":"testing-library/no-render-in-lifecycle","severity":2,"message":"Forbidden usage of `render` within testing framework `beforeEach` setup","line":19,"column":5,"nodeType":"Identifier","messageId":"noRenderInSetup","endLine":19,"endColumn":24}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { screen } from '@testing-library/react';\nimport { Provider } from 'react-redux';\nimport configureMockStore from 'redux-mock-store';\nimport { userProfileMock, themeMock } from '../../../../__tests__/mockStates';\nimport { renderWithRouter } from '../../../../__tests__/utils';\nimport UserLinks from '../UserLinks';\n\nconst mockStore = configureMockStore();\nconst initialState = { theme: themeMock };\nconst store = mockStore(initialState);\n\nconst renderWithProviders = (ui, { store }) => {\n  return renderWithRouter(<Provider store={store}>{ui}</Provider>);\n};\n\ndescribe('user links tests', () => {\n  beforeEach(() => {\n    renderWithProviders(<UserLinks links={userProfileMock.personalLinks} />, { store });\n  });\n\n  it('should render links', () => {\n    expect(screen.getAllByRole('link')).toHaveLength(userProfileMock.personalLinks.length);\n  });\n\n  it('should render links with the correct href', () => {\n    const links = screen.getAllByRole('link');\n    expect(links[0]).toHaveAttribute('href', `/${userProfileMock.personalLinks[0].Link}`);\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserLinks/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfile.container.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfile.jsx","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":113,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":113,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4630,4649],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":168,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":168,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[7380,7399],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":309,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":309,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[12461,12512],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":327,"column":21,"nodeType":"MemberExpression","messageId":"unexpected","endLine":327,"endColumn":32},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":372,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":372,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[14501,14563],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":454,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":454,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[17566,17583],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":488,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":488,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[18502,18555],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":577,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":577,"endColumn":69},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":579,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":579,"endColumn":62},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":610,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":610,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[22568,22611],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":611,"column":11,"nodeType":"CallExpression","messageId":"unexpected","endLine":611,"endColumn":73},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":614,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":614,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[22738,22773],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":615,"column":11,"nodeType":"CallExpression","messageId":"unexpected","endLine":615,"endColumn":73},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":651,"column":13,"nodeType":"MemberExpression","messageId":"unexpected","endLine":651,"endColumn":24,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[23903,23954],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":692,"column":60,"nodeType":"MemberExpression","messageId":"unexpected","endLine":692,"endColumn":71},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":706,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":706,"endColumn":28},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":719,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":719,"endColumn":79},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":829,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":829,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[29775,29829],"text":""},"desc":"Remove the console.error()."}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1176,"column":21,"nodeType":"CallExpression","messageId":"unexpected","endLine":1176,"endColumn":76},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1532,"column":23,"nodeType":"CallExpression","messageId":"unexpected","endLine":1536,"endColumn":24},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":1570,"column":21,"nodeType":"JSXOpeningElement","endLine":1580,"endColumn":22},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":1570,"column":21,"nodeType":"JSXOpeningElement","endLine":1580,"endColumn":22},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":1665,"column":31,"nodeType":"CallExpression","messageId":"unexpected","endLine":1669,"endColumn":32},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":1701,"column":27,"nodeType":"JSXOpeningElement","endLine":1711,"endColumn":28},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":1701,"column":27,"nodeType":"JSXOpeningElement","endLine":1711,"endColumn":28},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":1780,"column":27,"nodeType":"JSXOpeningElement","endLine":1790,"endColumn":28},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":1780,"column":27,"nodeType":"JSXOpeningElement","endLine":1790,"endColumn":28},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":1876,"column":27,"nodeType":"JSXOpeningElement","endLine":1886,"endColumn":28},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":1876,"column":27,"nodeType":"JSXOpeningElement","endLine":1886,"endColumn":28},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":1962,"column":27,"nodeType":"JSXOpeningElement","endLine":1972,"endColumn":28},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":1962,"column":27,"nodeType":"JSXOpeningElement","endLine":1972,"endColumn":28},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":2035,"column":27,"nodeType":"JSXOpeningElement","endLine":2045,"endColumn":28},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":2035,"column":27,"nodeType":"JSXOpeningElement","endLine":2045,"endColumn":28}],"suppressedMessages":[],"errorCount":12,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useRef, useId } from 'react';\nimport {\n  Row,\n  Input,\n  Col,\n  Container,\n  TabContent,\n  TabPane,\n  List,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Nav,\n  NavItem,\n  NavLink,\n  Button,\n} from 'reactstrap';\nimport Select from 'react-select';\nimport Image from 'react-bootstrap/Image';\nimport { Link, useHistory } from 'react-router-dom';\nimport classnames from 'classnames';\nimport moment from 'moment';\nimport Alert from 'reactstrap/lib/Alert';\nimport axios from 'axios';\nimport { boxStyle, boxStyleDark } from '~/styles';\nimport hasPermission, {\n  cantDeactivateOwner,\n  cantUpdateDevAdminDetails,\n} from '../../utils/permissions';\nimport ActiveCell from '../UserManagement/ActiveCell';\nimport { ENDPOINTS } from '~/utils/URL';\nimport SkeletonLoading from '../common/SkeletonLoading';\nimport UserProfileModal from './UserProfileModal';\nimport './UserProfile.scss';\nimport TeamsTab from './TeamsAndProjects/TeamsTab';\nimport ProjectsTab from './TeamsAndProjects/ProjectsTab';\nimport BasicInformationTab from './BasicInformationTab/BasicInformationTab';\nimport VolunteeringTimeTab from './VolunteeringTimeTab/VolunteeringTimeTab';\nimport SaveButton from './UserProfileEdit/SaveButton';\nimport UserLinkLayout from './UserLinkLayout';\nimport TabToolTips from './ToolTips/TabToolTips';\nimport BasicToolTips from './ToolTips/BasicTabTips';\nimport TeamsTabTips from './ToolTips/TeamsTabTips';\nimport ResetPasswordButton from '../UserManagement/ResetPasswordButton';\nimport Badges from './Badges';\nimport { getAllTeamCode, getAllUserTeams } from '../../actions/allTeamsAction';\nimport TimeEntryEditHistory from './TimeEntryEditHistory';\nimport ActiveInactiveConfirmationPopup from '../UserManagement/ActiveInactiveConfirmationPopup';\nimport {\n  updateUserStatus,\n  updateRehireableStatus,\n  toggleVisibility,\n} from '../../actions/userManagement';\nimport { UserStatus } from '../../utils/enums';\nimport BlueSquareLayout from './BlueSquareLayout';\nimport TeamWeeklySummaries from './TeamWeeklySummaries/TeamWeeklySummaries';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { formatDateLocal } from '~/utils/formatDate';\nimport EditableInfoModal from './EditableModal/EditableInfoModal';\nimport { fetchAllProjects } from '../../actions/projects';\nimport { toast } from 'react-toastify';\nimport { setCurrentUser } from '../../actions/authActions';\nimport { getAllTimeOffRequests } from '../../actions/timeOffRequestAction';\nimport QuickSetupModal from './QuickSetupModal/QuickSetupModal';\nimport {\n  DEV_ADMIN_ACCOUNT_EMAIL_DEV_ENV_ONLY,\n  DEV_ADMIN_ACCOUNT_CUSTOM_WARNING_MESSAGE_DEV_ENV_ONLY,\n  PROTECTED_ACCOUNT_MODIFICATION_WARNING_MESSAGE,\n} from '~/utils/constants';\n\nimport {\n  getTimeEndDateEntriesByPeriod,\n  getTimeStartDateEntriesByPeriod,\n  getTimeEntriesForWeek,\n} from '../../actions/timeEntries.js';\nimport ConfirmRemoveModal from './UserProfileModal/confirmRemoveModal';\nimport { formatDateYYYYMMDD, CREATED_DATE_CRITERIA } from '~/utils/formatDate.js';\nimport AccessManagementModal from './UserProfileModal/AccessManagementModal';\n\nfunction UserProfile(props) {\n  const darkMode = useSelector(state => state.theme.darkMode);\n  /* Constant values */\n  const initialFormValid = {\n    firstName: true,\n    lastName: true,\n    email: true,\n  };\n  const roles = props?.role.roles;\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  // TO-DO Performance Optimization: Replace fetchTeamCodeAllUsers with getAllTeamCode(), a leener version API to retrieve all team codes (reduce data payload and response time)\n  //        Also, replace passing inputAutoComplete, inputAutoStatus, and isLoading to the\n  //        child component with access global redux store data (complexity)\n  // Explaination:\n  //        fetchTeamCodeAllUsers get all weekly summaries and filter out the team codes. (~800ms - 1 sec res time)\n  //        getAllTeamCode() will get all team codes from the database directly with distinct teamcode value (~15ms res time cache enabled).\n  const fetchTeamCodeAllUsers = async () => {\n    const url = ENDPOINTS.WEEKLY_SUMMARIES_REPORT();\n    try {\n      setIsLoading(true);\n      const response = await axios.get(url);\n      const stringWithValue = response.data.map(item => item.teamCode).filter(Boolean);\n      const stringNoRepeat = stringWithValue\n        .map(item => item)\n        .filter((item, index, array) => array.indexOf(item) === index);\n      setInputAutoComplete(stringNoRepeat);\n      setInputAutoStatus(response.status);\n      setIsLoading(false);\n      return stringNoRepeat;\n    } catch (error) {\n      console.log(error);\n      setIsLoading(false);\n      toast.error(`It was not possible to retrieve the team codes.\n      Please try again by clicking the icon inside the input auto complete.`);\n    }\n  };\n\n  /* Hooks */\n  const [showLoading, setShowLoading] = useState(true);\n  const [showSelect, setShowSelect] = useState(false);\n  const [summaries, setSummaries] = useState(undefined);\n  const [userProfile, setUserProfile] = useState(undefined);\n  const [originalUserProfile, setOriginalUserProfile] = useState(undefined);\n  const [originalTasks, setOriginalTasks] = useState([]);\n\n  const [teams, setTeams] = useState([]);\n  const [isProjectsEqual, setIsProjectsEqual] = useState(true);\n  const [projects, setProjects] = useState([]);\n  const [originalProjects, setOriginalProjects] = useState([]);\n  const [resetProjects, setResetProjects] = useState([]);\n  const [id, setId] = useState('');\n  const [activeTab, setActiveTab] = useState('1');\n  const [formValid, setFormValid] = useState(initialFormValid);\n  const [type, setType] = useState('');\n  const [menuModalTabletScreen, setMenuModalTabletScreen] = useState('');\n  const [showModal, setShowModal] = useState(false);\n  const [modalTitle, setModalTitle] = useState('');\n  const [modalMessage, setModalMessage] = useState('');\n  const [shouldRefresh, setShouldRefresh] = useState(false);\n  const [activeInactivePopupOpen, setActiveInactivePopupOpen] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [updatedTasks, setUpdatedTasks] = useState([]);\n  const [summarySelected, setSummarySelected] = useState(null);\n  const [summaryName, setSummaryName] = useState('');\n  const [showSummary, setShowSummary] = useState(false);\n  const [saved, setSaved] = useState(false);\n  const [summaryIntro, setSummaryIntro] = useState('');\n  const [showConfirmDialog, setShowConfirmDialog] = useState(false);\n  const [showToggleVisibilityModal, setShowToggleVisibilityModal] = useState(false);\n  const [pendingRehireableStatus, setPendingRehireableStatus] = useState(null);\n  const [isRehireable, setIsRehireable] = useState(null);\n  const [isRemoveModalOpen, setIsRemoveModalOpen] = useState(false);\n  const toggleRemoveModal = () => setIsRemoveModalOpen(!isRemoveModalOpen);\n  const [loadingSummaries, setLoadingSummaries] = useState(false);\n  const [showAccessManagementModal, setShowAccessManagementModal] = useState(false);\n  const allRequests = useSelector(state => state.timeOffRequests?.requests);\n\n  const updateRemovedImage = async () => {\n    try {\n      const response = await axios.put(ENDPOINTS.USERS_REMOVE_PROFILE_IMAGE, {\n        user_id: userProfile._id,\n      });\n      await loadUserProfile();\n      toast.success('Profile Image Removed');\n    } catch (error) {\n      console.log(error);\n      toast.error('Failed to remove profile Image.');\n    }\n  };\n  const confirmRemoveImage = async () => {\n    updateRemovedImage();\n    toggleRemoveModal(); // Close the remove confirmation modal\n  };\n\n  const userProfileRef = useRef();\n\n  const isTasksEqual = JSON.stringify(originalTasks) === JSON.stringify(tasks);\n  const isProfileEqual = JSON.stringify(userProfile) === JSON.stringify(originalUserProfile);\n  const [codeValid, setCodeValid] = useState(true);\n\n  const [userStartDate, setUserStartDate] = useState('');\n  const [userEndDate, setUserEndDate] = useState('');\n  const [calculatedStartDate, setCalculatedStartDate] = useState('');\n\n  const [inputAutoComplete, setInputAutoComplete] = useState([]);\n  const [inputAutoStatus, setInputAutoStatus] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { userid: requestorId, role: requestorRole } = props.auth.user;\n\n  const canEditTeamCode = props.hasPermission('editTeamCode');\n  const [titleOnSet, setTitleOnSet] = useState(false);\n\n  const updateProjetTouserProfile = () => {\n    return new Promise(resolve => {\n      checkIsProjectsEqual();\n\n      setUserProfile(prevState => {\n        const updatedProfile = prevState;\n        if (updatedProfile) {\n          updatedProfile.projects = projects || updatedProfile.projects;\n        }\n        return updatedProfile;\n      });\n      setOriginalUserProfile(prevState => {\n        const updatedOriginalProfile = prevState;\n        if (updatedOriginalProfile) {\n          updatedOriginalProfile.projects = projects || updatedOriginalProfile.projects;\n        }\n        return updatedOriginalProfile;\n      });\n    });\n  };\n\n  const checkIsProjectsEqual = () => {\n    const originalProjectProperties = [];\n    originalProjects?.forEach(project => {\n      for (const [key, value] of Object.entries(project)) {\n        if (key == 'projectName') {\n          originalProjectProperties.push({ [key]: value });\n        }\n      }\n    });\n\n    const projectsProperties = [];\n    projects?.forEach(project => {\n      for (const [key, value] of Object.entries(project)) {\n        if (key == 'projectName') {\n          projectsProperties.push({ [key]: value });\n        }\n      }\n    });\n\n    const originalProjectsBeingDisplayed = projectsProperties.filter(\n      item =>\n        JSON.stringify(item) ===\n        JSON.stringify(\n          originalProjectProperties.filter(elem => elem.projectName === item.projectName)[0],\n        ),\n    );\n\n    const compare =\n      originalProjectsBeingDisplayed?.length === originalProjects?.length &&\n      originalProjectsBeingDisplayed?.length === projectsProperties?.length;\n    setIsProjectsEqual(compare);\n  };\n\n  const loadSummaryIntroDetails = async (teamId, user) => {\n    const currentManager = user;\n\n    if (!teamId) {\n      setSummaryIntro(\n        `This week’s summary was managed by ${currentManager.firstName} ${currentManager.lastName} and includes .\n         These people did NOT provide a summary .\n         <Insert the proofread and single-paragraph summary created by ChatGPT>`,\n      );\n      return;\n    }\n\n    try {\n      const res = await axios.get(ENDPOINTS.TEAM_USERS(teamId));\n      const { data } = res;\n\n      const activeMembers = data.filter(\n        member => member._id !== currentManager._id && member.isActive,\n      );\n\n      //submitted a summary, maybe didn't complete their hours just yet\n      const memberSubmitted = await Promise.all(\n        activeMembers\n          .filter(member => member.weeklySummaries[0].summary !== '')\n          .map(async member => {\n            const results = await dispatch(getTimeEntriesForWeek(member._id, 0));\n\n            const returnData = calculateTotalTime(results.data, true);\n\n            return returnData < member.weeklycommittedHours\n              ? `${member.firstName} ${member.lastName} hasn't completed hours`\n              : `${member.firstName} ${member.lastName}`;\n          }),\n      );\n\n      const memberNotSubmitted = activeMembers\n        .filter(member => member.weeklySummaries[0].summary === '')\n        .map(member => {\n          if (getTimeOffStatus(member._id)) {\n            return `${member.firstName} ${member.lastName} off for the week`;\n          } else {\n            return `${member.firstName} ${member.lastName}`;\n          }\n        });\n\n      const memberSubmittedString =\n        memberSubmitted.length !== 0\n          ? memberSubmitted.join(', ')\n          : '<list all team members names included in the summary>';\n\n      const memberDidntSubmitString =\n        memberNotSubmitted.length !== 0\n          ? memberNotSubmitted.join(', ')\n          : '<list all team members names NOT included in the summary>';\n\n      const summaryIntroString = `This week's summary was managed by ${currentManager.firstName} ${currentManager.lastName} and includes ${memberSubmittedString}. These people did NOT provide a summary ${memberDidntSubmitString}. <Insert the proofread and single-paragraph summary created by ChatGPT>`;\n\n      setSummaryIntro(summaryIntroString);\n    } catch (error) {\n      console.error('Error fetching team users:', error);\n    }\n  };\n\n  const calculateTotalTime = (data, isTangible) => {\n    const filteredData = data.filter(entry => entry.isTangible === isTangible);\n    const reducer = (total, entry) => total + Number(entry.hours) + Number(entry.minutes) / 60;\n    return filteredData.reduce(reducer, 0);\n  };\n\n  const loadUserTasks = async () => {\n    const userId = props?.match?.params?.userId;\n    axios\n      .get(ENDPOINTS.TASKS_BY_USERID(userId))\n      .then(res => {\n        setTasks(res?.data || []);\n        setOriginalTasks(res.data);\n      })\n      .catch(err => console.log(err));\n  };\n\n  const getCurretLoggedinUserEmail = async () => {\n    const userId = props?.auth?.user?.userid;\n    try {\n      const response = await axios.get(ENDPOINTS.USER_PROFILE(userId));\n      const currentUserEmail = response.data.email;\n      dispatch(\n        setCurrentUser({\n          ...props.auth.user,\n          email: currentUserEmail,\n          permissions: {\n            ...props.auth.user.permissions,\n            frontPermissions: [\n              ...(props.auth.user.permissions?.frontPermissions || []),\n              ...(response.data.permissions?.frontPermissions || []),\n            ],\n          },\n        }),\n      );\n    } catch (err) {\n      toast.error('Error while getting current logged in user email');\n    }\n  };\n\n  const fetchCalculatedStartDate = async (userId, userProfileData) => {\n    try {\n      const startDate = await dispatch(\n        getTimeStartDateEntriesByPeriod(\n          userId,\n          userProfileData.createdDate,\n          userProfileData.endDate,\n        ),\n      );\n\n      if (startDate !== 'N/A') {\n        const formattedStartDate = startDate.split('T')[0];\n        setCalculatedStartDate(formattedStartDate);\n      } else {\n        // No time entries yet, use createdDate as fallback\n        const createdDate = userProfile?.createdDate ? userProfile.createdDate.split('T')[0] : '';\n        setCalculatedStartDate(createdDate);\n      }\n    } catch (error) {\n      console.error('Error fetching calculated start date:', error);\n      // Fallback to createdDate on error\n      const createdDate = userProfile?.createdDate ? userProfile.createdDate.split('T')[0] : '';\n      setCalculatedStartDate(createdDate);\n    }\n  };\n\n  const getTimeOffStatus = personId => {\n    if (!allRequests[personId]) {\n      return false;\n    }\n    let hasTimeOff = false;\n    const sortedRequests = allRequests[personId].sort((a, b) =>\n      moment(a.startingDate).diff(moment(b.startingDate)),\n    );\n\n    const mostRecentRequest =\n      sortedRequests.find(request => moment().isBefore(moment(request.endingDate), 'day')) ||\n      sortedRequests[0];\n\n    const startOfWeek = moment().startOf('week');\n    const endOfWeek = moment().endOf('week');\n\n    const isCurrentlyOff =\n      moment(mostRecentRequest.startingDate).isBefore(endOfWeek) &&\n      moment(mostRecentRequest.endingDate).isSameOrAfter(startOfWeek);\n\n    return isCurrentlyOff;\n  };\n\n  const loadUserProfile = async () => {\n    const userId = props?.match?.params?.userId;\n\n    if (!userId) return;\n\n    try {\n      // run requests in parallel\n      const [response] = await Promise.all([axios.get(ENDPOINTS.USER_PROFILE(userId))]);\n\n      const newUserProfile = response.data;\n      newUserProfile.totalIntangibleHrs = Number(newUserProfile.totalIntangibleHrs.toFixed(2));\n\n      // sanitize data first\n      newUserProfile.teams = (newUserProfile.teams || []).filter(team => team !== null);\n      newUserProfile.projects = (newUserProfile.projects || []).filter(project => project !== null);\n\n      // set values first so UI can start rendering\n      setTeams(newUserProfile.teams);\n      setProjects(newUserProfile.projects);\n      setOriginalProjects(newUserProfile.projects);\n      setResetProjects(newUserProfile.projects);\n\n      const profileWithFormattedDates = {\n        ...newUserProfile,\n        jobTitle: newUserProfile.jobTitle[0],\n        phoneNumber: newUserProfile.phoneNumber[0],\n        startDate: newUserProfile?.startDate ? formatDateYYYYMMDD(newUserProfile?.startDate) : '',\n        createdDate: formatDateYYYYMMDD(newUserProfile?.createdDate),\n        ...(newUserProfile?.endDate &&\n          newUserProfile.endDate !== '' && {\n            endDate: formatDateYYYYMMDD(newUserProfile.endDate),\n          }),\n      };\n\n      setUserProfile(profileWithFormattedDates);\n      setOriginalUserProfile(profileWithFormattedDates);\n      setIsRehireable(newUserProfile.isRehireable);\n\n      // Fetch calculated start date from first time entry\n      await fetchCalculatedStartDate(userId, newUserProfile);\n\n      // run after main profile is loaded\n      const teamId = newUserProfile?.teams[0]?._id;\n      loadSummaryIntroDetails(teamId, newUserProfile);\n\n      // Note: Removed automatic getTimeStartDateEntriesByPeriod call to prevent overwriting manual startDate changes\n      // Users can now toggle between manual and calculated startDate via button\n\n      checkIsProjectsEqual();\n      setShowLoading(false);\n    } catch (err) {\n      setShowLoading(false);\n      console.log(err);\n    }\n  };\n\n  const getWeeklySummary = async userId => {\n    try {\n      setSummarySelected('');\n      setShowSummary(false);\n      const response = await axios.get(ENDPOINTS.USER_PROFILE(userId));\n      const user = response.data;\n      const userSummaries = user.weeklySummaries;\n\n      setSummarySelected(userSummaries);\n      setShowSummary(true);\n    } catch (err) {\n      setShowLoading(false);\n    }\n  };\n\n  const getTeamMembersWeeklySummary = async () => {\n    const userId = props?.match?.params?.userId;\n\n    if (!userId) return;\n\n    setLoadingSummaries(true);\n    try {\n      const response = await axios.get(ENDPOINTS.LEADER_BOARD(userId));\n      const leaderBoardData = response.data;\n      const allSummaries = leaderBoardData.map(item => ({\n        value: [item.name, item.personId],\n        label: `View ${item.name}'s summary.`,\n      }));\n      setSummaries(allSummaries);\n    } catch (err) {\n      console.log('Could not load leaderBoard data.', err);\n    } finally {\n      setLoadingSummaries(false);\n    }\n  };\n\n  const onDeleteTeam = deletedTeamId => {\n    setTeams(prevTeams => prevTeams.filter(team => team._id !== deletedTeamId));\n  };\n\n  const onDeleteProject = deletedProjectId => {\n    setProjects(prevProject => prevProject.filter(project => project._id !== deletedProjectId));\n  };\n\n  const onAssignTeam = assignedTeam => {\n    setTeams(prevState => [...prevState, assignedTeam]);\n  };\n\n  const onAssignProject = assignedProject => {\n    setProjects(prevProjects => [...prevProjects, assignedProject]);\n  };\n\n  const onUpdateTask = (taskId, updatedTask) => {\n    const newTask = {\n      updatedTask,\n      taskId,\n    };\n\n    setTasks(tasks => {\n      const tasksWithoutTheUpdated = [...tasks];\n      const taskIndex = tasks.findIndex(task => task._id === taskId);\n      tasksWithoutTheUpdated[taskIndex] = updatedTask;\n      return tasksWithoutTheUpdated;\n    });\n\n    if (updatedTasks.findIndex(task => task.taskId === taskId) !== -1) {\n      const taskIndex = updatedTasks.findIndex(task => task.taskId === taskId);\n      const tasksToUpdate = updatedTasks;\n      tasksToUpdate.splice(taskIndex, 1);\n      tasksToUpdate.splice(taskIndex, 0, newTask);\n      setUpdatedTasks(tasksToUpdate);\n    } else {\n      setUpdatedTasks(tasks => [...tasks, newTask]);\n    }\n  };\n\n  const handleImageUpload = async evt => {\n    if (evt) evt.preventDefault();\n    const file = evt.target.files[0];\n    if (typeof file !== 'undefined') {\n      const filesizeKB = file.size / 1024;\n      const allowedTypes = ['image/png', 'image/jpeg', 'image/jpg'];\n      const allowedTypesString = `File type not permitted. Allowed types are ${allowedTypes\n        .toString()\n        .replaceAll(',', ', ')}`;\n\n      // Input validation: file type\n      if (!allowedTypes.includes(file.type)) {\n        setType('image');\n        setShowModal(true);\n        setModalTitle('Profile Pic Error');\n        setModalMessage(allowedTypesString);\n        return;\n      }\n\n      // Input validation: file size.\n      if (filesizeKB > 50) {\n        const errorMessage = `The file you are trying to upload exceeds the maximum size of 50KB. You can either\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchoose a different file, or use an online file compressor.`;\n\n        setType('image');\n        setShowModal(true);\n        setModalTitle('Profile Pic Error');\n        setModalMessage(errorMessage);\n\n        return;\n      }\n\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n      fileReader.onloadend = () => {\n        setUserProfile({ ...userProfile, profilePic: fileReader.result });\n      };\n    }\n  };\n\n  const handleBlueSquare = (status = true, type = 'message', blueSquareID = '') => {\n    if (targetIsDevAdminUneditable) {\n      if (userProfile?.email === DEV_ADMIN_ACCOUNT_EMAIL_DEV_ENV_ONLY) {\n        alert(DEV_ADMIN_ACCOUNT_CUSTOM_WARNING_MESSAGE_DEV_ENV_ONLY);\n      } else {\n        alert(PROTECTED_ACCOUNT_MODIFICATION_WARNING_MESSAGE);\n      }\n      return;\n    }\n    setType(type);\n    setShowModal(status);\n\n    if (type === 'addBlueSquare') {\n      setModalTitle('Blue Square');\n    } else if (type === 'viewBlueSquare' || type === 'modBlueSquare') {\n      setModalTitle('Blue Square');\n      setId(blueSquareID);\n    } else if (blueSquareID === 'none') {\n      setModalTitle('Save & Refresh');\n      setModalMessage('');\n    }\n  };\n\n  /**\n   * Modifies the userProfile's infringements using a predefined operation\n   * @param {String} id Id of the blue square\n   * @param {String} dateStamp\n   * @param {String} summary\n   * @param {String} operation 'add' | 'update' | 'delete'\n   */\n  const modifyBlueSquares = async (id, dateStamp, summary, operation) => {\n    setShowModal(false);\n    if (operation === 'add') {\n      /* peizhou: check that the date of the blue square is not future or empty. */\n      if (moment(dateStamp).isAfter(moment().format('YYYY-MM-DD')) || dateStamp === '') {\n        if (moment(dateStamp).isAfter(moment().format('YYYY-MM-DD'))) {\n          console.log('WARNING: Future Blue Square');\n          alert('WARNING: Cannot Assign Blue Square with a Future Date');\n        }\n        if (dateStamp === '') {\n          console.log('WARNING: Empty Date');\n          alert('WARNING: Cannot Assign Blue Square with an Empty Date');\n        }\n      } else {\n        const newBlueSquare = {\n          date: dateStamp,\n          description: summary,\n          // createdDate: moment\n          //   .tz('America/Los_Angeles')\n          //   .toISOString()\n          //   .split('T')[0],\n          createdDate: moment().format('YYYY-MM-DD'),\n        };\n        setModalTitle('Blue Square');\n        axios\n          .post(ENDPOINTS.ADD_BLUE_SQUARE(userProfile._id), {\n            blueSquare: newBlueSquare,\n          })\n          .then(res => {\n            const newBlueSqrs = [\n              ...userProfile.infringements,\n              {\n                _id: res.data._id,\n                ...newBlueSquare,\n              },\n            ];\n            toast.success('Blue Square Added!');\n            setOriginalUserProfile({\n              ...originalUserProfile,\n              infringements: newBlueSqrs,\n            });\n            setUserProfile({\n              ...userProfile,\n              infringements: newBlueSqrs,\n            });\n          })\n          .catch(error => {\n            console.log('error in modifying bluequare', error);\n            toast.error('Failed to add Blue Square!');\n          });\n      }\n    } else if (operation === 'update') {\n      const currentBlueSquares = [...userProfile?.infringements] || [];\n      if (dateStamp != null && currentBlueSquares.length !== 0) {\n        currentBlueSquares.find(blueSquare => blueSquare._id === id).date = dateStamp;\n      }\n      if (summary != null && currentBlueSquares.length !== 0) {\n        currentBlueSquares.find(blueSquare => blueSquare._id === id).description = summary;\n      }\n      await axios\n        .put(ENDPOINTS.MODIFY_BLUE_SQUARE(userProfile._id, id), {\n          dateStamp,\n          summary,\n        })\n        .catch(error => {\n          toast.error('Failed to update Blue Square!');\n        });\n      toast.success('Blue Square Updated!');\n      setUserProfile({ ...userProfile, infringements: currentBlueSquares });\n      setOriginalUserProfile({ ...userProfile, infringements: currentBlueSquares });\n    } else if (operation === 'delete') {\n      let newInfringements = [...userProfile?.infringements] || [];\n      if (newInfringements.length !== 0) {\n        newInfringements = newInfringements.filter(infringement => infringement._id !== id);\n        await axios.delete(ENDPOINTS.MODIFY_BLUE_SQUARE(userProfile._id, id)).catch(error => {\n          toast.error('Failed to delete Blue Square!');\n        });\n        toast.success('Blue Square Deleted!');\n        setUserProfile({ ...userProfile, infringements: newInfringements });\n        setOriginalUserProfile({ ...userProfile, infringements: newInfringements });\n      }\n    }\n  };\n\n  const handleSubmit = async updatedUserProfile => {\n    for (let i = 0; i < updatedTasks.length; i += 1) {\n      const updatedTask = updatedTasks[i];\n      const url = ENDPOINTS.TASK_UPDATE(updatedTask.taskId);\n      axios.put(url, updatedTask.updatedTask).catch(err => console.log(err));\n    }\n    try {\n      const userProfileToUpdate = updatedUserProfile || userProfileRef.current;\n      const result = await props.updateUserProfile(userProfileToUpdate);\n      if (userProfile._id === props.auth.user.userid && props.auth.user.role !== userProfile.role) {\n        await props.refreshToken(userProfile._id);\n      }\n      await loadUserProfile();\n      await loadUserTasks();\n      setSaved(false);\n    } catch (err) {\n      if (err.response && err.response.data && err.response.data.error) {\n        const errorMessage = err.response.data.error.join('\\n');\n        alert(errorMessage);\n      }\n      return err;\n    }\n  };\n\n  // Changing onSubmit for Badges component from handleSubmit to handleBadgeSubmit.\n  // AssignBadgePopup already has onSubmit action to call an API to update the user badges.\n  // Using handleSubmit will trigger actopms to call the assignBadge API and updateUserProfile API, which is redundant.\n  const handleBadgeSubmit = async () => {\n    try {\n      setSaved(false);\n    } catch (err) {\n      alert('An error occurred while reload user profile after badge udpate.');\n    }\n  };\n\n  const toggle = modalName => setMenuModalTabletScreen(modalName);\n\n  /* useEffect functions */\n  useEffect(() => {\n    getCurretLoggedinUserEmail();\n    dispatch(fetchAllProjects());\n    dispatch(getAllUserTeams());\n    dispatch(getAllTimeOffRequests());\n    dispatch(getAllTeamCode());\n    canEditTeamCode && getAllTeamCode();\n  }, []);\n\n  useEffect(() => {\n    userProfileRef.current = userProfile;\n  });\n\n  useEffect(() => {\n    const helper = async () => {\n      try {\n        await updateProjetTouserProfile();\n      } catch (error) {}\n    };\n    helper();\n  }, [projects]);\n\n  useEffect(() => {\n    setShowLoading(true);\n    loadUserProfile();\n    loadUserTasks();\n  }, [props?.match?.params?.userId]);\n\n  useEffect(() => {\n    if (userProfile?.firstName || userProfile?.lastName) {\n      document.title = `${userProfile.firstName ?? ''} ${userProfile.lastName ?? ''}`.trim();\n    } else {\n      document.title = 'User';\n    }\n  }, [userProfile]);\n\n  useEffect(() => {\n    if (!shouldRefresh) return;\n    setShouldRefresh(false);\n    loadUserProfile();\n  }, [shouldRefresh]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth >= 1025) {\n        setMenuModalTabletScreen('');\n      }\n    };\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const toggleTab = tab => {\n    if (activeTab !== tab) setActiveTab(tab);\n  };\n\n  const updateLink = (personalLinksUpdate, adminLinksUpdate, mediaUrlUpdate) => {\n    setShowModal(false);\n    setUserProfile(prevState => {\n      const updatedProfile = prevState;\n      updatedProfile.adminLinks = adminLinksUpdate || updatedProfile.adminLinks;\n      updatedProfile.mediaUrl =\n        mediaUrlUpdate !== undefined ? mediaUrlUpdate : updatedProfile.mediaUrl;\n      updatedProfile.personalLinks = personalLinksUpdate || updatedProfile.personalLinks;\n      return updatedProfile;\n    });\n  };\n\n  const setActiveInactive = async isActive => {\n    let endDate;\n\n    if (!isActive) {\n      endDate = await dispatch(\n        getTimeEndDateEntriesByPeriod(\n          userProfile._id,\n          userProfile.createdDate,\n          moment().format('YYYY-MM-DDTHH:mm:ss'),\n        ),\n      );\n      if (endDate == 'N/A') {\n        endDate = userProfile.createdDate;\n      }\n      endDate = moment(endDate).format('YYYY-MM-DDTHH:mm:ss');\n    }\n    const newUserProfile = {\n      ...userProfile,\n      isActive,\n      endDate: endDate || undefined,\n    };\n\n    try {\n      await props.updateUserStatus(\n        newUserProfile,\n        isActive ? UserStatus.Active : UserStatus.InActive,\n        undefined,\n      );\n      setUserProfile(newUserProfile);\n      setOriginalUserProfile(newUserProfile);\n      window.location.reload();\n    } catch (error) {\n      console.error('Failed to update user status:', error);\n    }\n    setActiveInactivePopupOpen(false);\n  };\n\n  const activeInactivePopupClose = () => {\n    setActiveInactivePopupOpen(false);\n  };\n  const handleReportClick = (event, to) => {\n    if (event.metaKey || event.ctrlKey || event.button === 1) {\n      return;\n    }\n\n    event.preventDefault(); // prevent full reload\n    history.push(`/peoplereport/${to}`);\n  };\n\n  const handleRehireableChange = () => {\n    const newRehireableStatus = !isRehireable;\n    setPendingRehireableStatus(newRehireableStatus);\n    setShowConfirmDialog(true);\n  };\n\n  const handleConfirmChange = async () => {\n    setShowConfirmDialog(false);\n    const updatedUserProfile = {\n      ...userProfile,\n      isRehireable: pendingRehireableStatus,\n    };\n    try {\n      await dispatch(updateRehireableStatus(updatedUserProfile, pendingRehireableStatus));\n      setIsRehireable(pendingRehireableStatus);\n      setUserProfile(updatedUserProfile);\n      setOriginalUserProfile(updatedUserProfile);\n    } catch (error) {\n      toast.error('Unable change rehireable status');\n    }\n  };\n\n  const handleCancelChange = () => {\n    setShowConfirmDialog(false);\n  };\n\n  /**\n   *\n   * UserProfile.jsx and its subsomponents are being refactored to avoid the use of this monolithic function.\n   * Please pass userProfile and setUserProfile as props to subcomponents and modify state that way.\n   * This function is being kept here until the refactoring is complete.\n   */\n  const handleUserProfile = event => {\n    switch (event.target.id) {\n      case 'emailPubliclyAccessible':\n        setUserProfile({\n          ...userProfile,\n          privacySettings: {\n            ...userProfile.privacySettings,\n            email: !userProfile.privacySettings?.email,\n          },\n        });\n        break;\n      case 'emailSubscriptionConfig':\n        setUserProfile({\n          ...userProfile,\n          emailSubscriptions: !userProfile.emailSubscriptions,\n        });\n        break;\n      case 'phonePubliclyAccessible':\n        setUserProfile({\n          ...userProfile,\n          privacySettings: {\n            ...userProfile.privacySettings,\n            phoneNumber: !userProfile.privacySettings?.phoneNumber,\n          },\n        });\n        break;\n      case 'blueSquaresPubliclyAccessible':\n        setUserProfile({\n          ...userProfile,\n          privacySettings: {\n            ...userProfile.privacySettings,\n            blueSquares: !userProfile.privacySettings?.blueSquares,\n          },\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onUserVisibilitySwitch = () => {\n    setShowToggleVisibilityModal(true);\n  };\n\n  const handleVisibilityChange = () => {\n    setShowToggleVisibilityModal(false);\n    const visibility = !userProfile.isVisible;\n    const newUserProfile = {\n      ...userProfile,\n      isVisible: visibility,\n    };\n    toggleVisibility(newUserProfile, visibility);\n    setUserProfile(newUserProfile);\n    setOriginalUserProfile(newUserProfile);\n  };\n\n  const handleCloseConfirmVisibilityModal = () => {\n    setShowToggleVisibilityModal(false);\n  };\n\n  if ((showLoading && !props.isAddNewUser) || userProfile === undefined) {\n    return (\n      <Container fluid className={darkMode ? 'bg-oxford-blue' : ''}>\n        <Row className=\"text-center\" data-test=\"loading\">\n          <SkeletonLoading template=\"UserProfile\" />\n        </Row>\n      </Container>\n    );\n  }\n\n  const { firstName, lastName, profilePic, jobTitle = '' } = userProfile;\n  const { userId: targetUserId } = props.match ? props.match.params : { userId: undefined };\n\n  /**  Login User's email */\n  const authEmail = props.auth?.user?.email;\n  const isUserSelf = targetUserId === requestorId;\n\n  const canChangeUserStatus = props.hasPermission('changeUserStatus');\n  const canAddDeleteEditOwners = props.hasPermission('addDeleteEditOwners');\n  const canPutUserProfile = props.hasPermission('putUserProfile');\n  const canUpdatePassword = props.hasPermission('updatePassword');\n  const canGetProjectMembers = props.hasPermission('getProjectMembers');\n  const canChangeRehireableStatus = props.hasPermission('changeUserRehireableStatus');\n  const canUpdateSummaryRequirements = props.hasPermission('updateSummaryRequirements');\n  const canManageAdminLinks = props.hasPermission('manageAdminLinks');\n  const canSeeQSC = props.hasPermission('seeQSC');\n  const canEditVisibility = props.hasPermission('toggleInvisibility');\n  const canSeeReports = props.hasPermission('getReports');\n  const { role: userRole } = userProfile;\n  const canResetPassword =\n    props.hasPermission('resetPassword') && !(userRole === 'Administrator' || userRole === 'Owner');\n  const targetIsDevAdminUneditable = cantUpdateDevAdminDetails(userProfile.email, authEmail);\n\n  const canEditUserProfile = targetIsDevAdminUneditable\n    ? false\n    : userProfile.role === 'Owner' || userProfile.role === 'Administrator'\n    ? canAddDeleteEditOwners\n    : canPutUserProfile;\n\n  const canEdit = canEditUserProfile || isUserSelf;\n\n  const customStyles = {\n    control: (base, state) => ({\n      ...base,\n      border: state.isFocused ? '2px solid #333' : '2px solid #ccc',\n      boxShadow: 'none',\n      '&:hover': {\n        border: state.isFocused ? '2px solid #333' : '2px solid #ccc',\n      },\n    }),\n    dropdownIndicator: base => ({\n      ...base,\n      color: '#333',\n    }),\n    menu: base => ({\n      ...base,\n      zIndex: 9999,\n    }),\n  };\n\n  const handleStartDate = async startDate => {\n    setUserStartDate(startDate);\n    // Update userProfile.startDate and set manual modification flag\n    setUserProfile(prev => ({\n      ...prev,\n      startDate: startDate,\n      isStartDateManuallyModified: true,\n    }));\n  };\n\n  const handleEndDate = async endDate => {\n    setUserEndDate(endDate);\n  };\n\n  return (\n    <div className={darkMode ? 'bg-oxford-blue' : ''} style={{ minHeight: '100%' }}>\n      <ActiveInactiveConfirmationPopup\n        isActive={userProfile.isActive}\n        fullName={`${userProfile.firstName} ${userProfile.lastName}`}\n        open={activeInactivePopupOpen}\n        setActiveInactive={setActiveInactive}\n        onClose={activeInactivePopupClose}\n      />\n      {showModal && (\n        <UserProfileModal\n          isOpen={showModal}\n          closeModal={() => setShowModal(false)}\n          modalMessage={modalMessage}\n          modalTitle={modalTitle}\n          type={type}\n          updateLink={updateLink}\n          modifyBlueSquares={modifyBlueSquares}\n          userProfile={userProfile}\n          id={id}\n          handleLinkModel={props.handleLinkModel}\n          role={requestorRole}\n        />\n      )}\n      <Modal isOpen={showToggleVisibilityModal} toggle={handleCloseConfirmVisibilityModal}>\n        <ModalHeader toggle={handleCloseConfirmVisibilityModal}>\n          Confirm Visibility Change\n        </ModalHeader>\n        <ModalBody>\n          {`Are you sure you want to change the user visibility to ${\n            userProfile.isVisible ? 'Invisible' : 'Visible'\n          }?`}\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={handleVisibilityChange}>\n            Confirm\n          </Button>{' '}\n          <Button color=\"secondary\" onClick={handleCloseConfirmVisibilityModal}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </Modal>\n      <TabToolTips />\n      <BasicToolTips />\n\n      <AccessManagementModal\n        isOpen={showAccessManagementModal}\n        onClose={() => setShowAccessManagementModal(false)}\n        userProfile={userProfile}\n        darkMode={darkMode}\n      />\n\n      <Container\n        className={`py-5 ${darkMode ? 'bg-yinmn-blue text-light border-0' : ''}`}\n        id=\"containerProfile\"\n      >\n        {/* <div className='containerProfile' > */}\n\n        <div className=\"left-top\">\n          <div className=\"profile-img\">\n            <Image\n              src={profilePic && profilePic.trim().length > 0 ? profilePic : '/pfp-default.png'}\n              alt=\"Profile Picture\"\n              roundedCircle\n              className=\"profilePicture bg-white\"\n              // this line below should fix the image formatting issue\n              style={profilePic ? {} : { width: '240px', height: '240px' }}\n            />\n            {canEdit ? (\n              <div\n                className=\"image-button file btn btn-lg btn-primary\"\n                style={darkMode ? boxStyleDark : boxStyle}\n              >\n                Change Photo\n                <Input\n                  style={{ width: '100%', height: '100%', zIndex: '2', cursor: 'pointer' }}\n                  type=\"file\"\n                  name=\"newProfilePic\"\n                  id=\"newProfilePic\"\n                  onChange={handleImageUpload}\n                  accept=\"image/png,image/jpeg, image/jpg\"\n                />\n              </div>\n            ) : null}\n          </div>\n          <div\n            style={{ display: 'flex', justifyContent: 'center', gap: '10px', marginTop: '20px' }}\n          >\n            {userProfile?.profilePic !== undefined ? (\n              <Button color=\"danger\" onClick={toggleRemoveModal} className=\"remove-button\">\n                Remove Image\n              </Button>\n            ) : (\n              <></>\n            )}\n            {/*\n              {((userProfile?.profilePic==undefined ||\n                userProfile?.profilePic==null ||\n                userProfile?.profilePic==\"\")&&\n                (userProfile?.suggestedProfilePics!==undefined &&\n                  userProfile?.suggestedProfilePics!==null &&\n                  userProfile?.suggestedProfilePics.length!==0\n                ))?\n                <Button color=\"primary\" onClick={toggleModal}>Suggested Profile Image</Button>\n                :null} */}\n          </div>\n\n          {/* {userProfile!==undefined && userProfile.suggestedProfilePics!==undefined?<ProfileImageModal isOpen={isModalOpen} toggleModal={toggleModal} userProfile={userProfile}/>:<></>} */}\n          <ConfirmRemoveModal\n            isOpen={isRemoveModalOpen}\n            toggleModal={toggleRemoveModal}\n            confirmRemove={confirmRemoveImage}\n          />\n\n          <QuickSetupModal\n            setSaved={setSaved}\n            handleSubmit={handleSubmit}\n            setUserProfile={setUserProfile}\n            userProfile={userProfile}\n            userTeams={teams || []}\n            teamsData={props?.allTeams?.allTeamsData || []}\n            projectsData={props?.allProjects?.projects || []}\n            titleOnSet={titleOnSet}\n            setTitleOnSet={setTitleOnSet}\n            updateUserProfile={props.updateUserProfile}\n            fetchTeamCodeAllUsers={fetchTeamCodeAllUsers}\n          />\n        </div>\n\n        <div className=\"right-column\">\n          {/* }\n            {!isProfileEqual ||\n              !isTasksEqual ||\n              !isProjectsEqual ? (\n              <Alert color=\"warning\">\n                Please click on &quot;Save changes&quot; to save the changes you have made.{' '}\n              </Alert>\n            ) : null}\n             */}\n          {!codeValid ? (\n            <Alert color=\"danger\">\n              NOT SAVED! The code must be between 5 and 7 characters long\n            </Alert>\n          ) : null}\n          <div className=\"profile-head\">\n            <h5 className={`mr-2 ${darkMode ? 'text-light' : ''}`}>{`${firstName} ${lastName}`}</h5>\n            <div style={{ marginTop: '6px' }}>\n              <EditableInfoModal\n                areaName=\"UserProfileInfoModal\"\n                areaTitle=\"User Profile\"\n                fontSize={24}\n                isPermissionPage\n                role={requestorRole} // Pass the 'role' prop to EditableInfoModal\n                darkMode={darkMode}\n              />\n            </div>\n            <span className=\"mr-2\">\n              <ActiveCell\n                isActive={userProfile.isActive}\n                user={userProfile}\n                canChange={canChangeUserStatus}\n                onClick={() => {\n                  if (cantDeactivateOwner(userProfile, requestorRole)) {\n                    // Owner user cannot be deactivated by another user that is not an Owner.\n                    alert('You are not authorized to deactivate an owner.');\n                    return;\n                  }\n                  setActiveInactivePopupOpen(true);\n                }}\n              />\n            </span>\n            {canEdit && (\n              <span className=\"mr-2\">\n                <i\n                  data-toggle=\"tooltip\"\n                  className=\"fa fa-clock-o\"\n                  aria-hidden=\"true\"\n                  style={{ fontSize: 24, cursor: 'pointer', marginTop: '6px' }}\n                  title=\"Click to see user's timelog\"\n                  onClick={e => {\n                    if (e.metaKey || e.ctrlKey) {\n                      window.open(`/timelog/${targetUserId}`, '_blank');\n                    } else {\n                      e.preventDefault();\n                      props.history.push(`/timelog/${targetUserId}`);\n                      setActiveInactivePopupOpen(true);\n                    }\n                  }}\n                />\n              </span>\n            )}\n            {canSeeReports && (\n              <span className=\"mr-2\">\n                <Link\n                  className=\"team-member-tasks-user-report-link\"\n                  style={{ fontSize: 24, cursor: 'pointer', marginTop: '6px' }}\n                  to={`/peoplereport/${userProfile._id}`}\n                  onClick={event => handleReportClick(event, userProfile._id)}\n                >\n                  <img\n                    src=\"/report_icon.png\"\n                    alt=\"reportsicon\"\n                    className=\"team-member-tasks-user-report-link-image\"\n                  />\n                </Link>\n              </span>\n            )}\n            {(requestorRole === 'Owner' || requestorRole === 'Administrator') && (\n              <span className=\"mr-2\">\n                <Button\n                  color=\"link\"\n                  style={{ padding: '0', border: 'none', background: 'none' }}\n                  size=\"sm\"\n                  onClick={() => setShowAccessManagementModal(true)}\n                  title={'Click to add user access to GitHub, Dropbox, Slack, and Sentry.'}\n                >\n                  <img\n                    src=\"/HGN_Add_Access.png\"\n                    alt=\"Add Access\"\n                    style={{ width: '20px', height: '20px' }}\n                  />\n                </Button>\n              </span>\n            )}\n            {canChangeRehireableStatus && (\n              <span className=\"mr-2\">\n                <i\n                  className={isRehireable ? 'fa fa-check-square-o' : 'fa fa-square-o'}\n                  aria-hidden=\"true\"\n                  style={{ fontSize: 24, cursor: 'pointer', marginTop: '6px' }}\n                  title=\"Click to change rehirable status\"\n                  onClick={handleRehireableChange}\n                />\n              </span>\n            )}\n            <Button\n              onClick={() => {\n                setShowSelect(!showSelect);\n                setSummarySelected(null);\n                setSummaryName(null);\n                // Only fetch summaries data when the user is showing them and they haven't been loaded yet\n                // additional optimization, we can just not load all summaries at once and load only slected team member summary within TeamWeeklySummaries component\n                if (!showSelect && summaries === undefined) {\n                  getTeamMembersWeeklySummary();\n                }\n              }}\n              color=\"primary\"\n              size=\"sm\"\n              style={darkMode ? boxStyleDark : boxStyle}\n            >\n              {showSelect ? 'Hide Team Weekly Summaries' : 'Show Team Weekly Summaries'}\n            </Button>\n            {(canGetProjectMembers && teams.length !== 0) ||\n            ['Owner', 'Administrator', 'Manager'].includes(requestorRole) ? (\n              <Button\n                onClick={() => {\n                  navigator.clipboard.writeText(summaryIntro);\n                  toast.success('Summary Intro Copied!');\n                }}\n                color=\"primary\"\n                size=\"sm\"\n                title=\"Generates the summary intro for your team and copies it to your clipboard for easy use.\"\n                style={darkMode ? boxStyleDark : boxStyle}\n              >\n                Generate Summary Intro\n              </Button>\n            ) : (\n              ''\n            )}\n          </div>\n          <h6 className={darkMode ? 'text-light' : 'text-azure'}>{jobTitle}</h6>\n          <p\n            className={`proile-rating ${darkMode ? 'text-light' : ''}`}\n            style={{ textAlign: 'left' }}\n          >\n            {/* use converted date without tz otherwise the record's will updated with timezoned ts for start date.  */}\n            From:{' '}\n            <span className={darkMode ? 'text-light' : ''}>\n              {formatDateLocal(userProfile.startDate)}\n            </span>\n            {'   '}\n            To:{' '}\n            <span className={darkMode ? 'text-light' : ''}>\n              {userProfile.endDate ? formatDateLocal(userProfile.endDate) : 'N/A'}\n            </span>\n          </p>\n          {showSelect ? (\n            <div>\n              <Select\n                className={darkMode ? 'bg-darkmode-liblack text-azure' : ''}\n                options={summaries}\n                styles={customStyles}\n                isLoading={loadingSummaries}\n                onChange={e => {\n                  setSummaryName(e.value[0]);\n                  getWeeklySummary(e.value[1]);\n                }}\n              />\n            </div>\n          ) : (\n            <div />\n          )}\n          {summarySelected &&\n            showSelect &&\n            showSummary &&\n            summarySelected.map((data, i) => {\n              return (\n                <TeamWeeklySummaries\n                  key={data._id}\n                  i={i}\n                  name={summaryName}\n                  data={data}\n                  darkMode={darkMode}\n                />\n              );\n            })}\n          <Badges\n            isUserSelf={isUserSelf}\n            userProfile={userProfile}\n            setUserProfile={setUserProfile}\n            setOriginalUserProfile={setOriginalUserProfile}\n            role={requestorRole}\n            canEdit={canEdit}\n            handleSubmit={handleBadgeSubmit}\n            isRecordBelongsToJaeAndUneditable={targetIsDevAdminUneditable}\n            darkMode={darkMode}\n          />\n\n          <div className=\"profile-functions-desktop\">\n            <div className=\"profile-tabs\">\n              <Nav tabs>\n                <NavItem>\n                  <NavLink\n                    className={classnames(\n                      { active: activeTab === '1' },\n                      'nav-link',\n                      darkMode && activeTab === '1' ? 'bg-space-cadet' : 'text-azure',\n                      darkMode ? 'text-light' : '',\n                    )}\n                    onClick={() => toggleTab('1')}\n                    id=\"nabLink-basic\"\n                  >\n                    Basic Information\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames(\n                      { active: activeTab === '2' },\n                      'nav-link',\n                      darkMode && activeTab === '2' ? 'bg-space-cadet' : 'text-azure',\n                      darkMode ? 'text-light' : '',\n                    )}\n                    onClick={() => toggleTab('2')}\n                    id=\"nabLink-time\"\n                  >\n                    Volunteering Times\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames(\n                      { active: activeTab === '3' },\n                      'nav-link',\n                      darkMode && activeTab === '3' ? 'bg-space-cadet' : 'text-azure',\n                      darkMode ? 'text-light' : '',\n                    )}\n                    onClick={() => toggleTab('3')}\n                    id=\"nabLink-teams\"\n                  >\n                    Teams\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames(\n                      { active: activeTab === '4' },\n                      'nav-link',\n                      darkMode && activeTab === '4' ? 'bg-space-cadet' : 'text-azure',\n                      darkMode ? 'text-light' : '',\n                    )}\n                    onClick={() => toggleTab('4')}\n                    id=\"nabLink-projects\"\n                  >\n                    Projects\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink\n                    className={classnames(\n                      { active: activeTab === '5' },\n                      'nav-link',\n                      darkMode && activeTab === '5' ? 'bg-space-cadet' : 'text-azure',\n                      darkMode ? 'text-light' : '',\n                    )}\n                    onClick={e => {\n                      e.preventDefault();\n                      toggleTab('5');\n                    }}\n                    data-testid=\"edit-history-tab\"\n                  >\n                    Edit History\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </div>\n            <TabContent\n              activeTab={activeTab}\n              className={`tab-content profile-tab ${darkMode ? 'bg-yinmn-blue' : ''}`}\n              id=\"myTabContent\"\n              style={{ border: 0 }}\n            >\n              <TabPane tabId=\"1\">\n                <BasicInformationTab\n                  role={requestorRole}\n                  userProfile={userProfile}\n                  setUserProfile={setUserProfile}\n                  loadUserProfile={loadUserProfile}\n                  handleUserProfile={handleUserProfile}\n                  formValid={formValid}\n                  setFormValid={setFormValid}\n                  isUserSelf={isUserSelf}\n                  canEdit={canEdit}\n                  canEditRole={canEditUserProfile}\n                  roles={roles}\n                  darkMode={darkMode}\n                />\n              </TabPane>\n              <TabPane tabId=\"2\">\n                <VolunteeringTimeTab\n                  userProfile={userProfile}\n                  setUserProfile={setUserProfile}\n                  isUserSelf={isUserSelf}\n                  role={requestorRole}\n                  onEndDate={handleEndDate}\n                  loadUserProfile={loadUserProfile}\n                  canEdit={canEditUserProfile}\n                  canUpdateSummaryRequirements={canUpdateSummaryRequirements}\n                  onStartDate={handleStartDate}\n                  calculatedStartDate={calculatedStartDate}\n                  darkMode={darkMode}\n                />\n              </TabPane>\n              <TabPane tabId=\"3\">\n                <TeamsTabTips />\n                <TeamsTab\n                  userTeams={teams || []}\n                  teamsData={props?.allTeams?.allTeamsData || []}\n                  onAssignTeam={onAssignTeam}\n                  onDeleteTeam={onDeleteTeam}\n                  edit={canEdit && !targetIsDevAdminUneditable}\n                  role={requestorRole}\n                  onUserVisibilitySwitch={onUserVisibilitySwitch}\n                  isVisible={userProfile.isVisible}\n                  canEditVisibility={canEditVisibility}\n                  handleSubmit={handleSubmit}\n                  disabled={\n                    !formValid.firstName ||\n                    !formValid.lastName ||\n                    !formValid.email ||\n                    !(isProfileEqual && isTasksEqual && isProjectsEqual)\n                  }\n                  canEditTeamCode={canEditTeamCode}\n                  setUserProfile={setUserProfile}\n                  userProfile={userProfile}\n                  codeValid={codeValid}\n                  setCodeValid={setCodeValid}\n                  saved={saved}\n                  inputAutoComplete={inputAutoComplete}\n                  inputAutoStatus={inputAutoStatus}\n                  isLoading={isLoading}\n                  fetchTeamCodeAllUsers={() => fetchTeamCodeAllUsers()}\n                  darkMode={darkMode}\n                />\n              </TabPane>\n              <TabPane tabId=\"4\">\n                <ProjectsTab\n                  userProjects={userProfile.projects || []}\n                  userTasks={tasks}\n                  projectsData={props?.allProjects?.projects || []}\n                  onAssignProject={onAssignProject}\n                  onDeleteProject={onDeleteProject}\n                  edit={canEdit}\n                  role={requestorRole}\n                  userId={props.match.params.userId}\n                  updateTask={onUpdateTask}\n                  handleSubmit={handleSubmit}\n                  disabled={\n                    !formValid.firstName ||\n                    !formValid.lastName ||\n                    !formValid.email ||\n                    !(isProfileEqual && isTasksEqual && isProjectsEqual)\n                  }\n                  darkMode={darkMode}\n                />\n              </TabPane>\n              <TabPane tabId=\"5\">\n                <TimeEntryEditHistory\n                  userProfile={userProfile}\n                  setUserProfile={setUserProfile}\n                  role={requestorRole}\n                  isRecordBelongsToJaeAndUneditable={targetIsDevAdminUneditable}\n                  darkMode={darkMode}\n                />\n              </TabPane>\n            </TabContent>\n            <div className=\"profileEditButtonContainer\">\n              {canResetPassword && (\n                <ResetPasswordButton\n                  className=\"mr-1 btn-bottom\"\n                  user={userProfile}\n                  authEmail={authEmail}\n                  canUpdatePassword\n                />\n              )}\n              {isUserSelf && (activeTab === '1' || canPutUserProfile) && (\n                <Link\n                  to={targetIsDevAdminUneditable ? `#` : `/updatepassword/${userProfile._id}`}\n                  onClick={() => {\n                    if (targetIsDevAdminUneditable) {\n                      alert(\n                        'STOP! YOU SHOULDN’T BE TRYING TO CHANGE THIS PASSWORD. ' +\n                          'You shouldn’t even be using this account except to create your own accounts to use. ' +\n                          'Please re-read the Local Setup Doc to understand why and what you should be doing instead of what you are trying to do now.',\n                      );\n                      return `#`;\n                    }\n                  }}\n                >\n                  <Button\n                    className=\"mr-1 btn-bottom\"\n                    color=\"primary\"\n                    style={darkMode ? boxStyleDark : boxStyle}\n                  >\n                    {' '}\n                    Update Password\n                  </Button>\n                </Link>\n              )}\n              {((canEdit && activeTab) || canEditTeamCode) && (\n                <>\n                  <SaveButton\n                    className=\"mr-1 btn-bottom\"\n                    handleSubmit={async () => await handleSubmit()}\n                    disabled={\n                      !formValid.firstName ||\n                      !formValid.lastName ||\n                      !formValid.email ||\n                      !codeValid ||\n                      (userStartDate > userEndDate && userEndDate !== '') ||\n                      // titleOnSet ||\n                      (isProfileEqual && isTasksEqual && isProjectsEqual)\n                    }\n                    userProfile={userProfile}\n                    setSaved={() => setSaved(true)}\n                    darkMode={darkMode}\n                  />\n                  {activeTab !== '3' && (\n                    <span\n                      onClick={() => {\n                        setUserProfile(originalUserProfile);\n                        setTasks(originalTasks);\n                        setProjects(resetProjects);\n                      }}\n                      className={`btn mr-1 btn-bottom ${\n                        darkMode ? 'btn-danger' : 'btn-outline-danger '\n                      }`}\n                      style={darkMode ? boxStyleDark : boxStyle}\n                    >\n                      Cancel\n                    </span>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n          <div className=\"profile-functions-tablet\">\n            <List className=\"profile-functions-list\">\n              <Button\n                className=\"list-button\"\n                onClick={() => toggle('Basic Information')}\n                color=\"primary\"\n                style={darkMode ? boxStyleDark : boxStyle}\n              >\n                Basic Information\n              </Button>\n              <Modal\n                isOpen={showConfirmDialog}\n                toggle={handleCancelChange}\n                className={darkMode ? 'text-light dark-mode' : ''}\n              >\n                <ModalHeader\n                  toggle={handleCancelChange}\n                  className={darkMode ? 'bg-space-cadet' : ''}\n                >\n                  Confirm Status Change\n                </ModalHeader>\n                <ModalBody className={darkMode ? 'bg-yinmn-blue' : ''}>\n                  {`Are you sure you want to change the user status to ${\n                    pendingRehireableStatus ? 'Rehireable' : 'Unrehireable'\n                  }?`}\n                </ModalBody>\n                <ModalFooter className={darkMode ? 'bg-yinmn-blue' : ''}>\n                  <Button color=\"primary\" onClick={handleConfirmChange}>\n                    Confirm\n                  </Button>{' '}\n                  <Button color=\"secondary\" onClick={handleCancelChange}>\n                    Cancel\n                  </Button>\n                </ModalFooter>\n              </Modal>\n              <Modal\n                isOpen={menuModalTabletScreen === 'Basic Information'}\n                toggle={toggle}\n                className={darkMode ? 'text-light dark-mode' : ''}\n              >\n                <ModalHeader toggle={toggle} className={darkMode ? 'bg-space-cadet' : ''}>\n                  Basic Information\n                </ModalHeader>\n                <ModalBody className={darkMode ? 'bg-yinmn-blue' : ''}>\n                  <BasicInformationTab\n                    role={requestorRole}\n                    userProfile={userProfile}\n                    setUserProfile={setUserProfile}\n                    loadUserProfile={loadUserProfile}\n                    handleUserProfile={handleUserProfile}\n                    formValid={formValid}\n                    setFormValid={setFormValid}\n                    isUserSelf={isUserSelf}\n                    canEdit={canEdit}\n                    canEditRole={canEditUserProfile}\n                    roles={roles}\n                    darkMode={darkMode}\n                  />\n                </ModalBody>\n                <ModalFooter className={darkMode ? 'bg-yinmn-blue' : ''}>\n                  <Row>\n                    <div className=\"profileEditButtonContainer\">\n                      {canResetPassword && (\n                        <ResetPasswordButton\n                          className=\"mr-1 btn-bottom\"\n                          user={userProfile}\n                          authEmail={authEmail}\n                          canUpdatePassword\n                        />\n                      )}\n                      {isUserSelf && (activeTab == '1' || canPutUserProfile) && (\n                        <Link\n                          to={\n                            targetIsDevAdminUneditable ? `#` : `/updatepassword/${userProfile._id}`\n                          }\n                          onClick={() => {\n                            if (targetIsDevAdminUneditable) {\n                              alert(\n                                'STOP! YOU SHOULDN’T BE TRYING TO CHANGE THIS PASSWORD. ' +\n                                  'You shouldn’t even be using this account except to create your own accounts to use. ' +\n                                  'Please re-read the Local Setup Doc to understand why and what you should be doing instead of what you are trying to do now.',\n                              );\n                              return `#`;\n                            }\n                          }}\n                        >\n                          <Button\n                            className=\"mr-1 btn-bottom\"\n                            color=\"primary\"\n                            style={darkMode ? boxStyleDark : boxStyle}\n                          >\n                            {' '}\n                            Update Password\n                          </Button>\n                        </Link>\n                      )}\n                      {canEdit && (activeTab == '1' || canPutUserProfile) && (\n                        <>\n                          <SaveButton\n                            className=\"mr-1 btn-bottom\"\n                            handleSubmit={async () => await handleSubmit()}\n                            disabled={\n                              !formValid.firstName ||\n                              !formValid.lastName ||\n                              !formValid.email ||\n                              !codeValid ||\n                              // titleOnSet ||\n                              (isProfileEqual && isTasksEqual && isProjectsEqual)\n                            }\n                            userProfile={userProfile}\n                            setSaved={() => setSaved(true)}\n                            darkMode={darkMode}\n                          />\n                          <span\n                            onClick={() => {\n                              setUserProfile(originalUserProfile);\n                              setTasks(originalTasks);\n                              setProjects(resetProjects);\n                            }}\n                            className={`btn mr-1 btn-bottom ${\n                              darkMode ? 'btn-danger' : 'btn-outline-danger '\n                            }`}\n                            style={darkMode ? boxStyleDark : boxStyle}\n                          >\n                            X\n                          </span>\n                        </>\n                      )}\n                      <Button\n                        {...(darkMode ? { outline: false } : { outline: true })}\n                        onClick={() => loadUserProfile()}\n                        style={darkMode ? boxStyleDark : boxStyle}\n                      >\n                        <i\n                          className={`fa fa-refresh ${darkMode ? 'text-light' : ''}`}\n                          aria-hidden=\"true\"\n                        />\n                      </Button>\n                    </div>\n                  </Row>\n                </ModalFooter>\n              </Modal>\n              <Button\n                className=\"list-button\"\n                onClick={() => toggle('Volunteering Times')}\n                color=\"secondary\"\n                style={darkMode ? boxStyleDark : boxStyle}\n              >\n                Volunteering Times\n              </Button>\n              <Modal\n                isOpen={menuModalTabletScreen === 'Volunteering Times'}\n                toggle={toggle}\n                className={darkMode ? 'text-light dark-mode' : ''}\n              >\n                <ModalHeader toggle={toggle} className={darkMode ? 'bg-space-cadet' : ''}>\n                  Volunteering Times\n                </ModalHeader>\n                <ModalBody className={darkMode ? 'bg-yinmn-blue' : ''}>\n                  <VolunteeringTimeTab\n                    userProfile={userProfile}\n                    setUserProfile={setUserProfile}\n                    isUserSelf={isUserSelf}\n                    role={requestorRole}\n                    onEndDate={handleEndDate}\n                    canEdit={canEditUserProfile}\n                    canUpdateSummaryRequirements={canUpdateSummaryRequirements}\n                    onStartDate={handleStartDate}\n                    calculatedStartDate={calculatedStartDate}\n                    darkMode={darkMode}\n                  />\n                </ModalBody>\n                <ModalFooter className={darkMode ? 'bg-yinmn-blue' : ''}>\n                  <Row>\n                    <div className=\"profileEditButtonContainer\">\n                      {canEdit && (activeTab == '1' || canPutUserProfile) && (\n                        <>\n                          <SaveButton\n                            className=\"mr-1 btn-bottom\"\n                            handleSubmit={async () => await handleSubmit()}\n                            disabled={\n                              !formValid.firstName ||\n                              !formValid.lastName ||\n                              !formValid.email ||\n                              !codeValid ||\n                              // titleOnSet ||\n                              (isProfileEqual && isTasksEqual && isProjectsEqual)\n                            }\n                            userProfile={userProfile}\n                            setSaved={() => setSaved(true)}\n                            darkMode={darkMode}\n                          />\n                          <span\n                            onClick={() => {\n                              setUserProfile(originalUserProfile);\n                              setTasks(originalTasks);\n                              setProjects(resetProjects);\n                            }}\n                            className={`btn mr-1 btn-bottom ${\n                              darkMode ? 'btn-danger' : 'btn-outline-danger '\n                            }`}\n                            style={darkMode ? boxStyleDark : boxStyle}\n                          >\n                            X\n                          </span>\n                        </>\n                      )}\n                      <Button\n                        {...(darkMode ? { outline: false } : { outline: true })}\n                        onClick={() => loadUserProfile()}\n                        style={darkMode ? boxStyleDark : boxStyle}\n                      >\n                        <i\n                          className={`fa fa-refresh ${darkMode ? 'text-light' : ''}`}\n                          aria-hidden=\"true\"\n                        />\n                      </Button>\n                    </div>\n                  </Row>\n                </ModalFooter>\n              </Modal>\n              <Button\n                className=\"list-button\"\n                onClick={() => toggle('Teams')}\n                color=\"secondary\"\n                style={darkMode ? boxStyleDark : boxStyle}\n              >\n                Teams\n              </Button>\n              <Modal\n                isOpen={menuModalTabletScreen === 'Teams'}\n                toggle={toggle}\n                className={darkMode ? 'text-light dark-mode' : ''}\n              >\n                <ModalHeader toggle={toggle} className={darkMode ? 'bg-space-cadet' : ''}>\n                  Teams\n                </ModalHeader>\n                <ModalBody className={darkMode ? 'bg-yinmn-blue text-light' : ''}>\n                  <TeamsTabTips />\n                  <TeamsTab\n                    userTeams={userProfile?.teams || []}\n                    teamsData={props?.allTeams?.allTeamsData || []}\n                    onAssignTeam={onAssignTeam}\n                    onDeleteTeam={onDeleteTeam}\n                    edit={canEdit}\n                    role={requestorRole}\n                    onUserVisibilitySwitch={onUserVisibilitySwitch}\n                    isVisible={userProfile.isVisible}\n                    canEditVisibility={canEditVisibility}\n                    handleSubmit={handleSubmit}\n                    disabled={\n                      !formValid.firstName ||\n                      !formValid.lastName ||\n                      !formValid.email ||\n                      !(isProfileEqual && isTasksEqual && isProjectsEqual)\n                    }\n                    canEditTeamCode={canEditTeamCode}\n                    setUserProfile={setUserProfile}\n                    userProfile={userProfile}\n                    codeValid={codeValid}\n                    setCodeValid={setCodeValid}\n                    darkMode={darkMode}\n                    inputAutoComplete={inputAutoComplete}\n                    inputAutoStatus={inputAutoStatus}\n                    isLoading={isLoading}\n                    fetchTeamCodeAllUsers={() => fetchTeamCodeAllUsers()}\n                  />\n                </ModalBody>\n                <ModalFooter className={darkMode ? 'bg-yinmn-blue' : ''}>\n                  <Row>\n                    <div className=\"profileEditButtonContainer\">\n                      {canEdit && (activeTab == '1' || canPutUserProfile) && (\n                        <>\n                          <SaveButton\n                            className=\"mr-1 btn-bottom\"\n                            handleSubmit={async () => await handleSubmit()}\n                            disabled={\n                              !formValid.firstName ||\n                              !formValid.lastName ||\n                              !formValid.email ||\n                              !codeValid ||\n                              // titleOnSet ||\n                              (isProfileEqual && isTasksEqual && isProjectsEqual)\n                            }\n                            userProfile={userProfile}\n                            setSaved={() => setSaved(true)}\n                            darkMode={darkMode}\n                          />\n                          <span\n                            onClick={() => {\n                              setUserProfile(originalUserProfile);\n                              setTasks(originalTasks);\n                              setProjects(resetProjects);\n                            }}\n                            className={`btn mr-1 btn-bottom ${\n                              darkMode ? 'btn-danger' : 'btn-outline-danger '\n                            }`}\n                            style={darkMode ? boxStyleDark : boxStyle}\n                          >\n                            X\n                          </span>\n                        </>\n                      )}\n                      <Button\n                        {...(darkMode ? { outline: false } : { outline: true })}\n                        onClick={() => loadUserProfile()}\n                        style={darkMode ? boxStyleDark : boxStyle}\n                      >\n                        <i\n                          className={`fa fa-refresh ${darkMode ? 'text-light' : ''}`}\n                          aria-hidden=\"true\"\n                        />\n                      </Button>\n                    </div>\n                  </Row>\n                </ModalFooter>\n              </Modal>\n              <Button\n                className=\"list-button\"\n                onClick={() => toggle('Projects')}\n                color=\"secondary\"\n                style={darkMode ? boxStyleDark : boxStyle}\n              >\n                Projects\n              </Button>\n              <Modal\n                isOpen={menuModalTabletScreen === 'Projects'}\n                toggle={toggle}\n                className={darkMode ? 'text-light dark-mode' : ''}\n              >\n                <ModalHeader toggle={toggle} className={darkMode ? 'bg-space-cadet' : ''}>\n                  Projects\n                </ModalHeader>\n                <ModalBody className={darkMode ? 'bg-yinmn-blue' : ''}>\n                  <ProjectsTab\n                    userProjects={userProfile.projects || []}\n                    userTasks={tasks}\n                    projectsData={props?.allProjects?.projects || []}\n                    onAssignProject={onAssignProject}\n                    onDeleteProject={onDeleteProject}\n                    edit={canPutUserProfile}\n                    role={requestorRole}\n                    userId={props.match.params.userId}\n                    updateTask={onUpdateTask}\n                    handleSubmit={handleSubmit}\n                    disabled={\n                      !formValid.firstName ||\n                      !formValid.lastName ||\n                      !formValid.email ||\n                      !(isProfileEqual && isTasksEqual && isProjectsEqual)\n                    }\n                    darkMode={darkMode}\n                  />\n                </ModalBody>\n                <ModalFooter className={darkMode ? 'bg-yinmn-blue' : ''}>\n                  <Row>\n                    <div className=\"profileEditButtonContainer\">\n                      {canEdit && (activeTab == '1' || canPutUserProfile) && (\n                        <>\n                          <SaveButton\n                            className=\"mr-1 btn-bottom\"\n                            handleSubmit={async () => await handleSubmit()}\n                            disabled={\n                              !formValid.firstName ||\n                              !formValid.lastName ||\n                              !formValid.email ||\n                              !codeValid ||\n                              // titleOnSet ||\n                              (isProfileEqual && isTasksEqual && isProjectsEqual)\n                            }\n                            userProfile={userProfile}\n                            setSaved={() => setSaved(true)}\n                            darkMode={darkMode}\n                          />\n                          <span\n                            onClick={() => {\n                              setUserProfile(originalUserProfile);\n                              setTasks(originalTasks);\n                              setProjects(resetProjects);\n                            }}\n                            className={`btn mr-1 btn-bottom ${\n                              darkMode ? 'btn-danger' : 'btn-outline-danger '\n                            }`}\n                            style={darkMode ? boxStyleDark : boxStyle}\n                          >\n                            X\n                          </span>\n                        </>\n                      )}\n                      <Button\n                        {...(darkMode ? { outline: false } : { outline: true })}\n                        onClick={() => loadUserProfile()}\n                        style={darkMode ? boxStyleDark : boxStyle}\n                      >\n                        <i\n                          className={`fa fa-refresh ${darkMode ? 'text-light' : ''}`}\n                          aria-hidden=\"true\"\n                        />\n                      </Button>\n                    </div>\n                  </Row>\n                </ModalFooter>\n              </Modal>\n              <Button\n                className=\"list-button\"\n                onClick={() => toggle('Edit History')}\n                color=\"secondary\"\n                style={darkMode ? boxStyleDark : boxStyle}\n              >\n                Edit History\n              </Button>\n              <Modal\n                isOpen={menuModalTabletScreen === 'Edit History'}\n                toggle={toggle}\n                className={darkMode ? 'text-light dark-mode' : ''}\n              >\n                <ModalHeader toggle={toggle} className={darkMode ? 'bg-space-cadet' : ''}>\n                  Edit History\n                </ModalHeader>\n                <ModalBody className={darkMode ? 'bg-yinmn-blue' : ''}>\n                  <TimeEntryEditHistory\n                    userProfile={userProfile}\n                    setUserProfile={setUserProfile}\n                    darkMode={darkMode}\n                    tabletView\n                  />\n                </ModalBody>\n                <ModalFooter className={darkMode ? 'bg-yinmn-blue' : ''}>\n                  <Row>\n                    <div className=\"profileEditButtonContainer\">\n                      {canEdit && (activeTab == '1' || canPutUserProfile) && (\n                        <>\n                          <SaveButton\n                            className=\"mr-1 btn-bottom\"\n                            handleSubmit={async () => await handleSubmit()}\n                            disabled={\n                              !formValid.firstName ||\n                              !formValid.lastName ||\n                              !formValid.email ||\n                              !codeValid ||\n                              // titleOnSet ||\n                              (isProfileEqual && isTasksEqual && isProjectsEqual)\n                            }\n                            userProfile={userProfile}\n                            setSaved={() => setSaved(true)}\n                            darkMode={darkMode}\n                          />\n                          <span\n                            onClick={() => {\n                              setUserProfile(originalUserProfile);\n                              setTasks(originalTasks);\n                              setProjects(resetProjects);\n                            }}\n                            className={`btn mr-1 btn-bottom ${\n                              darkMode ? 'btn-danger' : 'btn-outline-danger '\n                            }`}\n                            style={darkMode ? boxStyleDark : boxStyle}\n                          >\n                            X\n                          </span>\n                        </>\n                      )}\n                      <Button\n                        {...(darkMode ? { outline: false } : { outline: true })}\n                        onClick={() => loadUserProfile()}\n                        style={darkMode ? boxStyleDark : boxStyle}\n                      >\n                        <i\n                          className={`fa fa-refresh ${darkMode ? 'text-light' : ''}`}\n                          aria-hidden=\"true\"\n                        />\n                      </Button>\n                    </div>\n                  </Row>\n                </ModalFooter>\n              </Modal>\n            </List>\n          </div>\n        </div>\n\n        <div className=\"left-bottom\">\n          <div className=\"profile-work\">\n            <UserLinkLayout\n              isUserSelf={isUserSelf}\n              userProfile={userProfile}\n              updateLink={updateLink}\n              handleLinkModel={props.handleLinkModel}\n              handleSubmit={handleSubmit}\n              role={requestorRole}\n              canEdit={canEdit || canManageAdminLinks}\n              darkMode={darkMode}\n            />\n            <BlueSquareLayout\n              userProfile={userProfile}\n              handleUserProfile={handleUserProfile}\n              handleSaveError={props.handleSaveError}\n              handleBlueSquare={handleBlueSquare}\n              user={props.auth.user}\n              isUserSelf={isUserSelf}\n              canEdit={canEdit}\n              darkMode={darkMode}\n            />\n          </div>\n        </div>\n        <div className=\"left-dummy\" />\n\n        {/* </div> */}\n      </Container>\n    </div>\n  );\n}\n\nexport default connect(null, { hasPermission, updateUserStatus, getTimeEntriesForWeek })(\n  UserProfile,\n);\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileEdit/LinkModButton.jsx","messages":[{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":22,"column":7,"nodeType":"JSXOpeningElement","endLine":34,"endColumn":8},{"ruleId":"jsx-a11y/interactive-supports-focus","severity":2,"message":"Elements with the 'button' interactive role must be tabbable.","line":22,"column":7,"nodeType":"JSXOpeningElement","endLine":34,"endColumn":8}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport EditLinkModal from '../UserProfileModal/EditLinkModal';\nimport './UserProfileEdit.scss';\n\nconst LinkModButton = props => {\n  const { updateLink, userProfile, setChanged, handleSubmit, color } = props;\n  const [modal, setModal] = useState(false);\n  const toggleModal = () => {\n    setModal(!modal);\n  };\n  return (\n    <React.Fragment>\n      <EditLinkModal\n        updateLink={updateLink}\n        isOpen={modal}\n        closeModal={toggleModal}\n        userProfile={userProfile}\n        handleSubmit={handleSubmit}\n        setChanged={setChanged}\n        role={props.role}\n      />\n      <span\n        style={{\n          textDecoration: 'underline',\n          color: color ? color : 'grey',\n          fontSize: '11pt',\n          fontWeight: 600,\n        }}\n        data-testid=\"edit-link\"\n        role=\"button\"\n        type=\"button\"\n        onClick={toggleModal}\n        href=\"#\"\n      >\n        Edit\n      </span>\n    </React.Fragment>\n  );\n};\n\nLinkModButton.propTypes = {};\n\nexport default LinkModButton;\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileEdit/SaveButton.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileEdit/ToggleSwitch/ToggleSwitch.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileEdit/ToggleSwitch/ToggleSwitchContainer.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileEdit/ToggleSwitch/TriStateToggleSwitch.jsx","messages":[{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":41,"column":9,"nodeType":"JSXOpeningElement","endLine":41,"endColumn":52},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":41,"column":9,"nodeType":"JSXOpeningElement","endLine":41,"endColumn":52},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":42,"column":9,"nodeType":"JSXOpeningElement","endLine":42,"endColumn":53},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":42,"column":9,"nodeType":"JSXOpeningElement","endLine":42,"endColumn":53},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":43,"column":9,"nodeType":"JSXOpeningElement","endLine":43,"endColumn":55},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":43,"column":9,"nodeType":"JSXOpeningElement","endLine":43,"endColumn":55}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import './TriStateToggleSwitch.css';\nimport React, { useState, useEffect } from 'react';\n\nfunction TriStateToggleSwitch({ pos, onChange }) {\n  const [position, setPosition] = useState(pos);\n  const [bgColor, setBgColor] = useState('');\n\n  const handleClick = pos => {\n    setPosition(pos);\n\n    if (onChange) {\n      onChange(pos);\n    }\n\n    if (pos === 'posted') {\n      setBgColor('blue');\n    } else if (pos === 'default') {\n      setBgColor('darkgray');\n    } else {\n      setBgColor('green');\n    }\n  };\n\n  useEffect(() => {\n    if (pos) {\n      setPosition(pos);\n    }\n\n    if (pos === 'posted') {\n      setBgColor('blue');\n    } else if (pos === 'default') {\n      setBgColor('darkgray');\n    } else {\n      setBgColor('green');\n    }\n  }, [pos]);\n\n  return (\n    <div className={`toggle-switch bg-${bgColor}`}>\n      <div className=\"knob-area\">\n        <div onClick={() => handleClick('posted')}></div>\n        <div onClick={() => handleClick('default')}></div>\n        <div onClick={() => handleClick('requested')}></div>\n      </div>\n      <div className={`knob ${position}`}></div>\n    </div>\n  );\n}\n\nexport default TriStateToggleSwitch;\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileEdit/ToggleSwitch/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileEdit/UserProfileEdit.container.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileEdit/UserProfileEdit.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileEdit/__tests__/LinkModButton.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileEdit/__tests__/SaveButton.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileEdit/__tests__/ToggleSwitch.test.jsx","messages":[{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":53,"column":23,"nodeType":"MemberExpression","messageId":"noContainer","endLine":53,"endColumn":46},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":53,"column":33,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":53,"column":33,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":161,"column":23,"nodeType":"MemberExpression","messageId":"noContainer","endLine":161,"endColumn":46},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":161,"column":33,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":161,"column":33,"nodeType":"MemberExpression","messageId":"noNodeAccess"}],"suppressedMessages":[],"errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { vi } from 'vitest';\nimport { fireEvent, render, screen } from '@testing-library/react';\nimport ToggleSwitch from '../ToggleSwitch/ToggleSwitch';\n\ndescribe('ToggleSwitch Component', () => {\n  const mockHandleUserProfile = vi.fn();\n\n  beforeEach(() => {\n    vi.clearAllMocks();\n  });\n\n  describe('bluesquares switch type', () => {\n    test('renders correctly when state is false', () => {\n      render(\n        <ToggleSwitch\n          switchType=\"bluesquares\"\n          state={false}\n          handleUserProfile={mockHandleUserProfile}\n        />,\n      );\n\n      const switchElement = screen.getByTestId('blue-switch');\n      expect(switchElement).toBeInTheDocument();\n      // state=false means the checkbox is checked\n      expect(switchElement).toBeChecked();\n    });\n\n    test('calls handleUserProfile when toggled', () => {\n      render(\n        <ToggleSwitch\n          switchType=\"bluesquares\"\n          state={true}\n          handleUserProfile={mockHandleUserProfile}\n        />,\n      );\n\n      fireEvent.click(screen.getByTestId('blue-switch'));\n      expect(mockHandleUserProfile).toHaveBeenCalledTimes(1);\n    });\n\n    test('applies custom toggleClass when provided', () => {\n      const { container } = render(\n        <ToggleSwitch\n          switchType=\"bluesquares\"\n          state={true}\n          handleUserProfile={mockHandleUserProfile}\n          toggleClass=\"custom-toggle\"\n        />,\n      );\n\n      // your component wraps the checkbox in a div.blueSqare\n      const wrapper = container.querySelector('div[class*=\"blueSqare\"]');\n      expect(wrapper).toHaveClass('custom-toggle');\n    });\n\n    test('applies dark mode styling when darkMode is true', () => {\n      render(\n        <ToggleSwitch\n          switchType=\"bluesquares\"\n          state={true}\n          handleUserProfile={mockHandleUserProfile}\n          darkMode={true}\n        />,\n      );\n\n      const switchElement = screen.getByTestId('blue-switch');\n\n      // since CSS modules hash the class, just assert the classname contains \"toggleDark\"\n      expect(switchElement.className).toContain('toggleDark');\n      expect(switchElement.className).not.toContain('toggle ');\n    });\n  });\n\n  describe('email switch type', () => {\n    test('renders correctly when state is false', () => {\n      render(\n        <ToggleSwitch switchType=\"email\" state={false} handleUserProfile={mockHandleUserProfile} />,\n      );\n\n      const switchElement = screen.getByTestId('email-switch');\n      expect(switchElement).toBeInTheDocument();\n      expect(switchElement).toBeChecked();\n    });\n\n    test('calls handleUserProfile when toggled', () => {\n      render(\n        <ToggleSwitch switchType=\"email\" state={true} handleUserProfile={mockHandleUserProfile} />,\n      );\n\n      fireEvent.click(screen.getByTestId('email-switch'));\n      expect(mockHandleUserProfile).toHaveBeenCalledTimes(1);\n    });\n  });\n\n  describe('email-subcription switch type', () => {\n    test('renders correctly when state is false', () => {\n      render(\n        <ToggleSwitch\n          switchType=\"email-subcription\"\n          state={false}\n          handleUserProfile={mockHandleUserProfile}\n        />,\n      );\n\n      const switchElement = screen.getByTestId('email-subcription-switch');\n      expect(switchElement).toBeInTheDocument();\n      expect(switchElement).toBeChecked();\n    });\n  });\n\n  describe('phone switch type', () => {\n    test('renders correctly when state is true', () => {\n      render(\n        <ToggleSwitch switchType=\"phone\" state={true} handleUserProfile={mockHandleUserProfile} />,\n      );\n\n      expect(screen.getByTestId('phone-switch')).toBeInTheDocument();\n    });\n\n    test('renders correctly when state is false', () => {\n      render(\n        <ToggleSwitch switchType=\"phone\" state={false} handleUserProfile={mockHandleUserProfile} />,\n      );\n\n      const switchElement = screen.getByTestId('phone-switch');\n      expect(switchElement).toBeInTheDocument();\n      expect(switchElement).toBeChecked();\n    });\n  });\n\n  describe('visible switch type', () => {\n    test('renders correctly when state is false', () => {\n      render(\n        <ToggleSwitch\n          switchType=\"visible\"\n          state={false}\n          handleUserProfile={mockHandleUserProfile}\n        />,\n      );\n\n      const switchElement = screen.getByTestId('visibility-switch');\n      expect(switchElement).toBeInTheDocument();\n      expect(switchElement).toBeChecked();\n    });\n  });\n\n  describe('bio switch type', () => {\n    test('passes font styling props correctly', () => {\n      const { container } = render(\n        <ToggleSwitch\n          switchType=\"bio\"\n          state=\"default\"\n          handleUserProfile={mockHandleUserProfile}\n          fontSize=\"14px\"\n          fontColor=\"red\"\n        />,\n      );\n\n      // match the CSS‐module class name for the outer section\n      const section = container.querySelector('div[class*=\"switchSection\"]');\n      expect(section).not.toBeNull();\n      expect(section).toHaveStyle({ fontSize: '14px', color: 'rgb(255, 0, 0)' });\n    });\n  });\n\n  describe('active_members switch type', () => {\n    test('renders correctly when state is false', () => {\n      render(\n        <ToggleSwitch\n          switchType=\"active_members\"\n          state={false}\n          handleUserProfile={mockHandleUserProfile}\n        />,\n      );\n\n      const switchElement = screen.getByTestId('active-switch');\n      expect(switchElement).toBeInTheDocument();\n      expect(switchElement).toBeChecked();\n    });\n  });\n\n  test('renders error message for invalid switch type', () => {\n    render(\n      <ToggleSwitch switchType=\"invalid\" state={true} handleUserProfile={mockHandleUserProfile} />,\n    );\n\n    expect(screen.getByText('ERROR: Toggle Switch.')).toBeInTheDocument();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileEdit/__tests__/TriStateToggleSwitch.test.jsx","messages":[{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":9,"column":21,"nodeType":"MemberExpression","messageId":"noContainer","endLine":9,"endColumn":44},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":9,"column":31,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":9,"column":31,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":10,"column":18,"nodeType":"MemberExpression","messageId":"noContainer","endLine":10,"endColumn":41},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":10,"column":28,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":10,"column":28,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":17,"column":12,"nodeType":"MemberExpression","messageId":"noContainer","endLine":17,"endColumn":35},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":17,"column":22,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":21,"column":12,"nodeType":"MemberExpression","messageId":"noContainer","endLine":21,"endColumn":35},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":21,"column":22,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":27,"column":21,"nodeType":"MemberExpression","messageId":"noContainer","endLine":27,"endColumn":44},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":27,"column":31,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":27,"column":31,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":28,"column":21,"nodeType":"MemberExpression","messageId":"noContainer","endLine":28,"endColumn":47},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":28,"column":31,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":28,"column":31,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":33,"column":12,"nodeType":"MemberExpression","messageId":"noContainer","endLine":33,"endColumn":35},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":33,"column":22,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":39,"column":12,"nodeType":"MemberExpression","messageId":"noContainer","endLine":39,"endColumn":35},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":39,"column":22,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":45,"column":12,"nodeType":"MemberExpression","messageId":"noContainer","endLine":45,"endColumn":35},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":45,"column":22,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":50,"column":21,"nodeType":"MemberExpression","messageId":"noContainer","endLine":50,"endColumn":47},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":50,"column":31,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":50,"column":31,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":53,"column":21,"nodeType":"MemberExpression","messageId":"noContainer","endLine":53,"endColumn":44},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":53,"column":31,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":53,"column":31,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":55,"column":12,"nodeType":"MemberExpression","messageId":"noContainer","endLine":55,"endColumn":35},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":55,"column":22,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":70,"column":21,"nodeType":"MemberExpression","messageId":"noContainer","endLine":70,"endColumn":47},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":70,"column":31,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":70,"column":31,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":76,"column":21,"nodeType":"MemberExpression","messageId":"noContainer","endLine":76,"endColumn":44},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":76,"column":31,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":76,"column":31,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":82,"column":21,"nodeType":"MemberExpression","messageId":"noContainer","endLine":82,"endColumn":44},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":82,"column":31,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":82,"column":31,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":100,"column":21,"nodeType":"MemberExpression","messageId":"noContainer","endLine":100,"endColumn":47},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":100,"column":31,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":100,"column":31,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":106,"column":14,"nodeType":"MemberExpression","messageId":"noContainer","endLine":106,"endColumn":37},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":106,"column":24,"nodeType":"MemberExpression","messageId":"noNodeAccess"}],"suppressedMessages":[],"errorCount":44,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, fireEvent } from '@testing-library/react';\nimport '@testing-library/jest-dom/extend-expect';\nimport TriStateToggleSwitch from '../ToggleSwitch/TriStateToggleSwitch';\n\ndescribe('TriStateToggleSwitch Component', () => {\n  it('initializes state based on pos prop and applies correct background color', () => {\n    const { container, rerender } = render(<TriStateToggleSwitch pos=\"posted\" />);\n    const wrapper = container.querySelector('.toggle-switch');\n    const knob = container.querySelector('.knob');\n\n    expect(wrapper).toHaveClass('toggle-switch', 'bg-blue');\n    expect(knob).toHaveClass('posted');\n\n    rerender(<TriStateToggleSwitch pos=\"default\" />);\n    expect(wrapper).toHaveClass('toggle-switch', 'bg-darkgray');\n    expect(container.querySelector('.knob')).toHaveClass('default');\n\n    rerender(<TriStateToggleSwitch pos=\"requested\" />);\n    expect(wrapper).toHaveClass('toggle-switch', 'bg-green');\n    expect(container.querySelector('.knob')).toHaveClass('requested');\n  });\n\n  it('calls onChange and updates state and bgColor on click for all states', () => {\n    const handleChange = vi.fn();\n    const { container } = render(<TriStateToggleSwitch pos=\"default\" onChange={handleChange} />);\n    const wrapper = container.querySelector('.toggle-switch');\n    const options = container.querySelectorAll('.knob-area div');\n\n    fireEvent.click(options[0]);\n    expect(handleChange).toHaveBeenCalledWith('posted');\n    expect(wrapper).toHaveClass('bg-blue');\n    expect(container.querySelector('.knob')).toHaveClass('posted');\n\n    handleChange.mockClear();\n    fireEvent.click(options[1]);\n    expect(handleChange).toHaveBeenCalledWith('default');\n    expect(wrapper).toHaveClass('bg-darkgray');\n    expect(container.querySelector('.knob')).toHaveClass('default');\n\n    handleChange.mockClear();\n    fireEvent.click(options[2]);\n    expect(handleChange).toHaveBeenCalledWith('requested');\n    expect(wrapper).toHaveClass('bg-green');\n    expect(container.querySelector('.knob')).toHaveClass('requested');\n  });\n\n  it('does not throw if onChange is not provided', () => {\n    const { container } = render(<TriStateToggleSwitch pos=\"default\" />);\n    const options = container.querySelectorAll('.knob-area div');\n\n    expect(() => fireEvent.click(options[0])).not.toThrow();\n    const wrapper = container.querySelector('.toggle-switch');\n    expect(wrapper).toHaveClass('bg-blue');\n    expect(container.querySelector('.knob')).toHaveClass('posted');\n  });\n\n  it('does not call onChange on mount or prop change', () => {\n    const handleChange = vi.fn();\n    const { rerender } = render(<TriStateToggleSwitch pos=\"posted\" onChange={handleChange} />);\n\n    expect(handleChange).not.toHaveBeenCalled();\n\n    rerender(<TriStateToggleSwitch pos=\"default\" onChange={handleChange} />);\n    expect(handleChange).not.toHaveBeenCalled();\n  });\n\n  it('renders exactly three clickable areas for each state option', () => {\n    const { container } = render(<TriStateToggleSwitch pos=\"requested\" />);\n    const options = container.querySelectorAll('.knob-area div');\n    expect(options.length).toBe(3);\n  });\n\n  it('wrapper always includes the toggle-switch class', () => {\n    const { container } = render(<TriStateToggleSwitch pos=\"default\" />);\n    const wrapper = container.querySelector('.toggle-switch');\n    expect(wrapper).toBeInTheDocument();\n  });\n\n  it('wrapper has exactly two classes (toggle-switch and bg-color) for each state', () => {\n    const { container, rerender } = render(<TriStateToggleSwitch pos=\"default\" />);\n    const wrapper = container.querySelector('.toggle-switch');\n\n    expect(wrapper.classList.length).toBe(2);\n    expect(wrapper.classList.contains('toggle-switch')).toBe(true);\n    expect(wrapper.classList.contains('bg-darkgray')).toBe(true);\n\n    rerender(<TriStateToggleSwitch pos=\"posted\" />);\n    expect(wrapper.classList.length).toBe(2);\n    expect(wrapper.classList.contains('bg-blue')).toBe(true);\n\n    rerender(<TriStateToggleSwitch pos=\"requested\" />);\n    expect(wrapper.classList.length).toBe(2);\n    expect(wrapper.classList.contains('bg-green')).toBe(true);\n  });\n\n  it('allows sequential clicking through all states', () => {\n    const handleChange = vi.fn();\n    const { container } = render(<TriStateToggleSwitch pos=\"default\" onChange={handleChange} />);\n    const options = container.querySelectorAll('.knob-area div');\n\n    options.forEach((option, idx) => {\n      fireEvent.click(option);\n      const expected = ['posted', 'default', 'requested'][idx];\n      expect(handleChange).toHaveBeenLastCalledWith(expected);\n      expect(container.querySelector('.knob')).toHaveClass(expected);\n    });\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileEdit/__tests__/UserProfileEdit.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileEdit/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileModal/AccessManagementModal.jsx","messages":[{"ruleId":"react/no-unknown-property","severity":2,"message":"Invalid property 'as' found on tag 'span', but it is only allowed on: link","line":323,"column":15,"nodeType":"JSXAttribute","messageId":"invalidPropOnTag","endLine":323,"endColumn":26}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button, Badge, Spinner } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faCheckCircle,\r\n  faTimesCircle,\r\n  faExclamationTriangle,\r\n  faUserPlus,\r\n  faUserMinus,\r\n  faSync,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { ENDPOINTS } from '../../../utils/URL';\r\nimport './AccessManagementModal.css';\r\n\r\nconst AccessManagementModal = ({ isOpen, onClose, userProfile, darkMode = false }) => {\r\n  const [accessData, setAccessData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [actionInProgress, setActionInProgress] = useState(false);\r\n  const [confirmAction, setConfirmAction] = useState(null);\r\n  const [credentialsInput, setCredentialsInput] = useState({});\r\n  const [inputTouched, setInputTouched] = useState({});\r\n\r\n  const targetUserId = userProfile._id;\r\n  const role = userProfile.role;\r\n\r\n  // App configurations with icons and colors\r\n  const appConfigs = {\r\n    github: {\r\n      name: 'GitHub',\r\n      icon: '/github_icon.png',\r\n      color: '#333',\r\n      bgColor: '#f6f8fa',\r\n    },\r\n    dropbox: {\r\n      name: 'Dropbox',\r\n      icon: '/dropbox_icon.png',\r\n      color: '#0061fe',\r\n      bgColor: '#f0f8ff',\r\n    },\r\n    slack: {\r\n      name: 'Slack',\r\n      icon: '/slack_icon.png',\r\n      color: '#4a154b',\r\n      bgColor: '#f8f0ff',\r\n    },\r\n    sentry: {\r\n      name: 'Sentry',\r\n      icon: '/sentry_icon.png',\r\n      color: '#362d59',\r\n      bgColor: '#f5f0ff',\r\n    },\r\n  };\r\n\r\n  // Fetch access data when modal opens\r\n  useEffect(() => {\r\n    if (isOpen && userProfile?._id) {\r\n      fetchAccessData();\r\n      setCredentialsInput({\r\n        github: '',\r\n        dropbox: userProfile.email || '',\r\n        slack: userProfile.email || '',\r\n        sentry: userProfile.email || '',\r\n      });\r\n      setInputTouched({});\r\n    } else if (!isOpen) {\r\n      setAccessData(null);\r\n      setConfirmAction(null);\r\n      setActionInProgress(false);\r\n    }\r\n  }, [isOpen, userProfile?._id, userProfile]);\r\n\r\n  const fetchAccessData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(ENDPOINTS.ACCESS_MANAGEMENT, {\r\n        params: {\r\n          userId: userProfile._id,\r\n        },\r\n      });\r\n      setAccessData(response.data);\r\n    } catch (error) {\r\n      //console.error('Error fetching access data:', error);\r\n      toast.error('Failed to fetch access information');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = status => {\r\n    switch (status) {\r\n      case 'invited':\r\n        return <FontAwesomeIcon icon={faCheckCircle} className=\"text-success\" />;\r\n      case 'revoked':\r\n        return <FontAwesomeIcon icon={faTimesCircle} className=\"text-danger\" />;\r\n      case 'failed':\r\n        return <FontAwesomeIcon icon={faExclamationTriangle} className=\"text-danger\" />;\r\n      case 'none':\r\n      default:\r\n        return <FontAwesomeIcon icon={faTimesCircle} className=\"text-muted\" />;\r\n    }\r\n  };\r\n\r\n  const getStatusBadge = status => {\r\n    const statusConfig = {\r\n      invited: { color: 'success', text: 'Invited' },\r\n      revoked: { color: 'danger', text: 'Revoked' },\r\n      failed: { color: 'danger', text: 'Failed' },\r\n      none: { color: 'secondary', text: 'No Access' },\r\n    };\r\n\r\n    const config = statusConfig[status] || statusConfig.none;\r\n    return (\r\n      <Badge color={config.color} className=\"status-badge\">\r\n        {config.text}\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n  const getAppStatus = appName => {\r\n    if (!accessData?.found || !accessData?.data?.apps) {\r\n      return 'none';\r\n    }\r\n\r\n    const app = accessData.data.apps.find(a => a.app === appName);\r\n    if (!app) return 'none';\r\n\r\n    return app.status || 'none';\r\n  };\r\n\r\n  // Update credential input\r\n  const handleCredentialChange = (app, value) => {\r\n    setCredentialsInput(prev => ({ ...prev, [app]: value }));\r\n    setInputTouched(prev => ({ ...prev, [app]: true }));\r\n  };\r\n\r\n  // Get apps that can be invited (no access and valid credentials)\r\n  const getInvitableApps = () => {\r\n    return Object.keys(appConfigs).filter(appName => {\r\n      const status = getAppStatus(appName);\r\n      const credential = credentialsInput[appName]?.trim() || '';\r\n      const app = accessData?.data?.apps?.find(a => a.app === appName);\r\n      // Don't allow inviting if user has been revoked (has revokedOn date)\r\n      const hasBeenRevoked = app?.revokedOn;\r\n      return status === 'none' && credential.length > 0 && !hasBeenRevoked;\r\n    });\r\n  };\r\n\r\n  // Get apps that can be revoked (active access)\r\n  const getRevokableApps = () => {\r\n    return Object.keys(appConfigs).filter(appName => {\r\n      const status = getAppStatus(appName);\r\n      return status === 'invited' && appName !== 'slack';\r\n    });\r\n  };\r\n\r\n  // Handle invite all apps\r\n  const handleInviteAll = async () => {\r\n    const invitableApps = getInvitableApps();\r\n    if (invitableApps.length === 0) {\r\n      toast.warning('No apps available to invite. Please check credentials.');\r\n      return;\r\n    }\r\n\r\n    setActionInProgress(true);\r\n    try {\r\n      const results = await Promise.allSettled(\r\n        invitableApps.map(appName => handleInviteApp(appName)),\r\n      );\r\n\r\n      const successCount = results.filter(result => result.status === 'fulfilled').length;\r\n      const failCount = results.length - successCount;\r\n\r\n      if (successCount > 0) {\r\n        toast.success(`Successfully invited to ${successCount} app${successCount > 1 ? 's' : ''}`);\r\n      }\r\n      if (failCount > 0) {\r\n        toast.error(`Failed to invite to ${failCount} app${failCount > 1 ? 's' : ''}`);\r\n      }\r\n\r\n      await fetchAccessData(); // Refresh data\r\n    } catch (error) {\r\n      //console.error('Error in bulk invite:', error);\r\n      toast.error('Unexpected error during bulk invite');\r\n    } finally {\r\n      setActionInProgress(false);\r\n    }\r\n  };\r\n\r\n  // Handle revoke all apps\r\n  const handleRevokeAll = async () => {\r\n    const revokableApps = getRevokableApps();\r\n    if (revokableApps.length === 0) {\r\n      toast.warning('No apps available to revoke access from.');\r\n      return;\r\n    }\r\n\r\n    setActionInProgress(true);\r\n    try {\r\n      const results = await Promise.allSettled(\r\n        revokableApps.map(appName => handleRevokeApp(appName)),\r\n      );\r\n\r\n      const successCount = results.filter(result => result.status === 'fulfilled').length;\r\n      const failCount = results.length - successCount;\r\n\r\n      if (successCount > 0) {\r\n        toast.success(\r\n          `Successfully revoked access from ${successCount} app${successCount > 1 ? 's' : ''}`,\r\n        );\r\n      }\r\n      if (failCount > 0) {\r\n        toast.error(`Failed to revoke access from ${failCount} app${failCount > 1 ? 's' : ''}`);\r\n      }\r\n\r\n      await fetchAccessData(); // Refresh data\r\n    } catch (error) {\r\n      //console.error('Error in bulk revoke:', error.response);\r\n      toast.error('Unexpected error during bulk revoke');\r\n    } finally {\r\n      setActionInProgress(false);\r\n    }\r\n  };\r\n\r\n  const handleInviteApp = async appName => {\r\n    setActionInProgress(true);\r\n\r\n    const credential = credentialsInput[appName]?.trim();\r\n    const email = appName === 'github' ? undefined : credential;\r\n    const username = appName === 'github' ? credential : undefined;\r\n\r\n    try {\r\n      let endpoint;\r\n      let payload;\r\n      switch (appName) {\r\n        case 'github':\r\n          endpoint = ENDPOINTS.GITHUB_ADD;\r\n          payload = { username, targetUser: { targetUserId, role } };\r\n          break;\r\n        case 'dropbox':\r\n          endpoint = ENDPOINTS.DROPBOX_CREATE_ADD;\r\n          payload = {\r\n            folderPath: `${userProfile.firstName} ${userProfile.lastName}`,\r\n            targetUser: { targetUserId, role, email },\r\n          };\r\n          break;\r\n        case 'slack':\r\n          endpoint = ENDPOINTS.SLACK_ADD;\r\n          payload = { targetUser: { targetUserId, role, email } };\r\n          break;\r\n        case 'sentry':\r\n          endpoint = ENDPOINTS.SENTRY_ADD;\r\n          payload = { targetUser: { targetUserId, role, email } };\r\n          break;\r\n        default:\r\n          throw new Error('Unknown app');\r\n      }\r\n      await axios.post(endpoint, payload);\r\n      toast.success(`${appConfigs[appName].name} invitation sent successfully`);\r\n      await fetchAccessData(); // Refresh data\r\n    } catch (error) {\r\n      //console.error(`Error inviting to ${appName}:`, error.response);\r\n      toast.error(error.response.data.message);\r\n    } finally {\r\n      setActionInProgress(false);\r\n    }\r\n  };\r\n\r\n  const handleRevokeApp = async appName => {\r\n    setActionInProgress(true);\r\n    const email = accessData?.data?.apps?.find(a => a.app === 'sentry')?.credentials || '';\r\n    const username = accessData?.data?.apps?.find(a => a.app === 'github')?.credentials || '';\r\n\r\n    try {\r\n      let endpoint;\r\n      let payload;\r\n\r\n      switch (appName) {\r\n        case 'github':\r\n          endpoint = ENDPOINTS.GITHUB_REMOVE;\r\n          payload = { username, targetUser: { targetUserId, role } };\r\n          break;\r\n        case 'dropbox':\r\n          endpoint = ENDPOINTS.DROPBOX_DELETE;\r\n          payload = {\r\n            folderPath: `${userProfile.firstName} ${userProfile.lastName}`,\r\n            targetUser: { targetUserId, role },\r\n          };\r\n          break;\r\n        case 'sentry':\r\n          endpoint = ENDPOINTS.SENTRY_REMOVE;\r\n          payload = { targetUser: { targetUserId, role, email } };\r\n          break;\r\n        default:\r\n          throw new Error('Unknown app');\r\n      }\r\n\r\n      await axios.delete(endpoint, { data: payload });\r\n      toast.success(`${appConfigs[appName].name} access revoked successfully`);\r\n      await fetchAccessData(); // Refresh data\r\n    } catch (error) {\r\n      //console.error(`Error revoking ${appName}:`, error);\r\n      toast.error(error.response.data.message);\r\n    } finally {\r\n      setActionInProgress(false);\r\n    }\r\n  };\r\n\r\n  const renderAppCard = appName => {\r\n    const config = appConfigs[appName];\r\n    const status = getAppStatus(appName);\r\n    const app = accessData?.data?.apps?.find(a => a.app === appName);\r\n    const credentialValue = credentialsInput[appName] || '';\r\n    const touched = inputTouched[appName];\r\n    const isGithub = appName === 'github';\r\n    const isCredentialValid = credentialValue.trim().length > 0;\r\n    return (\r\n      <div key={appName} className=\"app-card\">\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <div className=\"d-flex align-items-center\">\r\n            <span\r\n              as={'span'}\r\n              className=\"app-icon\"\r\n              style={{ display: 'inline-block', width: 32, height: 32, marginRight: 12 }}\r\n            >\r\n              <img\r\n                src={config.icon}\r\n                alt={config.name + ' icon'}\r\n                style={{ width: 32, height: 32, objectFit: 'contain' }}\r\n              />\r\n            </span>\r\n            <div>\r\n              <h6 className=\"app-name\">{config.name}</h6>\r\n              <div className=\"status-container\">\r\n                {getStatusIcon(status)}\r\n                {getStatusBadge(status)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"action-container\">\r\n            {status === 'none' && !app?.revokedOn && (\r\n              <>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  style={{ width: isGithub ? 160 : 220, marginRight: 8 }}\r\n                  placeholder={isGithub ? 'GitHub Username (required)' : 'Email (required)'}\r\n                  value={credentialValue}\r\n                  onChange={e => handleCredentialChange(appName, e.target.value)}\r\n                  onBlur={() => setInputTouched(prev => ({ ...prev, [appName]: true }))}\r\n                  required\r\n                />\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"sm\"\r\n                  className=\"btn-action\"\r\n                  onClick={() => handleInviteApp(appName)}\r\n                  disabled={actionInProgress || !isCredentialValid}\r\n                >\r\n                  <FontAwesomeIcon icon={faUserPlus} className=\"mr-1\" />\r\n                  Invite\r\n                </Button>\r\n              </>\r\n            )}\r\n\r\n            {status === 'none' && app?.revokedOn && (\r\n              <div className=\"text-muted small\">\r\n                <FontAwesomeIcon icon={faTimesCircle} className=\"mr-1\" />\r\n                Access previously revoked\r\n              </div>\r\n            )}\r\n\r\n            {status === 'none' && !app?.revokedOn && touched && !isCredentialValid && (\r\n              <div className=\"text-danger small\" style={{ marginLeft: 8 }}>\r\n                {isGithub ? 'GitHub username is required' : 'Email is required'}\r\n              </div>\r\n            )}\r\n\r\n            {status === 'invited' && (\r\n              <div className=\"text-muted small\">\r\n                Invited: {app?.invitedOn ? new Date(app.invitedOn).toLocaleDateString() : 'N/A'}\r\n              </div>\r\n            )}\r\n\r\n            {(status === 'active' || status === 'invited') && appName !== 'slack' && (\r\n              <Button\r\n                color=\"danger\"\r\n                size=\"sm\"\r\n                className=\"btn-action\"\r\n                onClick={() => setConfirmAction({ type: 'revoke', app: appName })}\r\n                disabled={actionInProgress}\r\n              >\r\n                <FontAwesomeIcon icon={faUserMinus} className=\"mr-1\" />\r\n                Revoke\r\n              </Button>\r\n            )}\r\n\r\n            {(status === 'active' || status === 'invited') && appName === 'slack' && (\r\n              <div className=\"text-muted small\">\r\n                <FontAwesomeIcon icon={faExclamationTriangle} className=\"mr-1\" />\r\n                Manual removal required\r\n              </div>\r\n            )}\r\n\r\n            {status === 'revoked' && (\r\n              <div className=\"text-muted small\">\r\n                Revoked: {app?.revokedOn ? new Date(app.revokedOn).toLocaleDateString() : 'N/A'}\r\n              </div>\r\n            )}\r\n\r\n            {status === 'failed' && (\r\n              <div className=\"text-danger small\">\r\n                Failed: {app?.failedReason || 'Unknown error'}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {app?.credentials && (\r\n          <div className=\"credentials\">\r\n            <strong>Credentials:</strong> {app.credentials}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderConfirmationModal = () => {\r\n    if (!confirmAction) return null;\r\n\r\n    const { type, app } = confirmAction;\r\n\r\n    // Handle bulk actions\r\n    if (type === 'invite-all') {\r\n      const invitableApps = getInvitableApps();\r\n      return (\r\n        <Modal\r\n          isOpen={!!confirmAction}\r\n          toggle={() => setConfirmAction(null)}\r\n          size=\"md\"\r\n          className={darkMode ? 'text-light dark-mode' : ''}\r\n        >\r\n          <ModalHeader\r\n            toggle={() => setConfirmAction(null)}\r\n            className={darkMode ? 'bg-space-cadet' : ''}\r\n          >\r\n            Confirm Invite All Access\r\n          </ModalHeader>\r\n          <ModalBody className={darkMode ? 'bg-yinmn-blue' : ''}>\r\n            <div className=\"d-flex align-items-center mb-3\">\r\n              <FontAwesomeIcon icon={faUserPlus} className=\"mr-2 text-success\" />\r\n              <span>\r\n                Are you sure you want to invite{' '}\r\n                <strong>\r\n                  {userProfile?.firstName} {userProfile?.lastName}\r\n                </strong>{' '}\r\n                to all available applications?\r\n              </span>\r\n            </div>\r\n            <div className=\"alert alert-info\">\r\n              <strong>Apps to be invited:</strong>\r\n              <ul className=\"mb-0 mt-2\">\r\n                {invitableApps.map(appName => (\r\n                  <li key={appName}>\r\n                    <strong>{appConfigs[appName].name}</strong> -{' '}\r\n                    {appName === 'github' ? 'Username' : 'Email'}: {credentialsInput[appName]}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter className={darkMode ? 'bg-yinmn-blue' : ''}>\r\n            <Button\r\n              color=\"success\"\r\n              onClick={() => {\r\n                handleInviteAll();\r\n                setConfirmAction(null);\r\n              }}\r\n              disabled={actionInProgress}\r\n            >\r\n              {actionInProgress ? (\r\n                <>\r\n                  <Spinner size=\"sm\" className=\"mr-2\" />\r\n                  Inviting All...\r\n                </>\r\n              ) : (\r\n                'Yes, Invite All'\r\n              )}\r\n            </Button>\r\n            <Button\r\n              color=\"secondary\"\r\n              onClick={() => setConfirmAction(null)}\r\n              disabled={actionInProgress}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      );\r\n    }\r\n\r\n    if (type === 'revoke-all') {\r\n      const revokableApps = getRevokableApps();\r\n      return (\r\n        <Modal\r\n          isOpen={!!confirmAction}\r\n          toggle={() => setConfirmAction(null)}\r\n          size=\"md\"\r\n          className={darkMode ? 'text-light dark-mode' : ''}\r\n        >\r\n          <ModalHeader\r\n            toggle={() => setConfirmAction(null)}\r\n            className={darkMode ? 'bg-space-cadet' : ''}\r\n          >\r\n            Whoa Tiger!\r\n          </ModalHeader>\r\n          <ModalBody className={darkMode ? 'bg-yinmn-blue' : ''}>\r\n            <div className=\"alert alert-danger\">\r\n              <strong>\r\n                Whoa Tiger! Are you sure you want to do this? This action is not reversible.\r\n              </strong>\r\n            </div>\r\n            <div className=\"alert alert-info\">\r\n              <strong>Apps to be revoked:</strong>\r\n              <ul className=\"mb-0 mt-2\">\r\n                {revokableApps.map(appName => (\r\n                  <li key={appName}>\r\n                    <strong>{appConfigs[appName].name}</strong>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter className={darkMode ? 'bg-yinmn-blue' : ''}>\r\n            <Button\r\n              color=\"danger\"\r\n              onClick={() => {\r\n                handleRevokeAll();\r\n                setConfirmAction(null);\r\n              }}\r\n              disabled={actionInProgress}\r\n            >\r\n              {actionInProgress ? (\r\n                <>\r\n                  <Spinner size=\"sm\" className=\"mr-2\" />\r\n                  Revoking All...\r\n                </>\r\n              ) : (\r\n                \"Yes, I'm sure\"\r\n              )}\r\n            </Button>\r\n            <Button\r\n              color=\"secondary\"\r\n              onClick={() => setConfirmAction(null)}\r\n              disabled={actionInProgress}\r\n            >\r\n              No, take me back!\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      );\r\n    }\r\n\r\n    // Handle individual app actions\r\n    const config = appConfigs[app];\r\n\r\n    return (\r\n      <Modal\r\n        isOpen={!!confirmAction}\r\n        toggle={() => setConfirmAction(null)}\r\n        size=\"md\"\r\n        className={darkMode ? 'text-light dark-mode' : ''}\r\n      >\r\n        <ModalHeader\r\n          toggle={() => setConfirmAction(null)}\r\n          className={darkMode ? 'bg-space-cadet' : ''}\r\n        >\r\n          {type === 'revoke' ? 'Whoa Tiger!' : 'Confirm Invite Access'}\r\n        </ModalHeader>\r\n        <ModalBody className={darkMode ? 'bg-yinmn-blue' : ''}>\r\n          {type === 'revoke' && (\r\n            <>\r\n              <div className=\"alert alert-danger\">\r\n                <strong>\r\n                  Whoa Tiger! Are you sure you want to do this? This action is not reversible.\r\n                </strong>\r\n              </div>\r\n            </>\r\n          )}\r\n        </ModalBody>\r\n        <ModalFooter className={darkMode ? 'bg-yinmn-blue' : ''}>\r\n          <Button\r\n            color={type === 'revoke' ? 'danger' : 'primary'}\r\n            onClick={() => {\r\n              if (type === 'revoke') {\r\n                handleRevokeApp(app);\r\n              } else {\r\n                handleInviteApp(app);\r\n              }\r\n              setConfirmAction(null);\r\n            }}\r\n            disabled={actionInProgress}\r\n          >\r\n            {actionInProgress ? (\r\n              <>\r\n                <Spinner size=\"sm\" className=\"mr-2\" />\r\n                {type === 'revoke' ? 'Revoking...' : 'Inviting...'}\r\n              </>\r\n            ) : type === 'revoke' ? (\r\n              \"Yes, I'm sure\"\r\n            ) : (\r\n              `Yes, ${type} access`\r\n            )}\r\n          </Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={() => setConfirmAction(null)}\r\n            disabled={actionInProgress}\r\n          >\r\n            {type === 'revoke' ? 'No, take me back!' : 'Cancel'}\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  // Only calculate these if we have accessData (not loading and data is available)\r\n  const invitableApps = !loading && accessData ? getInvitableApps() : [];\r\n  const revokableApps = !loading && accessData ? getRevokableApps() : [];\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={isOpen}\r\n        toggle={onClose}\r\n        size=\"lg\"\r\n        className={`access-management-modal ${darkMode ? 'text-light dark-mode' : ''}`}\r\n      >\r\n        <ModalHeader toggle={onClose} className={darkMode ? 'bg-space-cadet' : ''}>\r\n          <div className=\"d-flex align-items-center\">\r\n            <FontAwesomeIcon icon={faSync} className=\"mr-2\" />\r\n            Access Management\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody className={darkMode ? 'bg-yinmn-blue' : ''}>\r\n          {loading ? (\r\n            <div className=\"loading-container\">\r\n              <Spinner color=\"primary\" />\r\n              <div className=\"mt-2\">Loading access information...</div>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <div className=\"user-info\">\r\n                <h6>\r\n                  Managing access for:{' '}\r\n                  <strong>\r\n                    {userProfile?.firstName} {userProfile?.lastName}\r\n                  </strong>\r\n                </h6>\r\n                <p className=\"text-muted mb-0\">Email: {userProfile?.email}</p>\r\n              </div>\r\n\r\n              <div className=\"mb-3\">\r\n                <h6>Application Access Status</h6>\r\n                <p className=\"text-muted small\">\r\n                  {accessData?.found\r\n                    ? 'User has access records. Manage their permissions below.'\r\n                    : 'No access records found. You can invite this user to applications.'}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"apps-container\">{Object.keys(appConfigs).map(renderAppCard)}</div>\r\n\r\n              {/* Bulk Action Buttons */}\r\n              <div className=\"d-flex mb-3\">\r\n                {invitableApps.length > 0 && (\r\n                  <Button\r\n                    color=\"success\"\r\n                    size=\"sm\"\r\n                    onClick={() => setConfirmAction({ type: 'invite-all', app: null })}\r\n                    disabled={actionInProgress}\r\n                    className=\"mr-3\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faUserPlus} className=\"mr-1\" />\r\n                    Invite All ({invitableApps.length})\r\n                  </Button>\r\n                )}\r\n                {revokableApps.length > 0 && (\r\n                  <Button\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    onClick={() => setConfirmAction({ type: 'revoke-all', app: null })}\r\n                    disabled={actionInProgress}\r\n                  >\r\n                    <FontAwesomeIcon icon={faUserMinus} className=\"mr-1\" />\r\n                    Revoke All ({revokableApps.length})\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </ModalBody>\r\n        <ModalFooter className={darkMode ? 'bg-yinmn-blue' : ''}>\r\n          <Button color=\"secondary\" onClick={onClose}>\r\n            Close\r\n          </Button>\r\n          {accessData?.found && (\r\n            <Button color=\"outline-primary\" onClick={fetchAccessData} disabled={loading}>\r\n              <FontAwesomeIcon icon={faSync} className=\"mr-1\" />\r\n              Refresh\r\n            </Button>\r\n          )}\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      {renderConfirmationModal()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccessManagementModal;\r\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileModal/EditConfirmModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileModal/EditLinkModal.jsx","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":143,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":143,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[4975,4992],"text":""},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Label,\n  CardBody,\n  Card,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport hasPermission from '../../../utils/permissions';\nimport './EditLinkModal.css';\nimport { boxStyle, boxStyleDark } from '~/styles';\nimport { connect, useSelector } from 'react-redux';\nimport { isValidGoogleDocsUrl, isValidMediaUrl } from '~/utils/checkValidURL';\n\nconst EditLinkModal = props => {\n  const darkMode = useSelector(state => state.theme.darkMode);\n\n  const { isOpen, closeModal, updateLink, userProfile, handleSubmit } = props;\n  const canManageAdminLinks = props.hasPermission('manageAdminLinks');\n\n  const initialAdminLinkState = [\n    { Name: 'Google Doc', Link: '' },\n    { Name: 'Media Folder', Link: '' },\n  ];\n  const emptyLink = { Name: '', Link: '' };\n\n  const [newAdminLink, setNewAdminLink] = useState(emptyLink);\n  const [newPersonalLink, setNewPersonalLink] = useState(emptyLink);\n\n  const [googleLink, setGoogleLink] = useState(\n    userProfile.adminLinks.find(link => link.Name === 'Google Doc')\n      ? userProfile.adminLinks.find(link => link.Name === 'Google Doc')\n      : initialAdminLinkState[0],\n  );\n  const [mediaFolderLink, setMediaFolderLink] = useState(\n    userProfile.adminLinks.find(link => link.Name === 'Media Folder')\n      ? userProfile.adminLinks.find(link => link.Name === 'Media Folder')\n      : initialAdminLinkState[1],\n  );\n  const [adminLinks, setAdminLinks] = useState(\n    userProfile.adminLinks\n      ? userProfile.adminLinks\n          .filter(link => link.Name !== 'Google Doc')\n          .filter(link => link.Name !== 'Media Folder')\n      : [],\n  );\n  const [personalLinks, setPersonalLinks] = useState(\n    userProfile.personalLinks ? userProfile.personalLinks : [],\n  );\n  const originalMediaFolderLink = useRef(mediaFolderLink.Link);\n\n  const [isChanged, setIsChanged] = useState(false);\n  const [mediaFolderDiffWarning, setMediaFolderDiffWarning] = useState(false);\n  const [isWarningPopupOpen, setIsWarningPopupOpen] = useState(false);\n  const [isMediaFolderLinkChanged, setIsMediaFolderLinkChanged] = useState(false);\n  const [isValidLink, setIsValidLink] = useState(true);\n\n  const handleNameChanges = (e, links, index, setLinks) => {\n    const updateLinks = [...links];\n    updateLinks[index] = { ...updateLinks[index], Name: e.target.value };\n    setLinks(updateLinks);\n    setIsChanged(true);\n  };\n  const handleLinkChanges = (e, links, index, setLinks) => {\n    const updateLinks = [...links];\n    updateLinks[index] = { ...updateLinks[index], Link: e.target.value };\n    setLinks(updateLinks);\n    setIsChanged(true);\n  };\n\n  const handleMediaFolderLinkChanges = e => {\n    if (!mediaFolderLink.Link) {\n      // Prevent warning popup appear if empty media folder link\n      setIsMediaFolderLinkChanged(true);\n      setMediaFolderLink({ ...mediaFolderLink, Link: e.target.value.trim() });\n      setIsChanged(true);\n    } else {\n      setMediaFolderLink({ ...mediaFolderLink, Link: e.target.value.trim() });\n      setIsChanged(true);\n      if (!isMediaFolderLinkChanged && !isWarningPopupOpen) {\n        // First time media folder link is changed\n        setIsMediaFolderLinkChanged(true);\n        setIsWarningPopupOpen(true);\n      }\n    }\n  };\n\n  const addNewLink = (links, setLinks, newLink, clearInput) => {\n    if (\n      isDuplicateLink([googleLink, mediaFolderLink, ...links], newLink) ||\n      !isValidUrl(newLink.Link)\n    ) {\n      setIsValidLink(false);\n    } else {\n      const newLinks = [...links, { Name: newLink.Name, Link: newLink.Link }];\n      setLinks(newLinks);\n      setIsChanged(true);\n      setIsValidLink(true);\n      clearInput();\n    }\n  };\n\n  const removeLink = (links, setLinks, { name, link }) => {\n    const newLinks = links.filter(link => {\n      return link.Name !== name;\n    });\n    setLinks(newLinks);\n    setIsChanged(true);\n  };\n\n  const isDifferentMediaUrl = () => {\n    //* This is to compare the mediaUrl with Media Folder link when editing in the input area.\n    //* Because mediaUrl is a differnt object, but the link should be the same as Media Folder's link.\n    if (userProfile.mediaUrl !== mediaFolderLink.Link && userProfile.mediaUrl !== '') {\n      setMediaFolderDiffWarning(true);\n    } else {\n      setMediaFolderDiffWarning(false);\n    }\n  };\n\n  const isDuplicateLink = (links, newLink) => {\n    // ! return true if there is a duplicate link, which is invalid\n    if (newLink.Name === '' || newLink.Link === '') return true;\n    else {\n      const name = newLink.Name.trim().toLowerCase();\n      const nameSet = new Set();\n      links.forEach(link => {\n        nameSet.add(link.Name.trim().toLowerCase());\n      });\n      return nameSet.has(name);\n    }\n  };\n\n  const isValidUrl = url => {\n    try {\n      const pattern = /^(?:https?:\\/\\/)?[\\w.-]+\\.[a-zA-Z]{2,}(?:\\/\\S*)?$/;\n      return pattern.test(url);\n    } catch (err) {\n      console.log(err);\n      return false;\n    }\n  };\n\n  const handleUpdate = async () => {\n    // Validate the Google Doc and Media Folder links\n    const isGoogleDocsValid = googleLink.Link === '' || isValidGoogleDocsUrl(googleLink.Link);\n    const isMediaFolderValid = mediaFolderLink.Link === '' || isValidMediaUrl(mediaFolderLink.Link);\n\n    if (isGoogleDocsValid && isMediaFolderValid) {\n      const linksToUpdate = [googleLink, mediaFolderLink, ...adminLinks];\n      await updateLink(personalLinks, linksToUpdate, mediaFolderLink.Link);\n      handleSubmit();\n      setIsValidLink(true);\n      setIsChanged(false);\n      closeModal();\n    } else {\n      setIsValidLink(false);\n    }\n  };\n\n  useEffect(() => {\n    isDifferentMediaUrl();\n  }, [mediaFolderLink.Link, userProfile.mediaUrl]);\n\n  useEffect(() => {\n    if (userProfile.adminLinks) {\n      setGoogleLink(\n        userProfile.adminLinks.find(link => link.Name === 'Google Doc') || initialAdminLinkState[0],\n      );\n      setMediaFolderLink(\n        userProfile.adminLinks.find(link => link.Name === 'Media Folder') ||\n          initialAdminLinkState[1],\n      );\n      setAdminLinks(\n        userProfile.adminLinks\n          .filter(link => link.Name !== 'Google Doc')\n          .filter(link => link.Name !== 'Media Folder'),\n      );\n    }\n  }, [userProfile.adminLinks]);\n\n  return (\n    <React.Fragment>\n      <Modal isOpen={isOpen} toggle={closeModal} className={darkMode ? 'text-light dark-mode' : ''}>\n        <ModalHeader className={darkMode ? 'bg-space-cadet' : ''} toggle={closeModal}>\n          Edit Links\n        </ModalHeader>\n        <ModalBody className={darkMode ? 'bg-yinmn-blue' : ''}>\n          <div>\n            {canManageAdminLinks && (\n              <CardBody>\n                <Card style={{ padding: '16px' }} className={darkMode ? 'bg-yinmn-blue' : ''}>\n                  <Label\n                    style={{ display: 'flex', margin: '5px' }}\n                    className={darkMode ? 'text-light' : ''}\n                  >\n                    Admin Links:\n                  </Label>\n                  {mediaFolderDiffWarning && (\n                    <span className=\"warning-help-context\" data-testid=\"diff-media-url-warning\">\n                      <strong>Media Folder link must be a working DropBox link</strong>\n                      <p>\n                        Current Media URL: <a href={userProfile.mediaUrl}>{userProfile.mediaUrl}</a>\n                      </p>\n                    </span>\n                  )}\n                  <div>\n                    <div style={{ display: 'flex', margin: '5px' }} className=\"link-fields\">\n                      <label\n                        className={`custom-label ${darkMode ? 'text-light' : ''}`}\n                        htmlFor=\"google-doc-link\"\n                      >\n                        Google Doc\n                      </label>\n                      <input\n                        id=\"google-doc-link\"\n                        className=\"customEdit\"\n                        placeholder=\"Enter Google Doc link\"\n                        value={googleLink.Link}\n                        onChange={e => {\n                          setGoogleLink({ ...googleLink, Link: e.target.value.trim() });\n                          setIsChanged(true);\n                        }}\n                      />\n                    </div>\n                    <div style={{ display: 'flex', margin: '5px' }} className=\"link-fields\">\n                      <label\n                        className={`custom-label ${darkMode ? 'text-light' : ''}`}\n                        htmlFor=\"media-folder-link\"\n                      >\n                        Media Folder\n                      </label>\n                      <input\n                        className=\"customEdit\"\n                        id=\"media-folder-link\"\n                        placeholder=\"Enter Dropbox link\"\n                        value={mediaFolderLink.Link}\n                        onChange={e => {\n                          handleMediaFolderLinkChanges(e);\n                        }}\n                      />\n                    </div>\n                    {adminLinks?.map((link, index) => {\n                      return (\n                        <div\n                          key={index}\n                          style={{ display: 'flex', margin: '5px' }}\n                          className=\"link-fields\"\n                        >\n                          <input\n                            className=\"customInput\"\n                            value={link.Name}\n                            onChange={e => handleNameChanges(e, adminLinks, index, setAdminLinks)}\n                            placeholder=\"Link Name\"\n                          />\n                          <input\n                            className=\"customInput\"\n                            value={link.Link}\n                            onChange={e => handleLinkChanges(e, adminLinks, index, setAdminLinks)}\n                            placeholder=\"Link URL\"\n                          />\n                          <button\n                            type=\"button\"\n                            className=\"closeButton\"\n                            color=\"danger\"\n                            onClick={() =>\n                              removeLink(adminLinks, setAdminLinks, {\n                                name: link.Name,\n                                link: link.Link,\n                              })\n                            }\n                          >\n                            x\n                          </button>\n                        </div>\n                      );\n                    })}\n                    <div style={{ display: 'flex', margin: '5px' }}>\n                      <div className=\"customTitle\">+ ADD LINK:</div>\n                    </div>\n\n                    <div\n                      style={{ display: 'flex', margin: '5px' }}\n                      className=\"link-fields new-admin-links\"\n                    >\n                      <input\n                        className=\"customEdit\"\n                        id=\"linkName\"\n                        placeholder=\"enter name\"\n                        value={newAdminLink.Name}\n                        onChange={e => {\n                          const { value } = e.target;\n                          setNewAdminLink(prev => ({ ...prev, Name: value }));\n                        }}\n                      />\n                      <input\n                        className=\"customEdit\"\n                        id=\"linkURL\"\n                        placeholder=\"enter link\"\n                        value={newAdminLink.Link}\n                        onChange={e => {\n                          const { value } = e.target;\n                          setNewAdminLink(prev => ({ ...prev, Link: value }));\n                        }}\n                      />\n\n                      <button\n                        type=\"button\"\n                        className=\"addButton\"\n                        aria-label=\"add-admin-link-button\"\n                        onClick={() => {\n                          addNewLink(adminLinks, setAdminLinks, newAdminLink, () =>\n                            setNewAdminLink(emptyLink),\n                          );\n                        }}\n                      >\n                        +\n                      </button>\n                    </div>\n                  </div>\n                </Card>\n              </CardBody>\n            )}\n            <CardBody>\n              <Card style={{ padding: '16px' }} className={darkMode ? 'bg-yinmn-blue' : ''}>\n                <Label\n                  style={{ display: 'flex', margin: '5px' }}\n                  className={darkMode ? 'text-light' : ''}\n                >\n                  Personal Links:\n                </Label>\n                <div>\n                  {personalLinks.map((link, index) => (\n                    <div\n                      key={index}\n                      style={{ display: 'flex', margin: '5px' }}\n                      className=\"link-fields\"\n                    >\n                      <input\n                        className=\"customInput\"\n                        value={link.Name}\n                        onChange={e => handleNameChanges(e, personalLinks, index, setPersonalLinks)}\n                      />\n                      <input\n                        className=\"customInput\"\n                        value={link.Link}\n                        onChange={e => handleLinkChanges(e, personalLinks, index, setPersonalLinks)}\n                      />\n                      <button\n                        type=\"button\"\n                        className=\"closeButton\"\n                        color=\"danger\"\n                        aria-label=\"add-personal-link-button\"\n                        onClick={() =>\n                          removeLink(personalLinks, setPersonalLinks, {\n                            name: link.Name,\n                            link: link.Link,\n                          })\n                        }\n                      >\n                        x\n                      </button>\n                    </div>\n                  ))}\n\n                  <div style={{ display: 'flex', margin: '5px' }}>\n                    <div className=\"customTitle\">+ ADD LINK:</div>\n                  </div>\n\n                  <div style={{ display: 'flex', margin: '5px' }} className=\"link-fields\">\n                    <input\n                      className=\"customEdit me-3\"\n                      placeholder=\"enter name\"\n                      value={newPersonalLink.Name}\n                      onChange={e => {\n                        const { value } = e.target;\n                        setNewPersonalLink(prev => ({ ...prev, Name: value }));\n                        setIsChanged(true);\n                      }}\n                    />\n                    <input\n                      className=\"customEdit\"\n                      placeholder=\"enter link\"\n                      value={newPersonalLink.Link}\n                      onChange={e => {\n                        const { value } = e.target;\n                        setNewPersonalLink(prev => ({ ...prev, Link: value }));\n                        setIsChanged(true);\n                      }}\n                    />\n                    <button\n                      type=\"button\"\n                      className=\"addButton\"\n                      onClick={() => {\n                        addNewLink(personalLinks, setPersonalLinks, newPersonalLink, () =>\n                          setNewPersonalLink(emptyLink),\n                        );\n                      }}\n                    >\n                      +\n                    </button>\n                  </div>\n                </div>\n              </Card>\n              {!isValidLink && (\n                <p className=\"invalid-help-context\" data-testid=\"invalid-url-warning\">\n                  Please enter valid URLs for each link.\n                </p>\n              )}\n            </CardBody>\n          </div>\n        </ModalBody>\n        <ModalFooter className={darkMode ? 'bg-yinmn-blue' : ''}>\n          <Button\n            color=\"info\"\n            disabled={!isChanged}\n            onClick={() => {\n              handleUpdate();\n            }}\n            style={darkMode ? boxStyleDark : boxStyle}\n          >\n            Update\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              setIsMediaFolderLinkChanged(false);\n              setMediaFolderLink({ ...mediaFolderLink, Link: originalMediaFolderLink.current });\n              closeModal();\n            }}\n            style={darkMode ? boxStyleDark : boxStyle}\n          >\n            Cancel\n          </Button>\n        </ModalFooter>\n\n        <Modal\n          data-testid=\"popup-warning\"\n          isOpen={isWarningPopupOpen}\n          toggle={() => setIsWarningPopupOpen(!isWarningPopupOpen)}\n          className={darkMode ? 'text-light dark-mode' : ''}\n        >\n          <ModalHeader className={darkMode ? 'bg-space-cadet' : ''}>Warning!</ModalHeader>\n          <ModalBody className={darkMode ? 'bg-yinmn-blue' : ''}>\n            Whoa Tiger, don’t do this! This link was added by an Admin when you were set up in the\n            system. It is used by the Admin Team and your Manager(s) for reviewing your work. You\n            should only change it if you are ABSOLUTELY SURE the one you are changing it to is more\n            correct than the one here already.\n          </ModalBody>\n          <ModalFooter className={darkMode ? 'bg-yinmn-blue' : ''}>\n            <Button\n              color=\"primary\"\n              onClick={() => {\n                setIsWarningPopupOpen(!isWarningPopupOpen);\n              }}\n            >\n              Confirm\n            </Button>\n            {/* Cancel button put original Media Folder link into the input */}\n            <Button\n              onClick={() => {\n                setIsWarningPopupOpen(!isWarningPopupOpen);\n                setIsMediaFolderLinkChanged(false);\n                setMediaFolderLink({ ...mediaFolderLink, Link: originalMediaFolderLink.current });\n              }}\n            >\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nEditLinkModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  closeModal: PropTypes.func.isRequired,\n  updateLink: PropTypes.func.isRequired,\n  userProfile: PropTypes.object.isRequired,\n};\n\nexport default connect(null, { hasPermission })(EditLinkModal);\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileModal/EditLinkModal.test.jsx","messages":[{"ruleId":"testing-library/no-render-in-lifecycle","severity":2,"message":"Forbidden usage of `render` within testing framework `beforeEach` setup","line":53,"column":17,"nodeType":"Identifier","messageId":"noRenderInSetup","endLine":53,"endColumn":35},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getAllByRole` instead","line":58,"column":22,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":58,"endColumn":34},{"ruleId":"testing-library/no-render-in-lifecycle","severity":2,"message":"Forbidden usage of `render` within testing framework `beforeEach` setup","line":82,"column":17,"nodeType":"Identifier","messageId":"noRenderInSetup","endLine":82,"endColumn":35},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":86,"column":44,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":86,"column":44,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getAllByLabelText` instead","line":89,"column":38,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":89,"endColumn":55},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByRole` instead","line":95,"column":33,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":95,"endColumn":42},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByPlaceholderText` instead","line":96,"column":40,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":96,"endColumn":60},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByDisplayValue` instead","line":97,"column":39,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":97,"endColumn":56},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByPlaceholderText` instead","line":104,"column":39,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":104,"endColumn":59},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTestId` instead","line":106,"column":22,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":106,"endColumn":33},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByPlaceholderText` instead","line":110,"column":39,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":110,"endColumn":59},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTestId` instead","line":112,"column":22,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":112,"endColumn":33},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByText` instead","line":114,"column":22,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":114,"endColumn":31},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByPlaceholderText` instead","line":118,"column":39,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":118,"endColumn":59},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByText` instead","line":119,"column":36,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":119,"endColumn":45},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getAllByText` instead","line":127,"column":34,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":127,"endColumn":46},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByDisplayValue` instead","line":128,"column":38,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":128,"endColumn":55},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByDisplayValue` instead","line":129,"column":41,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":129,"endColumn":58},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByPlaceholderText` instead","line":138,"column":35,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":138,"endColumn":55},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByText` instead","line":139,"column":36,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":139,"endColumn":45},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByTestId` instead","line":142,"column":22,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":142,"endColumn":33},{"ruleId":"testing-library/no-render-in-lifecycle","severity":2,"message":"Forbidden usage of `render` within testing framework `beforeEach` setup","line":166,"column":17,"nodeType":"Identifier","messageId":"noRenderInSetup","endLine":166,"endColumn":35},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByLabelText` instead","line":170,"column":38,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":170,"endColumn":52},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByPlaceholderText` instead","line":171,"column":39,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":171,"endColumn":59},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByText` instead","line":172,"column":36,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":172,"endColumn":45},{"ruleId":"testing-library/prefer-screen-queries","severity":2,"message":"Avoid destructuring queries from `render` result, use `screen.getByPlaceholderText` instead","line":179,"column":39,"nodeType":"Identifier","messageId":"preferScreenQueries","endLine":179,"endColumn":59}],"suppressedMessages":[],"errorCount":27,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { fireEvent, within } from '@testing-library/react';\nimport EditLinkModal from '~/components/UserProfile/UserProfileModal/EditLinkModal';\nimport { configureStore } from 'redux-mock-store';\nimport thunk from 'redux-thunk';\nimport {\n  rolesMock,\n  authMock,\n  userProfileMock,\n  userProjectMock,\n  themeMock,\n} from '__tests__/mockStates';\nimport { renderWithProvider } from '__tests__/utils';\n\nconst VALID_URL = 'https://valid.url';\nconst INVALID_URL = 'invalid.';\n\nconst EmptyLinkUserProfile = {\n  adminLinks: [],\n  personlLinks: [],\n  mediaUrl: undefined,\n};\nconst filledUserProfile = {\n  adminLinks: [\n    { Name: 'Google Doc', Link: VALID_URL },\n    { Name: 'Media Folder', Link: VALID_URL },\n    { Name: 'New admin link', Link: 'https://admin.com' },\n  ],\n  personalLinks: [{ Name: 'New personal link', Link: 'https://personal.com' }],\n  mediaUrl: VALID_URL,\n};\n\ndescribe('EditLinkModal permission checks', () => {\n  const mockStore = configureStore([thunk]);\n  let store;\n  let component;\n  const props = {\n    isOpen: true,\n    closeModal: vi.fn(),\n    updateLink: vi.fn(),\n    userProfile: filledUserProfile,\n  };\n\n  beforeEach(() => {\n    store = mockStore({\n      auth: { ...authMock, isAdmin: false, user: { ...authMock.user, role: 'Volunteer' } },\n      userProjects: userProjectMock,\n      userProfile: userProfileMock,\n      role: rolesMock.role,\n      theme: themeMock,\n    });\n\n    component = renderWithProvider(<EditLinkModal {...props} />, { store });\n  });\n\n  it('should not display admin links input area for Volunteer', () => {\n    // Two input elements for one exisintg Personal Link, another two for new added link\n    expect(component.getAllByRole('textbox').length).toBe(4);\n  });\n});\n\ndescribe('EditLinkModal with admin links and personal links', () => {\n  const mockStore = configureStore([thunk]);\n  let store;\n  let component;\n  const props = {\n    isOpen: true,\n    closeModal: vi.fn(),\n    updateLink: vi.fn(),\n    userProfile: filledUserProfile,\n  };\n\n  beforeEach(() => {\n    store = mockStore({\n      auth: authMock,\n      userProjects: userProjectMock,\n      userProfile: userProfileMock,\n      role: rolesMock.role,\n      theme: themeMock,\n    });\n\n    component = renderWithProvider(<EditLinkModal {...props} />, { store });\n  });\n\n  it('should add new admin link when add button is clicked', () => {\n    const newAdminLinkContainer = document.querySelector('.new-admin-links');\n    const nameInput = within(newAdminLinkContainer).getByPlaceholderText('enter name');\n    const linkInput = within(newAdminLinkContainer).getByPlaceholderText('enter link');\n    const adminAddButton = component.getAllByLabelText('add-admin-link-button');\n\n    fireEvent.change(nameInput, { target: { value: 'New Admin Link' } });\n    fireEvent.change(linkInput, { target: { value: 'https://example.com/newadminlink' } });\n    fireEvent.click(adminAddButton[0]);\n\n    const delButton = component.getByRole('button', { name: 'x' });\n    const newAdminLinkName = component.getByPlaceholderText('Link Name');\n    const newAdminLinkURL = component.getByDisplayValue('https://example.com/newadminlink');\n    expect(delButton).toBeInTheDocument();\n    expect(newAdminLinkName).toBeInTheDocument();\n    expect(newAdminLinkURL).toBeInTheDocument();\n  });\n\n  it('should popup warning when media url is changed', () => {\n    const mediaFolderLink = component.getByPlaceholderText('Enter Dropbox link');\n    fireEvent.change(mediaFolderLink, { target: { value: 'INVALID_URL' } });\n    expect(component.getByTestId('popup-warning')).toBeInTheDocument();\n  });\n\n  it('should display diff warning when editing media url', () => {\n    const mediaFolderLink = component.getByPlaceholderText('Enter Dropbox link');\n    fireEvent.change(mediaFolderLink, { target: { value: 'changed url' } });\n    expect(component.getByTestId('diff-media-url-warning')).toBeInTheDocument();\n    // Display original link\n    expect(component.getByText(VALID_URL)).toBeInTheDocument();\n  });\n\n  it('should restore media url after \"Cancel\" button is clicked', () => {\n    const mediaFolderLink = component.getByPlaceholderText('Enter Dropbox link');\n    const cancelButton = component.getByText('Cancel');\n    //  Edit existing media url\n    fireEvent.change(mediaFolderLink, { target: { value: 'changed url' } });\n    fireEvent.click(cancelButton);\n    expect(mediaFolderLink.value).toBe(VALID_URL);\n  });\n\n  it('should remove existing links after delete button is clicked', () => {\n    const delButtons = component.getAllByText('x');\n    const addedAdminLink = component.getByDisplayValue('New admin link');\n    const addedPersonalLink = component.getByDisplayValue('New personal link');\n    delButtons.forEach(button => {\n      fireEvent.click(button);\n    });\n    expect(addedAdminLink).not.toBeInTheDocument();\n    expect(addedPersonalLink).not.toBeInTheDocument();\n  });\n\n  it('should display warning when invalid url is typed', () => {\n    const googleInput = component.getByPlaceholderText('Enter Google Doc link');\n    const updateButton = component.getByText('Update');\n    fireEvent.change(googleInput, { target: { value: INVALID_URL } });\n    fireEvent.click(updateButton);\n    expect(component.getByTestId('invalid-url-warning')).toBeInTheDocument();\n  });\n});\n\ndescribe('Edit Link Modal with empty links', () => {\n  const mockStore = configureStore([thunk]);\n  let store;\n  let component;\n  const props = {\n    isOpen: true,\n    closeModal: vi.fn(),\n    updateLink: vi.fn(),\n    userProfile: EmptyLinkUserProfile,\n  };\n\n  beforeEach(() => {\n    store = mockStore({\n      auth: authMock,\n      userProjects: userProjectMock,\n      userProfile: userProfileMock,\n      role: rolesMock.role,\n      theme: themeMock,\n    });\n\n    component = renderWithProvider(<EditLinkModal {...props} />, { store });\n  });\n\n  it('should render special admin link labels when empty admin links', () => {\n    const googleDocLabel = component.getByLabelText('Google Doc');\n    const mediaFolderLink = component.getByPlaceholderText('Enter Dropbox link');\n    const updateButton = component.getByText('Update');\n    expect(googleDocLabel).toBeEmptyDOMElement;\n    expect(mediaFolderLink).toBeEmptyDOMElement;\n    expect(updateButton).toBeDisabled();\n  });\n\n  it('should not popup warning when empty media url is editing', () => {\n    const mediaFolderLink = component.getByPlaceholderText('Enter Dropbox link');\n    fireEvent.change(mediaFolderLink, { target: { value: 'INVALID_URL' } });\n    expect(component.container).not.toHaveAttribute('data-testid', 'popup-warning');\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileModal/UserProfileModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileModal/__tests__/EditConfirmModal.test.jsx","messages":[{"ruleId":"testing-library/no-render-in-lifecycle","severity":2,"message":"Forbidden usage of `render` within testing framework `beforeEach` setup","line":23,"column":5,"nodeType":"Identifier","messageId":"noRenderInSetup","endLine":23,"endColumn":11}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { screen, render, fireEvent } from '@testing-library/react';\nimport { userProfileMock } from '../../../../__tests__/mockStates';\nimport { configureStore } from 'redux-mock-store';\nimport { Provider } from 'react-redux';\nimport EditConfirmModal from '../EditConfirmModal';\n\nconst closeModalMock = vi.fn();\ndescribe('UserProfileModal', () => {\n  const mockStore = configureStore([]);\n  const initialState = {\n    theme: { darkMode: false },\n  };\n  const store = mockStore(initialState);\n\n  const props = {\n    modalTitle: 'Success!',\n    modalMessage: '',\n    userProfile: userProfileMock,\n    isOpen: true,\n  };\n  beforeEach(() => {\n    render(\n      <Provider store={store}>\n        <EditConfirmModal {...props} closeModal={closeModalMock} />\n      </Provider>,\n    );\n  });\n\n  it('should render edit confirm modal', () => {\n    expect(screen.getByText(/success!/i)).toBeInTheDocument();\n  });\n\n  it('should call closeModal function once the user clicks the close buttons', async () => {\n    screen.getAllByRole('button', { name: /close/i }).forEach(button => fireEvent.click(button));\n    expect(closeModalMock).toHaveBeenCalled();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileModal/__tests__/USerProfileModal.test.jsx","messages":[{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":142,"column":36,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":142,"column":36,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":147,"column":35,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":147,"column":35,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":164,"column":39,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":164,"column":39,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":170,"column":42,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":170,"column":42,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":180,"column":42,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":180,"column":42,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":225,"column":26,"nodeType":"MemberExpression","messageId":"noNodeAccess"}],"suppressedMessages":[],"errorCount":11,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport '@testing-library/jest-dom/extend-expect';\nimport UserProfileModal from '..';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { configureStore } from 'redux-mock-store';\nimport { rolesMock } from '__tests__/mockStates';\n\nconst mockStore = configureStore([thunk]);\n\nconst auth = {\n  user: {\n    permissions: {\n      frontPermissions: [],\n      backPermissions: [],\n    },\n    role: 'Manager',\n    userid: 'user123',\n  },\n};\n\nconst theme = { darkMode: false };\n\nconst userProfile = {\n  infringements: [\n    {\n      _id: 'user123',\n      date: '2024-04-04T12:00:00.000+00:00',\n      createdDate: '2024-04-04T12:01:00.000+00:00',\n      description: 'This is a test blue square',\n    },\n  ],\n  personalLinks: [],\n  adminLinks: [],\n};\n\nlet store;\n\nbeforeEach(() => {\n  store = mockStore({\n    auth: auth,\n    userProfile: userProfile,\n    theme: theme,\n    role: { roles: rolesMock.role.roles },\n  });\n});\n\nvi.mock('axios');\nconst modifyBlueSquares = vi.fn();\nconst closeModal = vi.fn();\nconst updateLink = vi.fn();\n\nconst renderComponent = (testStore, type, isOpen) => {\n  return render(\n    <Provider store={testStore}>\n      <UserProfileModal\n        isOpen={isOpen}\n        closeModal={closeModal}\n        updateLink={updateLink}\n        modifyBlueSquares={modifyBlueSquares}\n        modalTitle={'modal title'}\n        modalMessage={'modal message'}\n        type={type}\n        userProfile={userProfile}\n        id=\"user123\"\n      />\n    </Provider>,\n  );\n};\n\ndescribe('UserProfileModal component', () => {\n  it('renders without crashing', () => {\n    renderComponent(store, 'viewBlueSquare', true);\n  });\n  it('check if modal is open when isOpen is set to true', () => {\n    renderComponent(store, 'viewBlueSquare', true);\n    expect(screen.getByRole('document')).toBeInTheDocument();\n  });\n  it('check if modal is closed when isOpen is set to false', () => {\n    renderComponent(store, 'viewBlueSquare', false);\n    expect(screen.queryByRole('document')).not.toBeInTheDocument();\n  });\n  it('check modal title displays as expected', () => {\n    renderComponent(store, 'viewBlueSquare', true);\n    expect(screen.getByText('modal title')).toBeInTheDocument();\n  });\n  it('check if Cancel button works as expected when the type is not save', () => {\n    renderComponent(store, 'viewBlueSquare', true);\n    const cancelButton = screen.getByText('Cancel');\n    fireEvent.click(cancelButton);\n    expect(closeModal).toHaveBeenCalled();\n  });\n  it('check if Close button works as expected when the type is save', () => {\n    renderComponent(store, 'save', true);\n    const closeButton = screen.getByText('Close');\n    fireEvent.click(closeButton);\n    expect(closeModal).toHaveBeenCalled();\n  });\n  it('check if modal message gets displayed as expected when the type is save', () => {\n    renderComponent(store, 'save', true);\n    expect(screen.getByText('modal message')).toBeInTheDocument();\n  });\n  it('check if Resize button works as expected when type is image', () => {\n    renderComponent(store, 'image', true);\n    const windowOpenSpy = vi.spyOn(window, 'open').mockImplementation(() => {});\n    const resizeButton = screen.getByText('Resize');\n    fireEvent.click(resizeButton);\n    expect(windowOpenSpy).toHaveBeenCalledWith('https://picresize.com/');\n    windowOpenSpy.mockRestore();\n  });\n  it('check if Resize button does not get displayed when type is not image', () => {\n    renderComponent(store, 'save', true);\n    expect(screen.queryByText('Resize')).not.toBeInTheDocument();\n  });\n  it('check type updateLink when putUserProfile permission is present', async () => {\n    const testAuth = {\n      user: {\n        permissions: {\n          frontPermissions: ['putUserProfile'],\n          backPermissions: [],\n        },\n        role: 'Manager',\n        userid: 'user123',\n      },\n    };\n\n    const testStore = mockStore({\n      auth: testAuth,\n      userProfile: userProfile,\n      theme: theme,\n      role: { roles: rolesMock.role.roles },\n    });\n\n    renderComponent(testStore, 'updateLink', true);\n\n    expect(screen.getByText('Admin Links:')).toBeInTheDocument();\n    expect(screen.getAllByText('Name')[0]).toBeInTheDocument();\n    expect(screen.getAllByText('Link URL')[0]).toBeInTheDocument();\n    expect(screen.getAllByText('+ ADD LINK:')[0]).toBeInTheDocument();\n\n    const linkName = document.body.querySelector('[id=\"linkName\"]');\n\n    fireEvent.change(linkName, { target: { value: 'link 1' } });\n    expect(linkName.value).toBe('link 1');\n\n    const linkURL = document.body.querySelector('[id=\"linkURL\"');\n    fireEvent.change(linkURL, { target: { value: 'http://link1.com' } });\n    expect(linkURL.value).toBe('http://link1.com');\n\n    const updateButton = screen.getByText('Update');\n    fireEvent.click(updateButton);\n    expect(updateLink).toHaveBeenCalled();\n\n    expect(screen.getByText('Personal Links:')).toBeInTheDocument();\n  });\n  it('check type updateLink when putUserProfile permission is not present', () => {\n    renderComponent(store, 'addBlueSquare', true);\n    expect(screen.queryByText('Admin Links:')).not.toBeInTheDocument();\n  });\n  it('check if add blue square works as expected when type is set to addBlueSquare', () => {\n    renderComponent(store, 'addBlueSquare', true);\n\n    const dateElement = document.body.querySelector('[id=\"date\"]');\n    fireEvent.change(dateElement, { target: { value: '2024-03-15' } });\n\n    expect(screen.getByText('Date')).toBeInTheDocument();\n    expect(screen.getByText('Summary')).toBeInTheDocument();\n\n    const summaryElement = document.body.querySelector('[id=\"summary\"]');\n    fireEvent.change(summaryElement, { target: { value: 'This is a test summary' } });\n    expect(summaryElement.value).toBe('This is a test summary');\n\n    const addBlueSquareButton = screen.getByText('Submit');\n    fireEvent.click(addBlueSquareButton);\n    expect(modifyBlueSquares).toHaveBeenCalled();\n  });\n  it('check if modify blue square works a s expected when type is set to modBlueSquare', () => {\n    renderComponent(store, 'modBlueSquare', true);\n    const summaryElement = document.body.querySelector('[id=\"summary\"]');\n    fireEvent.change(summaryElement, {\n      target: { value: 'This is a second test blue square summary' },\n    });\n    expect(summaryElement.value).toBe('This is a second test blue square summary');\n\n    const updateButton = screen.getByText('Update');\n    fireEvent.click(updateButton);\n    expect(screen.getByText('This is a second test blue square summary')).toBeInTheDocument();\n    expect(modifyBlueSquares).toHaveBeenCalled();\n\n    const cancelButton = screen.getByText('Cancel');\n    fireEvent.click(cancelButton);\n    expect(modifyBlueSquares).toHaveBeenCalled();\n  });\n\n  it('check if view blue square works as expected whe type is set to viewBlueSquare', () => {\n    renderComponent(store, 'viewBlueSquare', true);\n    expect(screen.getByText('Date:')).toBeInTheDocument();\n    expect(screen.getByText(userProfile.infringements[0].date)).toBeInTheDocument();\n\n    expect(screen.getByText('Created Date:')).toBeInTheDocument();\n    expect(screen.getByText(userProfile.infringements[0].createdDate)).toBeInTheDocument();\n\n    expect(screen.getByText('Summary')).toBeInTheDocument();\n    expect(screen.getByText(userProfile.infringements[0].description)).toBeInTheDocument();\n  });\n  it('check if close button gets displayed when type is set to save', () => {\n    renderComponent(store, 'save', true);\n    const closeButton = screen.getByText('Close');\n    fireEvent.click(closeButton);\n\n    expect(screen.getByText('modal message')).toBeInTheDocument();\n    expect(closeModal).toHaveBeenCalled();\n  });\n  it('check if cancel button gets displayed when type is not set to save', () => {\n    renderComponent(store, 'image', true);\n    const cancelButton = screen.getByText('Cancel');\n    fireEvent.click(cancelButton);\n\n    expect(screen.getByText('modal message')).toBeInTheDocument();\n    expect(closeModal).toHaveBeenCalled();\n  });\n  it('check if add blue square do not get displayed type is not set to addBlueSquare', () => {\n    renderComponent(store, 'image', true);\n    expect(document.body.querySelector(\"[id='addBlueSquare']\")).not.toBeInTheDocument();\n  });\n  it('check if modify blue square do not get displayed type is not set to modBlueSquare', () => {\n    renderComponent(store, 'image', true);\n    expect(screen.queryByText('Update')).not.toBeInTheDocument();\n  });\n  it('check if view blue square do not get displayed type is not set to viewBlueSquare', () => {\n    renderComponent(store, 'image', true);\n    expect(screen.queryByText(`Date:${userProfile.infringements[0].date}`)).not.toBeInTheDocument();\n    expect(\n      screen.queryByText(`Created Date:${userProfile.infringements[0].createdDate}`),\n    ).not.toBeInTheDocument();\n    expect(screen.queryByText('Summary')).not.toBeInTheDocument();\n    expect(\n      screen.queryByText(`${userProfile.infringements[0].description}`),\n    ).not.toBeInTheDocument();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileModal/confirmRemoveModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileModal/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/UserProfileModal/suggestedProfileModal.jsx","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":35,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":35,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1257,1276],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":46,"column":13,"nodeType":"JSXOpeningElement","endLine":50,"endColumn":14},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":46,"column":13,"nodeType":"JSXOpeningElement","endLine":50,"endColumn":14}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\nimport { Modal, ModalHeader, ModalBody, Button } from 'reactstrap';\nimport './UserProfileModal.css'; // For custom styling\nimport axios from 'axios';\nimport { ENDPOINTS } from 'utils/URL';\nimport { toast } from 'react-toastify';\n\nconst ProfileImageModal = ({ isOpen, toggleModal, userProfile }) => {\n  const [selectedImage, setSelectedImage] = useState(null);\n  const suggestedProfilePics = userProfile.suggestedProfilePics;\n  const handleImageSelect = image => {\n    setSelectedImage(image); // Store the selected image info\n  };\n\n  function getImageSource(image) {\n    if (image.nitro_src !== null && image.nitro_src !== undefined) {\n      return image.nitro_src;\n    } else if (image.src && image.src.startsWith('http')) {\n      return image.src;\n    } else if (image.data_src !== undefined) {\n      return image.data_src;\n    }\n    return null; // Return null if no valid source is found\n  }\n\n  const updateProfileImage = async () => {\n    try {\n      let image = getImageSource(selectedImage);\n      await axios.put(ENDPOINTS.USERS_UPDATE_PROFILE_FROM_WEBSITE, {\n        selectedImage: image,\n        user_id: userProfile._id,\n      });\n      toast.success('Profile Image Updated');\n    } catch (error) {\n      console.log(error);\n      toast.error('Image Update Failed');\n    }\n  };\n\n  return (\n    <Modal isOpen={isOpen} toggle={toggleModal}>\n      <ModalHeader toggle={toggleModal}>Select a Profile Image</ModalHeader>\n      <ModalBody>\n        <div className=\"suggestedProfileLinks scrollable-container\">\n          {suggestedProfilePics.map((image, index) => (\n            <div\n              key={index}\n              className={`suggestedProfileTile ${selectedImage === image ? 'selected' : ''}`}\n              onClick={() => handleImageSelect(image)}\n            >\n              <img src={getImageSource(image)} alt={image.alt} />\n            </div>\n          ))}\n        </div>\n\n        <div className=\"button-group\">\n          <Button color=\"secondary\" onClick={toggleModal} className=\"modal-button\">\n            Close\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              if (selectedImage) {\n                toggleModal(); // Close the modal after setting the image\n                updateProfileImage();\n              }\n            }}\n            className=\"modal-button\"\n          >\n            Set Image\n          </Button>\n        </div>\n      </ModalBody>\n    </Modal>\n  );\n};\n\nexport default ProfileImageModal;\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/VolunteeringTimeTab/HistoryModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/VolunteeringTimeTab/VolunteeringTimeTab.jsx","messages":[{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":175,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":175,"endColumn":80},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":179,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":179,"endColumn":80},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":339,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":339,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[10696,10721],"text":""},"desc":"Remove the console.log()."}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":353,"column":9,"nodeType":"MemberExpression","messageId":"unexpected","endLine":353,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[11113,11138],"text":""},"desc":"Remove the console.log()."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState, useEffect } from 'react';\nimport { Row, Label, Input, Col, Button, FormGroup, FormFeedback } from 'reactstrap';\nimport moment from 'moment-timezone';\nimport { capitalize } from 'lodash';\nimport { ENDPOINTS } from '~/utils/URL';\nimport axios from 'axios';\nimport HistoryModal from './HistoryModal';\nimport './timeTab.css';\nimport { boxStyle, boxStyleDark } from '~/styles';\nimport {\n  formatDate,\n  formatDateYYYYMMDD,\n  formatDateMMDDYYYY,\n  CREATED_DATE_CRITERIA,\n} from '~/utils/formatDate';\n\nconst MINIMUM_WEEK_HOURS = 0;\nconst MAXIMUM_WEEK_HOURS = 168;\nconst darkModeClass = 'bg-darkmode-liblack text-light border-0';\n\nconst startEndDateValidation = props => {\n  return (\n    props.userProfile.startDate > props.userProfile.endDate && props.userProfile.endDate !== ''\n  );\n};\n\nconst StartDate = props => {\n  const { darkMode, startDateAlert } = props;\n  //determine which date to display\n  const displayDate = props.userProfile.isStartDateManuallyModified\n    ? props.userProfile.startDate\n    : props.calculatedStartDate || props.userProfile.startDate;\n\n  if (!props.canEdit) {\n    return (\n      <p className={darkMode ? 'text-azure' : ''}>\n        {!displayDate ? 'N/A' : formatDate(displayDate)}\n      </p>\n    );\n  }\n  return (\n    <FormGroup>\n      <Input\n        type=\"date\"\n        name=\"StartDate\"\n        id=\"startDate\"\n        className={`${startEndDateValidation(props) ? 'border-error-validation' : ''} ${\n          darkMode ? 'bg-darkmode-liblack text-light border-0 calendar-icon-dark' : ''\n        }`}\n        value={displayDate}\n        min={\n          props.userProfile.createdDate < CREATED_DATE_CRITERIA ? '' : props.userProfile.createdDate\n        }\n        onChange={e => {\n          props.setUserProfile({ ...props.userProfile, startDate: e.target.value });\n          props.onStartDateComponent(e.target.value);\n        }}\n        placeholder=\"Start Date\"\n        invalid={!props.canEdit}\n        max={props.userProfile.endDate || '9999-12-31'}\n      />\n      {startDateAlert && <FormFeedback style={{ display: 'block' }}>{startDateAlert}</FormFeedback>}\n    </FormGroup>\n  );\n};\n\nconst EndDate = props => {\n  const { darkMode, endDateAlert } = props;\n\n  if (!props.canEdit) {\n    return (\n      <p className={darkMode ? 'text-azure' : ''}>\n        {props.userProfile.endDate ? formatDate(props.userProfile.endDate) : 'N/A'}\n      </p>\n    );\n  }\n\n  return (\n    <FormGroup>\n      <Input\n        className={`${startEndDateValidation(props) ? 'border-error-validation' : ''} ${\n          darkMode ? 'bg-darkmode-liblack text-light border-0 calendar-icon-dark' : ''\n        }`}\n        type=\"date\"\n        name=\"EndDate\"\n        id=\"endDate\"\n        value={props.userProfile.endDate ? props.userProfile.endDate : ''}\n        onChange={e => {\n          props.setUserProfile({ ...props.userProfile, endDate: e.target.value });\n          props.onEndDateComponent(e.target.value);\n        }}\n        placeholder=\"End Date\"\n        invalid={!props.canEdit}\n        min={props.userProfile.startDate ? props.userProfile.startDate : ''}\n        max={'9999-12-31'}\n      />\n      {endDateAlert && <FormFeedback style={{ display: 'block' }}>{endDateAlert}</FormFeedback>}\n    </FormGroup>\n  );\n};\n\nconst WeeklySummaryOptions = props => {\n  const { darkMode } = props;\n\n  if (!props.canEdit) {\n    return (\n      <p className={darkMode ? 'text-azure' : ''}>\n        {props.userProfile.weeklySummaryOption ??\n          (props.userProfile.weeklySummaryNotReq ? 'Not Required' : 'Required')}\n      </p>\n    );\n  }\n\n  const summaryOptions = [\n    { value: 'Required', text: 'Required' },\n    { value: 'Not Required', text: 'Not Required (Slate Gray)' },\n    { value: 'Team Fabulous', text: 'Team Fabulous (Fuschia)' },\n    { value: 'Team Marigold', text: 'Team Marigold (Orange)' },\n    { value: 'Team Luminous', text: 'Team Luminous (Yellow)' },\n    { value: 'Team Lush', text: 'Team Lush (Green)' },\n    { value: 'Team Skye', text: 'Team Skye (Blue)' },\n    { value: 'Team Azure', text: 'Team Azure (Indigo)' },\n    { value: 'Team Amethyst', text: 'Team Amethyst (Purple)' },\n  ];\n\n  const handleOnChange = e => {\n    let temp = { ...props.userProfile };\n    temp.weeklySummaryOption = e.target.value;\n    if (e.target.value === 'Not Required') {\n      temp.weeklySummaryNotReq = true;\n    } else {\n      temp.weeklySummaryNotReq = false;\n    }\n    props.setUserProfile(temp);\n  };\n\n  return (\n    <FormGroup>\n      <select\n        name=\"WeeklySummaryOptions\"\n        id=\"weeklySummaryOptions\"\n        className={`form-control ${darkMode ? darkModeClass : ''}`}\n        disabled={!props.canEdit}\n        value={\n          props.userProfile.weeklySummaryOption ??\n          (props.userProfile.weeklySummaryNotReq ? 'Not Required' : 'Required')\n        }\n        onChange={handleOnChange}\n      >\n        {summaryOptions.map(({ value, text }) => (\n          <option key={value} value={value}>\n            {text}\n          </option>\n        ))}\n      </select>\n    </FormGroup>\n  );\n};\n\nconst WeeklyCommittedHours = props => {\n  //Do Not change the property name \"weeklycommittedHours\"\n  //Otherwise it will not update in the backend.\n\n  const { darkMode } = props;\n\n  if (!props.canEdit) {\n    return <p className={darkMode ? 'text-azure' : ''}>{props.userProfile.weeklycommittedHours}</p>;\n  }\n  const handleChange = e => {\n    // Max: 168 hrs  Min: 0 hr\n    // Convert value from string into easy number\n    const value = parseInt(e.target.value);\n    if (value > MAXIMUM_WEEK_HOURS) {\n      // Check if Value is greater than maximum hours and set it to maximum hours if needed\n      alert(`You can't commit more than ${MAXIMUM_WEEK_HOURS} hours per week.`);\n      props.setUserProfile({ ...props.userProfile, weeklycommittedHours: MAXIMUM_WEEK_HOURS });\n    } else if (value < MINIMUM_WEEK_HOURS) {\n      //Check if value is less than minimum hours and set it to minimum hours if needed\n      alert(`You can't commit less than ${MINIMUM_WEEK_HOURS} hours per week.`);\n      props.setUserProfile({ ...props.userProfile, weeklycommittedHours: MINIMUM_WEEK_HOURS });\n    } else {\n      //update weekly hours whatever numbers in the input\n      props.setUserProfile({ ...props.userProfile, weeklycommittedHours: value });\n    }\n  };\n\n  return (\n    <Input\n      type=\"number\"\n      min={MINIMUM_WEEK_HOURS - 1}\n      max={MAXIMUM_WEEK_HOURS + 1}\n      name=\"weeklycommittedHours\"\n      id=\"weeklycommittedHours\"\n      data-testid=\"weeklycommittedHours\"\n      value={props.userProfile.weeklycommittedHours}\n      onChange={e => handleChange(e)}\n      placeholder=\"Weekly Committed Hours\"\n      className={darkMode ? darkModeClass : ''}\n    />\n  );\n};\n\nconst MissedHours = props => {\n  const { darkMode } = props;\n\n  if (!props.canEdit) {\n    return <p className={darkMode ? 'text-azure' : ''}>{props.userProfile.missedHours ?? 0}</p>;\n  }\n  return (\n    <Input\n      type=\"number\"\n      name=\"missedHours\"\n      id=\"missedHours\"\n      data-testid=\"missedHours\"\n      value={props.userProfile.missedHours ?? 0}\n      className={darkMode ? darkModeClass : ''}\n      onChange={e => {\n        props.setUserProfile({\n          ...props.userProfile,\n          missedHours: Math.max(Number(e.target.value), 0),\n        });\n      }}\n      placeholder=\"Additional Make-up Hours This Week\"\n    />\n  );\n};\n\nconst TotalIntangibleHours = props => {\n  const { darkMode } = props;\n\n  if (!props.canEdit) {\n    return <p className={darkMode ? 'text-azure' : ''}>{props.userProfile.totalIntangibleHrs}</p>;\n  }\n  return (\n    <Input\n      type=\"number\"\n      name=\"totalIntangibleHours\"\n      id=\"totalIntangibleHours\"\n      step=\".01\"\n      data-testid=\"totalIntangibleHours\"\n      value={props.userProfile.totalIntangibleHrs ?? 0}\n      className={darkMode ? darkModeClass : ''}\n      onChange={e => {\n        const newValue = Math.max(Number(e.target.value), 0).toFixed(2);\n        props.setUserProfile({\n          ...props.userProfile,\n          totalIntangibleHrs: Number(newValue),\n        });\n      }}\n      placeholder=\"Total Intangible Hours\"\n    />\n  );\n};\n\n/**\n *\n * @param {*} props.userProfile\n * @param {*} props.isUserSelf\n * @param {Function} handleUserProfile\n *\n * @returns\n */\nconst ViewTab = props => {\n  const {\n    userProfile,\n    setUserProfile,\n    role,\n    canEdit,\n    canUpdateSummaryRequirements,\n    darkMode,\n  } = props;\n  const [totalTangibleHoursThisWeek, setTotalTangibleHoursThisWeek] = useState(0);\n  const [totalTangibleHours, setTotalTangibleHours] = useState(0);\n  const { hoursByCategory, totalIntangibleHrs } = userProfile;\n  const [historyModal, setHistoryModal] = useState(false);\n  const [startDateAlert, setStartDateAlert] = useState('');\n  const [endDateAlert, setEndDateAlert] = useState('');\n\n  const handleStartDates = async startDate => {\n    // if(!userProfile.isFirstTimelog) {\n    //   alert('This user has already logged time in the system. Are you sure you want to change the start date?');\n    // }\n    props.onStartDate(startDate);\n  };\n\n  const handleEndDates = async endDate => {\n    props.onEndDate(endDate);\n  };\n\n  useEffect(() => {\n    sumOfCategoryHours();\n  }, [hoursByCategory]);\n\n  const calculateTotalHrsForPeriod = timeEntries => {\n    let hours = { totalTangibleHrs: 0, totalIntangibleHrs: 0 };\n    if (timeEntries.length < 1) return hours;\n\n    for (let i = 0; i < timeEntries.length; i++) {\n      const timeEntry = timeEntries[i];\n      if (timeEntry.isTangible) {\n        hours.totalTangibleHrs += parseFloat(timeEntry.hours) + parseFloat(timeEntry.minutes) / 60;\n      } else {\n        hours.totalIntangibleHrs +=\n          parseFloat(timeEntry.hours) + parseFloat(timeEntry.minutes) / 60;\n      }\n    }\n    return hours;\n  };\n\n  //This function is return totalTangibleHours which is the sum of all the tangible categories\n  const sumOfCategoryHours = () => {\n    const hours = Object.values(hoursByCategory).reduce((prev, curr) => prev + curr, 0);\n    setTotalTangibleHours(hours.toFixed(2));\n  };\n\n  const toggleHistoryModal = () => {\n    setHistoryModal(!historyModal);\n  };\n\n  useEffect(() => {\n    //Get Total Tangible Hours this week\n    const startOfWeek = moment()\n      .tz('America/Los_Angeles')\n      .startOf('week')\n      .format('YYYY-MM-DD');\n    const endOfWeek = moment()\n      .tz('America/Los_Angeles')\n      .endOf('week')\n      .format('YYYY-MM-DD');\n\n    axios\n      .get(ENDPOINTS.TIME_ENTRIES_PERIOD(userProfile._id, startOfWeek, endOfWeek))\n      .then(res => {\n        const timeEntries = res.data;\n        const output = calculateTotalHrsForPeriod(timeEntries);\n        setTotalTangibleHoursThisWeek(output.totalTangibleHrs.toFixed(2));\n      })\n      .catch(err => {\n        console.log(err.message);\n      });\n\n    //Get total tangible & intangible hours\n    const createdDate = formatDateYYYYMMDD(userProfile.createdDate);\n    const today = moment().format('YYYY-MM-DD');\n\n    axios\n      .get(ENDPOINTS.TIME_ENTRIES_PERIOD(userProfile._id, createdDate, today))\n      .then(res => {\n        const timeEntries = res.data;\n        sumOfCategoryHours();\n      })\n      .catch(err => {\n        console.log(err.message);\n      });\n  }, []);\n\n  const roundToTwo = num => {\n    return +(Math.round(num * 100) / 100);\n  };\n\n  const handleOnChangeHours = (e, key) => {\n    let value = e.target.value;\n    if (!value) value = 0;\n    setUserProfile({\n      ...userProfile,\n      hoursByCategory: {\n        ...userProfile.hoursByCategory,\n        [key]: Number(value),\n      },\n    });\n  };\n\n  useEffect(() => {\n    if (userProfile.startDate === '') {\n      setStartDateAlert('Invalid date');\n    } else if (\n      userProfile.createdDate >= CREATED_DATE_CRITERIA &&\n      userProfile.startDate < userProfile.createdDate\n    ) {\n      setStartDateAlert('The start date is before the account created date');\n    } else {\n      setStartDateAlert('');\n    }\n  }, [userProfile.startDate, userProfile.createdDate]);\n\n  useEffect(() => {\n    if (userProfile.endDate !== '' && userProfile.endDate < userProfile.startDate) {\n      setEndDateAlert('The end date is before the start date');\n    } else {\n      setEndDateAlert('');\n    }\n  }, [userProfile.startDate, userProfile.endDate]);\n\n  return (\n    <div data-testid=\"volunteering-time-tab\">\n      <Row className=\"volunteering-time-row\">\n        <Col md=\"6\">\n          <Label className={`hours-label ${darkMode ? 'text-light' : ''}`}>\n            Account Created Date\n          </Label>\n        </Col>\n        <Col md=\"6\">\n          <p className={darkMode ? 'text-azure' : ''} style={{ textAlign: 'left' }}>\n            {formatDateMMDDYYYY(userProfile.createdDate)}\n          </p>\n        </Col>\n      </Row>\n      <Row className=\"volunteering-time-row\">\n        <Col md=\"6\">\n          <Label className={`hours-label ${darkMode ? 'text-light' : ''}`}>Start Date</Label>\n        </Col>\n        <Col md=\"6\">\n          <StartDate\n            role={role}\n            userProfile={userProfile}\n            setUserProfile={setUserProfile}\n            canEdit={canEdit}\n            onStartDateComponent={handleStartDates}\n            darkMode={darkMode}\n            startDateAlert={startDateAlert}\n            calculatedStartDate={props.calculatedStartDate}\n          />\n        </Col>\n      </Row>\n\n      <Row className=\"volunteering-time-row\">\n        <Col md=\"6\">\n          <Label className={`hours-label ${darkMode ? 'text-light' : ''}`}>End Date</Label>\n        </Col>\n        <Col md=\"6\">\n          <EndDate\n            role={role}\n            userProfile={userProfile}\n            setUserProfile={setUserProfile}\n            canEdit={canEdit}\n            onEndDateComponent={handleEndDates}\n            darkMode={darkMode}\n            endDateAlert={endDateAlert}\n          />\n        </Col>\n      </Row>\n\n      <Row className=\"volunteering-time-row\">\n        <Col md=\"6\">\n          <Label className={`hours-label ${darkMode ? 'text-light' : ''}`}>\n            Total Tangible Hours This Week\n          </Label>\n        </Col>\n        <Col md=\"6\">\n          <p\n            className={`hours-totalTangible-thisWeek ${darkMode ? 'text-azure' : ''}`}\n            style={{ textAlign: 'left' }}\n          >\n            {totalTangibleHoursThisWeek}\n          </p>\n        </Col>\n      </Row>\n\n      <Row className=\"volunteering-time-row\">\n        <Col md=\"6\">\n          <Label className={`hours-label ${darkMode ? 'text-light' : ''}`}>\n            Weekly Summary Options{' '}\n          </Label>\n        </Col>\n        <Col md=\"6\">\n          <WeeklySummaryOptions\n            role={role}\n            userProfile={userProfile}\n            setUserProfile={setUserProfile}\n            canEdit={canEdit && canUpdateSummaryRequirements}\n            darkMode={darkMode}\n          />\n        </Col>\n      </Row>\n      <Row className=\"volunteering-time-row\">\n        <Col md=\"6\">\n          <Label className={`hours-label ${darkMode ? 'text-light' : ''}`}>\n            Weekly Committed Hours{' '}\n          </Label>\n        </Col>\n        <Col md=\"6\" className=\"d-flex align-items-center\">\n          <WeeklyCommittedHours\n            role={role}\n            userProfile={userProfile}\n            setUserProfile={setUserProfile}\n            canEdit={canEdit}\n            darkMode={darkMode}\n          />\n          <HistoryModal\n            isOpen={historyModal}\n            toggle={toggleHistoryModal}\n            userName={userProfile.firstName}\n            userHistory={userProfile.weeklycommittedHoursHistory}\n          />\n          <span className=\"history-icon\">\n            <i className=\"fa fa-history\" aria-hidden=\"true\" onClick={toggleHistoryModal}></i>\n          </span>\n        </Col>\n      </Row>\n      {userProfile.role === 'Core Team' && (\n        <Row className=\"volunteering-time-row\">\n          <Col md=\"6\">\n            <Label className={`hours-label ${darkMode ? 'text-light' : ''}`}>\n              Additional Make-up Hours This Week{' '}\n            </Label>\n          </Col>\n          <Col md=\"6\">\n            <MissedHours\n              role={role}\n              userProfile={userProfile}\n              setUserProfile={setUserProfile}\n              canEdit={canEdit}\n              darkMode={darkMode}\n            />\n          </Col>\n        </Row>\n      )}\n      <Row className=\"volunteering-time-row\">\n        <Col md=\"6\">\n          <Label className={`hours-label ${darkMode ? 'text-light' : ''}`}>\n            Total Intangible Hours{' '}\n          </Label>\n        </Col>\n        <Col md=\"6\">\n          <TotalIntangibleHours\n            userProfile={userProfile}\n            setUserProfile={setUserProfile}\n            canEdit={canEdit}\n            darkMode={darkMode}\n          />\n        </Col>\n      </Row>\n      <Row className=\"volunteering-time-row\">\n        <Col md=\"6\">\n          <Label className={`hours-label ${darkMode ? 'text-light' : ''}`}>\n            Total Tangible Hours{' '}\n          </Label>\n        </Col>\n        <Col md=\"6\" className=\"tangible-hrs-group\">\n          <p className={`hours-totalTangible ${darkMode ? 'text-azure' : ''}`}>\n            {totalTangibleHours}\n          </p>\n          <Button\n            size=\"sm\"\n            color=\"info\"\n            className=\"refresh-btn\"\n            onClick={() => props.loadUserProfile()}\n            style={darkMode ? boxStyleDark : boxStyle}\n          >\n            Refresh\n          </Button>\n        </Col>\n      </Row>\n      {props?.userProfile?.hoursByCategory\n        ? Object.keys(userProfile.hoursByCategory).map(key => (\n            <React.Fragment key={'hours-by-category-' + key}>\n              <Row className=\"volunteering-time-row\">\n                <Col md=\"6\">\n                  <Label className={`hours-label ${darkMode ? 'text-light' : ''}`}>\n                    {key !== 'unassigned' ? (\n                      <>Total Tangible {capitalize(key)} Hours</>\n                    ) : (\n                      <>Total Unassigned Category Hours</>\n                    )}\n                  </Label>\n                </Col>\n                <Col md=\"6\">\n                  {canEdit ? (\n                    <Input\n                      type=\"number\"\n                      pattern=\"^\\d*\\.?\\d{0,2}$\"\n                      id={`${key}Hours`}\n                      step=\".01\"\n                      min=\"0\"\n                      className={darkMode ? darkModeClass : ''}\n                      value={roundToTwo(userProfile.hoursByCategory[key])}\n                      onChange={e => handleOnChangeHours(e, key)}\n                      placeholder={`Total Tangible ${capitalize(key)} Hours`}\n                    />\n                  ) : (\n                    <p className={darkMode ? 'text-azure' : ''}>\n                      {userProfile.hoursByCategory[key]?.toFixed(2)}\n                    </p>\n                  )}\n                </Col>\n              </Row>\n            </React.Fragment>\n          ))\n        : []}\n    </div>\n  );\n};\n\nexport default ViewTab;\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/VolunteeringTimeTab/__tests__/HistoryModal.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/VolunteeringTimeTab/__tests__/VolunteeringTimeTab.test.jsx","messages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":19,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":19,"endColumn":14},{"ruleId":"testing-library/no-unnecessary-act","severity":2,"message":"Avoid wrapping Testing Library util calls in `act`","line":62,"column":11,"nodeType":"Identifier","messageId":"noUnnecessaryActTestingLibraryUtil","endLine":62,"endColumn":14},{"ruleId":"testing-library/no-unnecessary-act","severity":2,"message":"Avoid wrapping Testing Library util calls in `act`","line":69,"column":11,"nodeType":"Identifier","messageId":"noUnnecessaryActTestingLibraryUtil","endLine":69,"endColumn":14},{"ruleId":"testing-library/no-unnecessary-act","severity":2,"message":"Avoid wrapping Testing Library util calls in `act`","line":77,"column":11,"nodeType":"Identifier","messageId":"noUnnecessaryActTestingLibraryUtil","endLine":77,"endColumn":14},{"ruleId":"testing-library/no-unnecessary-act","severity":2,"message":"Avoid wrapping Testing Library util calls in `act`","line":85,"column":11,"nodeType":"Identifier","messageId":"noUnnecessaryActTestingLibraryUtil","endLine":85,"endColumn":14},{"ruleId":"testing-library/no-unnecessary-act","severity":2,"message":"Avoid wrapping Testing Library util calls in `act`","line":93,"column":11,"nodeType":"Identifier","messageId":"noUnnecessaryActTestingLibraryUtil","endLine":93,"endColumn":14},{"ruleId":"testing-library/no-unnecessary-act","severity":2,"message":"Avoid wrapping Testing Library util calls in `act`","line":101,"column":11,"nodeType":"Identifier","messageId":"noUnnecessaryActTestingLibraryUtil","endLine":101,"endColumn":14},{"ruleId":"testing-library/no-unnecessary-act","severity":2,"message":"Avoid wrapping Testing Library util calls in `act`","line":109,"column":11,"nodeType":"Identifier","messageId":"noUnnecessaryActTestingLibraryUtil","endLine":109,"endColumn":14}],"suppressedMessages":[],"errorCount":7,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { act } from 'react-dom/test-utils';\nimport axios from 'axios';\nimport { screen } from '@testing-library/react';\nimport '@testing-library/jest-dom/extend-expect';\nimport VolunteeringTimeTab from '../VolunteeringTimeTab';\nimport { authMock, userProfileMock, rolesMock, themeMock } from '../../../../__tests__/mockStates';\nimport thunk from 'redux-thunk';\nimport { configureStore } from 'redux-mock-store';\nimport { renderWithProvider } from '../../../../__tests__/utils';\n\nvi.mock('axios');\n\nbeforeAll(() => {\n  vi.spyOn(console, 'log').mockImplementation(() => {});\n});\n\nafterAll(() => {\n  console.log.mockRestore();\n});\n\ndescribe('VolunteeringTimeTab Component', () => {\n  let store;\n  let props;\n  const mockStore = configureStore([thunk]);\n\n  beforeEach(() => {\n    store = mockStore({\n      auth: authMock,\n      userProfile: userProfileMock,\n      role: rolesMock,\n      theme: themeMock,\n    });\n\n    props = {\n      userProfile: userProfileMock,\n      setUserProfile: vi.fn(),\n      role: rolesMock,\n      canEdit: true,\n      canUpdateSummaryRequirements: true,\n      darkMode: false,\n      onStartDate: vi.fn(),\n      onEndDate: vi.fn(),\n      loadUserProfile: vi.fn(),\n    };\n\n    axios.get.mockResolvedValue({\n      data: {\n        hoursByCategory: {\n          education: 10,\n          society: 20,\n          energy: 15,\n          food: 12,\n          housing: 8,\n        },\n        weeklycommittedHours: 40,\n      },\n    });\n  });\n\n  it('renders without crashing', async () => {\n    await act(async () => {\n      renderWithProvider(<VolunteeringTimeTab {...props} />, { store });\n    });\n    expect(screen.getByTestId('volunteering-time-tab')).toBeInTheDocument();\n  });\n\n  it('displays the correct Total Tangible Education Hours', async () => {\n    await act(async () => {\n      renderWithProvider(<VolunteeringTimeTab {...props} />, { store });\n    });\n    const input1 = screen.getByPlaceholderText('Total Tangible Education Hours');\n    expect(input1).toHaveValue(userProfileMock.hoursByCategory.education);\n  });\n\n  it('displays the correct Total Tangible Society Hours', async () => {\n    await act(async () => {\n      renderWithProvider(<VolunteeringTimeTab {...props} />, { store });\n    });\n    const input2 = screen.getByPlaceholderText('Total Tangible Society Hours');\n    expect(input2).toHaveValue(userProfileMock.hoursByCategory.society);\n  });\n\n  it('displays the correct Total Tangible Energy Hours', async () => {\n    await act(async () => {\n      renderWithProvider(<VolunteeringTimeTab {...props} />, { store });\n    });\n    const input3 = screen.getByPlaceholderText('Total Tangible Energy Hours');\n    expect(input3).toHaveValue(userProfileMock.hoursByCategory.energy);\n  });\n\n  it('displays the correct Total Tangible Food Hours', async () => {\n    await act(async () => {\n      renderWithProvider(<VolunteeringTimeTab {...props} />, { store });\n    });\n    const input4 = screen.getByPlaceholderText('Total Tangible Food Hours');\n    expect(input4).toHaveValue(userProfileMock.hoursByCategory.food);\n  });\n\n  it('displays the correct Total Tangible Housing Hours', async () => {\n    await act(async () => {\n      renderWithProvider(<VolunteeringTimeTab {...props} />, { store });\n    });\n    const input5 = screen.getByPlaceholderText('Total Tangible Housing Hours');\n    expect(input5).toHaveValue(userProfileMock.hoursByCategory.housing);\n  });\n\n  it('displays the correct Weekly Committed Hours', async () => {\n    await act(async () => {\n      renderWithProvider(<VolunteeringTimeTab {...props} />, { store });\n    });\n    const input6 = screen.getByPlaceholderText('Weekly Committed Hours');\n    expect(input6).toHaveValue(userProfileMock.weeklycommittedHours);\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/WorkHistory.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/__tests__/AddNewTeamModal.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/__tests__/AssignBadgePopup.test.jsx","messages":[{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":79,"column":36,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":79,"column":36,"nodeType":"MemberExpression","messageId":"noNodeAccess"}],"suppressedMessages":[],"errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { render, fireEvent, waitFor, screen } from '@testing-library/react';\nimport { Provider } from 'react-redux';\nimport { configureStore } from 'redux-mock-store'; // If using Redux\nimport MockAssignTableRow from '../MockData/MockAssignTableRow';\nimport AssignBadgePopup from '../AssignBadgePopup';\nimport { themeMock } from '__tests__/mockStates';\n\n/** ********************************TEST PRE-REQUISITE*************************************** */\n// Mock Redux store\nconst mockStore = configureStore([]);\nconst initialState = {\n  badge: {\n    selectedBadges: [],\n    allBadges: [],\n  },\n  theme: themeMock,\n};\nconst store = mockStore(initialState);\n\n// Add more mock data as needed\nconst mockBadges = [\n  { id: 1, name: 'Badge 1' },\n  { id: 2, name: 'Badge 2' },\n];\n\n// Tool tip message : Update  here if the message changes in future\nconst tip1 =\n  'Hmmm, little blank boxes... what could they mean? Yep, you guessed it, check those boxes to select the badges you wish to assign a person. Click the \"Confirm\" button at the bottom when you\\'ve selected all you wish to add.';\nconst tip2 = 'Want to assign multiple of the same badge to a person? Repeat the process!!';\n\n// Render component\nconst renderComponent = () => {\n  render(\n    <Provider store={store}>\n      <AssignBadgePopup />\n    </Provider>,\n  );\n};\n\n// vi.mock('axios');\n\n/** **************************************TEST CASES******************************************** */\ndescribe('Userprofile/AssignBadgePopup Test Suite', () => {\n  it('Test case 1: Compoment renders without crashing', () => {\n    renderComponent();\n    const popup = screen.getByTestId('test-assignbadgepopup');\n    expect(popup).toBeInTheDocument();\n  });\n\n  it('Test case 2 : Displays badge search input', () => {\n    renderComponent();\n    const searchInput = screen.getByTestId('test-searchBadgeName');\n    expect(searchInput).toBeInTheDocument();\n  });\n\n  it('Test case 3: Assert if expected value gets updated in the input box', async () => {\n    renderComponent();\n\n    const searchInput = screen.getByTestId('test-searchBadgeName');\n\n    fireEvent.change(searchInput, { target: { value: 'Some Badge' } });\n\n    // Wait for the component to update after the search input change\n    await waitFor(() => {\n      expect(searchInput.value).toBe('Some Badge');\n    });\n  });\n\n  it('Test case 4 : Assert the pop up contains only one table with 3 columns ', async () => {\n    renderComponent();\n\n    // / Find all tables within the component\n    const tables = screen.getAllByRole('table');\n\n    // Ensure there's only one table\n    expect(tables.length).toBe(1);\n\n    // Find all table headers (th elements) within the table\n    const tableHeaders = tables[0].querySelectorAll('th');\n\n    // Ensure there are exactly three table headers in the table\n    expect(tableHeaders.length).toBe(3);\n  });\n  it('Test case 5 : Assert the presnce of objects associated with the search results: a table and three columns', async () => {\n    renderComponent();\n\n    const table = screen.getByTestId('test-badgeResults');\n    const badge = screen.getByText('Badge');\n    const name = screen.getByText('Name');\n    const tooltip = screen.getByTestId('test-selectinfo');\n\n    expect(table).toBeInTheDocument();\n    expect(badge).toBeInTheDocument();\n    expect(name).toBeInTheDocument();\n    expect(tooltip).toBeInTheDocument();\n  });\n  it('Test case 6 : Assert the tool tip  message doesnt get displayed unless hover overed', async () => {\n    const message1 = screen.queryByText(tip1);\n    const message2 = screen.queryByText(tip2);\n\n    expect(message1).toBeNull();\n    expect(message2).toBeNull();\n  });\n  it('Test case 7 : Assert the tool tip message displayed when hovered', async () => {\n    renderComponent();\n\n    const infoIcon = screen.getByTestId('test-selectinfo');\n    fireEvent.mouseOver(infoIcon); // trigger the tooltip\n\n    // now grab the two <p> elements by their test IDs\n    const tip1El = await screen.findByTestId('test-tip1');\n    const tip2El = await screen.findByTestId('test-tip2');\n\n    expect(tip1El).toBeInTheDocument();\n    // just check the unique leading phrase\n    expect(tip1El).toHaveTextContent('Hmmm, little blank boxes');\n\n    expect(tip2El).toBeInTheDocument();\n    expect(tip2El).toHaveTextContent('Want to assign multiple of the same badge');\n  });\n  it('Test case 8 : Assert if the pop up has a submit button ', async () => {\n    renderComponent();\n    const button = screen.getByTestId('test-button');\n    expect(button).toBeInTheDocument();\n  });\n  it('Test case 9 :  Assert if the popup renders badge data correctly ', async () => {\n    renderComponent();\n    // Find the AssignTableRow component within AssignBadgePopup\n    const assignTableRowComponent = screen.getByTestId('test-badgeResults'); // Assuming you have a data-testid on the AssignTableRow\n\n    // Render the AssignTableRow component within AssignBadgePopup with badge data\n    render(<MockAssignTableRow badges={mockBadges} />, { container: assignTableRowComponent });\n    // Check if the rendered table row contains badge ID and name\n    mockBadges.forEach(mockBadge => {\n      const badgeNameElement = screen.getByText(mockBadge.name);\n      expect(badgeNameElement).toBeInTheDocument();\n    });\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/__tests__/Badges.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/__tests__/OLDuProfile.test.jsx","messages":[{"ruleId":"import/named","severity":2,"message":"getUserProfile not found in '../../../services/userProfileService'","line":5,"column":10,"nodeType":"Identifier","endLine":5,"endColumn":24}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render } from '@testing-library/react';\nimport { toast } from 'react-toastify';\nimport UserProfile from '..';\nimport { getUserProfile } from '../../../services/userProfileService';\n\ntest.skip('it skips tests because redux', () => {\n  expect(reduxTests()).toBe(0);\n});\n\n// describe(\"UserPage\", () => {\n//   it(\"should call componentDidMount onload\", () => {\n//     const spy = vi.spyOn(UserProfile.prototype, \"componentDidMount\");\n//     let userProfile = render(<UserProfile />);\n//     expect(spy).toHaveBeenCalled();\n//   });\n\n//   it(\"should call getUserProfile onload\", () => {\n//     let userId = 1234;\n//     let props = { match: { params: { userId } } };\n//     let userProfileService = require(\"../services/userProfileService\");\n//     const spy = vi.spyOn(userProfileService, \"getUserProfile\");\n//     let userProfile = render(<UserProfile {...props} />);\n//     userProfile.instance().componentDidMount();\n//     expect(spy).toHaveBeenCalledWith(userId);\n//   });\n\n//   it(\"should call error toast if an error was encountered while fetching user details\", () => {\n//     let userId = 1234;\n//     let props = { match: { params: { userId } } };\n//     let userProfileService = require(\"../services/userProfileService\");\n//     let response = { status: 400 };\n//     userProfileService.getUserProfile = vi.fn(() => {\n//       throw { response };\n//     });\n//     toast.error = vi.fn();\n//     let userProfile = render(<UserProfile {...props} />);\n//     userProfile.instance().componentDidMount();\n//     let params = [\n//       \"This is an invalid profile\",\n//       { onClose: expect.any(Function) }\n//     ];\n//     expect(toast.error).toHaveBeenCalledWith(...params);\n//   });\n\n//   it(\"should call setState if user details were fetched successfully\", async () => {\n//     let userId = 1234;\n//     let props = { match: { params: { userId } } };\n//     let userProfileService = require(\"../services/userProfileService\");\n//     let response = { status: 400 };\n//     userProfileService.getUserProfile = vi.fn(() => {\n//       return { response };\n//     });\n//     const spy = vi.spyOn(UserProfile.prototype, \"setState\");\n//     let userProfile = render(<UserProfile {...props} />);\n//     await userProfile.instance().componentDidMount();\n//     expect(spy).toHaveBeenCalled();\n//   });\n\n//   it(\"should call error toast if an error was encountered while saving user edits\", () => {\n//     let userId = 1234;\n//     let props = { match: { params: { userId } } };\n//     let userProfileService = require(\"../services/userProfileService\");\n//     let response = { status: 400 };\n//     userProfileService.putUserProfileData = vi.fn(() => {\n//       throw { response };\n//     });\n//     toast.error = vi.fn();\n//     let userProfile = render(<UserProfile {...props} />);\n//     userProfile.instance().handleSubmit();\n//     expect(toast.error).toHaveBeenCalled();\n//   });\n\n//   it(\"should call success toast if no error was encountered while saving user edits\", async () => {\n//     let userId = 1234;\n//     let props = { match: { params: { userId } } };\n//     let userProfileService = require(\"../services/userProfileService\");\n//     let response = { status: 200 };\n//     userProfileService.putUserProfileData = vi.fn(() => {\n//       return { response };\n//     });\n//     toast.success = vi.fn();\n//     let userProfile = render(<UserProfile {...props} />);\n//     await userProfile.instance().handleSubmit();\n//     expect(toast.success).toHaveBeenCalledWith(\"Edits were successfully saved\");\n//   });\n// });\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/__tests__/Teamsview.test.jsx","messages":[{"ruleId":"testing-library/no-container","severity":2,"message":"Avoid using container methods. Prefer using the methods from Testing Library, such as \"getByRole()\"","line":102,"column":27,"nodeType":"MemberExpression","messageId":"noContainer","endLine":102,"endColumn":50},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":102,"column":37,"nodeType":"MemberExpression","messageId":"noNodeAccess"},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":102,"column":37,"nodeType":"MemberExpression","messageId":"noNodeAccess"}],"suppressedMessages":[],"errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport { render, screen, fireEvent, waitFor, act } from '@testing-library/react';\nimport '@testing-library/jest-dom/extend-expect';\nimport configureMockStore from 'redux-mock-store';\nimport { Provider } from 'react-redux';\nimport Teams from '../Teamsview';\nimport { themeMock } from '__tests__/mockStates';\n\nconst mockStore = configureMockStore();\nconst initialState = {\n  theme: themeMock,\n};\nconst store = mockStore(initialState);\n\nconst mockallTeams = [\n  {\n    teamName: 'team11',\n    _id: 'aaa123',\n    isActive: true,\n  },\n  {\n    teamName: 'team12',\n    _id: 'bbb456',\n    isActive: true,\n  },\n  {\n    teamName: 'team13',\n    _id: 'ccc789',\n    isActive: true,\n  },\n  {\n    teamName: 'team24',\n    _id: 'ddd056',\n    isActive: false,\n  },\n];\n\nconst mockhandleTeam = vi.fn();\n\ndescribe('Team Table Data component', () => {\n  beforeEach(() => {\n    mockhandleTeam.mockClear();\n  });\n\n  it('check team name displaying properly when the user is assigned to teams', () => {\n    const teamsData = [\n      {\n        teamName: 'team11',\n        _id: 'aaa123',\n        isActive: true,\n      },\n    ];\n    render(\n      <Provider store={store}>\n        <Teams\n          teamsdata={teamsData}\n          allTeams={mockallTeams}\n          handleTeam={mockhandleTeam}\n          edit={true}\n        />\n      </Provider>,\n    );\n    expect(screen.getByText('team11')).toBeInTheDocument();\n  });\n  it('check if team name not getting displayed when user is not assigned to a team', () => {\n    const teamsData = [];\n    render(\n      <Provider store={store}>\n        <Teams\n          teamsdata={teamsData}\n          allTeams={mockallTeams}\n          handleTeam={mockhandleTeam}\n          edit={true}\n        />\n      </Provider>,\n    );\n    expect(screen.queryByText('Delete')).not.toBeInTheDocument();\n  });\n  it('check if mockhandleTeam called when delete button is clicked', () => {\n    const teamsData = [\n      {\n        teamName: 'team11',\n        _id: 'aaa123',\n        isActive: true,\n      },\n      {\n        teamName: 'team12',\n        _id: 'bbb456',\n        isActive: true,\n      },\n    ];\n    const { container } = render(\n      <Provider store={store}>\n        <Teams\n          teamsdata={teamsData}\n          allTeams={mockallTeams}\n          handleTeam={mockhandleTeam}\n          edit={true}\n        />\n      </Provider>,\n    );\n    const deleteElement = container.querySelector('[data-item=\"aaa123\"]');\n    fireEvent.click(deleteElement);\n    expect(mockhandleTeam).toHaveBeenCalled();\n  });\n  it('check if mockhandleTeam not called when delete button is not clicked', () => {\n    const teamsData = [\n      {\n        teamName: 'team11',\n        _id: 'aaa123',\n        isActive: true,\n      },\n      {\n        teamName: 'team12',\n        _id: 'bbb456',\n        isActive: true,\n      },\n    ];\n    const { container } = render(\n      <Provider store={store}>\n        <Teams\n          teamsdata={teamsData}\n          allTeams={mockallTeams}\n          handleTeam={mockhandleTeam}\n          edit={true}\n        />\n      </Provider>,\n    );\n    expect(mockhandleTeam).not.toHaveBeenCalled();\n  });\n});\ndescribe('Teams component', () => {\n  it('renders without crashing', () => {\n    const teamsData = [];\n    render(\n      <Provider store={store}>\n        <Teams\n          teamsdata={teamsData}\n          allTeams={mockallTeams}\n          handleTeam={mockhandleTeam}\n          edit={true}\n        />\n      </Provider>,\n    );\n  });\n  it('Teams header appears as expected', () => {\n    const teamsData = [];\n    render(\n      <Provider store={store}>\n        <Teams\n          teamsdata={teamsData}\n          allTeams={mockallTeams}\n          handleTeam={mockhandleTeam}\n          edit={true}\n        />\n      </Provider>,\n    );\n    expect(screen.getByText('Teams')).toBeInTheDocument();\n  });\n  it('check modal opens when add a team button is clicked', () => {\n    const teamsData = [];\n    render(\n      <Provider store={store}>\n        <Teams\n          teamsdata={teamsData}\n          allTeams={mockallTeams}\n          handleTeam={mockhandleTeam}\n          edit={true}\n        />\n      </Provider>,\n    );\n    const buttonElement = screen.getByText('Add a Team');\n    fireEvent.click(buttonElement);\n    expect(screen.getByText('Modal title')).toBeInTheDocument();\n  });\n  it('check if modal does not open when add a team button is not clicked', () => {\n    const teamsData = [];\n    render(\n      <Provider store={store}>\n        <Teams\n          teamsdata={teamsData}\n          allTeams={mockallTeams}\n          handleTeam={mockhandleTeam}\n          edit={true}\n        />\n      </Provider>,\n    );\n    expect(screen.queryByText('Modal title')).not.toBeInTheDocument();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/__tests__/TimeEntryEditHistory.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/__tests__/WorkHistory.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/UserProfile/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/VolunteerweeklysummaryBBC/WeeklySummaryEmailAssignmentPopUp.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/VolunteerweeklysummaryBBC/WeeklySummaryPage.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Warnings/WarningIcon.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Warnings/WarningIcons.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Warnings/WarningItem.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Warnings/Warnings.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Warnings/__test__/Warnings.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Warnings/modals/WarningModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/Warnings/modals/WarningTrackerModal.jsx","messages":[],"suppressedMessages":[{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`\"` can be escaped with `&quot;`, `&ldquo;`, `&#34;`, `&rdquo;`.","line":88,"column":28,"nodeType":"JSXText","messageId":"unescapedEntityAlts","suggestions":[{"messageId":"replaceWithAlt","data":{"alt":"&quot;"},"fix":{"range":[3169,3268],"text":"\n              Pressing the &quot;+\" button will allow you to activate the warning tracker.\n            "},"desc":"Replace with `&quot;`."},{"messageId":"replaceWithAlt","data":{"alt":"&ldquo;"},"fix":{"range":[3169,3268],"text":"\n              Pressing the &ldquo;+\" button will allow you to activate the warning tracker.\n            "},"desc":"Replace with `&ldquo;`."},{"messageId":"replaceWithAlt","data":{"alt":"&#34;"},"fix":{"range":[3169,3268],"text":"\n              Pressing the &#34;+\" button will allow you to activate the warning tracker.\n            "},"desc":"Replace with `&#34;`."},{"messageId":"replaceWithAlt","data":{"alt":"&rdquo;"},"fix":{"range":[3169,3268],"text":"\n              Pressing the &rdquo;+\" button will allow you to activate the warning tracker.\n            "},"desc":"Replace with `&rdquo;`."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`\"` can be escaped with `&quot;`, `&ldquo;`, `&#34;`, `&rdquo;`.","line":88,"column":30,"nodeType":"JSXText","messageId":"unescapedEntityAlts","suggestions":[{"messageId":"replaceWithAlt","data":{"alt":"&quot;"},"fix":{"range":[3169,3268],"text":"\n              Pressing the \"+&quot; button will allow you to activate the warning tracker.\n            "},"desc":"Replace with `&quot;`."},{"messageId":"replaceWithAlt","data":{"alt":"&ldquo;"},"fix":{"range":[3169,3268],"text":"\n              Pressing the \"+&ldquo; button will allow you to activate the warning tracker.\n            "},"desc":"Replace with `&ldquo;`."},{"messageId":"replaceWithAlt","data":{"alt":"&#34;"},"fix":{"range":[3169,3268],"text":"\n              Pressing the \"+&#34; button will allow you to activate the warning tracker.\n            "},"desc":"Replace with `&#34;`."},{"messageId":"replaceWithAlt","data":{"alt":"&rdquo;"},"fix":{"range":[3169,3268],"text":"\n              Pressing the \"+&rdquo; button will allow you to activate the warning tracker.\n            "},"desc":"Replace with `&rdquo;`."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`\"` can be escaped with `&quot;`, `&ldquo;`, `&#34;`, `&rdquo;`.","line":91,"column":28,"nodeType":"JSXText","messageId":"unescapedEntityAlts","suggestions":[{"messageId":"replaceWithAlt","data":{"alt":"&quot;"},"fix":{"range":[3319,3420],"text":"\n              Pressing the &quot;-\" button will allow you to deactivate the warning tracker.\n            "},"desc":"Replace with `&quot;`."},{"messageId":"replaceWithAlt","data":{"alt":"&ldquo;"},"fix":{"range":[3319,3420],"text":"\n              Pressing the &ldquo;-\" button will allow you to deactivate the warning tracker.\n            "},"desc":"Replace with `&ldquo;`."},{"messageId":"replaceWithAlt","data":{"alt":"&#34;"},"fix":{"range":[3319,3420],"text":"\n              Pressing the &#34;-\" button will allow you to deactivate the warning tracker.\n            "},"desc":"Replace with `&#34;`."},{"messageId":"replaceWithAlt","data":{"alt":"&rdquo;"},"fix":{"range":[3319,3420],"text":"\n              Pressing the &rdquo;-\" button will allow you to deactivate the warning tracker.\n            "},"desc":"Replace with `&rdquo;`."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`\"` can be escaped with `&quot;`, `&ldquo;`, `&#34;`, `&rdquo;`.","line":91,"column":30,"nodeType":"JSXText","messageId":"unescapedEntityAlts","suggestions":[{"messageId":"replaceWithAlt","data":{"alt":"&quot;"},"fix":{"range":[3319,3420],"text":"\n              Pressing the \"-&quot; button will allow you to deactivate the warning tracker.\n            "},"desc":"Replace with `&quot;`."},{"messageId":"replaceWithAlt","data":{"alt":"&ldquo;"},"fix":{"range":[3319,3420],"text":"\n              Pressing the \"-&ldquo; button will allow you to deactivate the warning tracker.\n            "},"desc":"Replace with `&ldquo;`."},{"messageId":"replaceWithAlt","data":{"alt":"&#34;"},"fix":{"range":[3319,3420],"text":"\n              Pressing the \"-&#34; button will allow you to deactivate the warning tracker.\n            "},"desc":"Replace with `&#34;`."},{"messageId":"replaceWithAlt","data":{"alt":"&rdquo;"},"fix":{"range":[3319,3420],"text":"\n              Pressing the \"-&rdquo; button will allow you to deactivate the warning tracker.\n            "},"desc":"Replace with `&rdquo;`."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`\"` can be escaped with `&quot;`, `&ldquo;`, `&#34;`, `&rdquo;`.","line":94,"column":28,"nodeType":"JSXText","messageId":"unescapedEntityAlts","suggestions":[{"messageId":"replaceWithAlt","data":{"alt":"&quot;"},"fix":{"range":[3471,3669],"text":"\n              Pressing the &quot;x\" button will allow you to delete the warning tracker. This will also\n              delete all assoicated warnings for every user (be careful doing this!).\n            "},"desc":"Replace with `&quot;`."},{"messageId":"replaceWithAlt","data":{"alt":"&ldquo;"},"fix":{"range":[3471,3669],"text":"\n              Pressing the &ldquo;x\" button will allow you to delete the warning tracker. This will also\n              delete all assoicated warnings for every user (be careful doing this!).\n            "},"desc":"Replace with `&ldquo;`."},{"messageId":"replaceWithAlt","data":{"alt":"&#34;"},"fix":{"range":[3471,3669],"text":"\n              Pressing the &#34;x\" button will allow you to delete the warning tracker. This will also\n              delete all assoicated warnings for every user (be careful doing this!).\n            "},"desc":"Replace with `&#34;`."},{"messageId":"replaceWithAlt","data":{"alt":"&rdquo;"},"fix":{"range":[3471,3669],"text":"\n              Pressing the &rdquo;x\" button will allow you to delete the warning tracker. This will also\n              delete all assoicated warnings for every user (be careful doing this!).\n            "},"desc":"Replace with `&rdquo;`."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`\"` can be escaped with `&quot;`, `&ldquo;`, `&#34;`, `&rdquo;`.","line":94,"column":30,"nodeType":"JSXText","messageId":"unescapedEntityAlts","suggestions":[{"messageId":"replaceWithAlt","data":{"alt":"&quot;"},"fix":{"range":[3471,3669],"text":"\n              Pressing the \"x&quot; button will allow you to delete the warning tracker. This will also\n              delete all assoicated warnings for every user (be careful doing this!).\n            "},"desc":"Replace with `&quot;`."},{"messageId":"replaceWithAlt","data":{"alt":"&ldquo;"},"fix":{"range":[3471,3669],"text":"\n              Pressing the \"x&ldquo; button will allow you to delete the warning tracker. This will also\n              delete all assoicated warnings for every user (be careful doing this!).\n            "},"desc":"Replace with `&ldquo;`."},{"messageId":"replaceWithAlt","data":{"alt":"&#34;"},"fix":{"range":[3471,3669],"text":"\n              Pressing the \"x&#34; button will allow you to delete the warning tracker. This will also\n              delete all assoicated warnings for every user (be careful doing this!).\n            "},"desc":"Replace with `&#34;`."},{"messageId":"replaceWithAlt","data":{"alt":"&rdquo;"},"fix":{"range":[3471,3669],"text":"\n              Pressing the \"x&rdquo; button will allow you to delete the warning tracker. This will also\n              delete all assoicated warnings for every user (be careful doing this!).\n            "},"desc":"Replace with `&rdquo;`."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`\"` can be escaped with `&quot;`, `&ldquo;`, `&#34;`, `&rdquo;`.","line":98,"column":28,"nodeType":"JSXText","messageId":"unescapedEntityAlts","suggestions":[{"messageId":"replaceWithAlt","data":{"alt":"&quot;"},"fix":{"range":[3720,3856],"text":"\n              Pressing the &quot;Add New Warning Tracker\" button will allow you to add a new warning to\n              the list.\n            "},"desc":"Replace with `&quot;`."},{"messageId":"replaceWithAlt","data":{"alt":"&ldquo;"},"fix":{"range":[3720,3856],"text":"\n              Pressing the &ldquo;Add New Warning Tracker\" button will allow you to add a new warning to\n              the list.\n            "},"desc":"Replace with `&ldquo;`."},{"messageId":"replaceWithAlt","data":{"alt":"&#34;"},"fix":{"range":[3720,3856],"text":"\n              Pressing the &#34;Add New Warning Tracker\" button will allow you to add a new warning to\n              the list.\n            "},"desc":"Replace with `&#34;`."},{"messageId":"replaceWithAlt","data":{"alt":"&rdquo;"},"fix":{"range":[3720,3856],"text":"\n              Pressing the &rdquo;Add New Warning Tracker\" button will allow you to add a new warning to\n              the list.\n            "},"desc":"Replace with `&rdquo;`."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`\"` can be escaped with `&quot;`, `&ldquo;`, `&#34;`, `&rdquo;`.","line":98,"column":52,"nodeType":"JSXText","messageId":"unescapedEntityAlts","suggestions":[{"messageId":"replaceWithAlt","data":{"alt":"&quot;"},"fix":{"range":[3720,3856],"text":"\n              Pressing the \"Add New Warning Tracker&quot; button will allow you to add a new warning to\n              the list.\n            "},"desc":"Replace with `&quot;`."},{"messageId":"replaceWithAlt","data":{"alt":"&ldquo;"},"fix":{"range":[3720,3856],"text":"\n              Pressing the \"Add New Warning Tracker&ldquo; button will allow you to add a new warning to\n              the list.\n            "},"desc":"Replace with `&ldquo;`."},{"messageId":"replaceWithAlt","data":{"alt":"&#34;"},"fix":{"range":[3720,3856],"text":"\n              Pressing the \"Add New Warning Tracker&#34; button will allow you to add a new warning to\n              the list.\n            "},"desc":"Replace with `&#34;`."},{"messageId":"replaceWithAlt","data":{"alt":"&rdquo;"},"fix":{"range":[3720,3856],"text":"\n              Pressing the \"Add New Warning Tracker&rdquo; button will allow you to add a new warning to\n              the list.\n            "},"desc":"Replace with `&rdquo;`."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummariesReport/BioFunction.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummariesReport/FormattedReport.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":462,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":464,"endColumn":8,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":569,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":571,"endColumn":8,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":856,"column":15,"nodeType":"JSXOpeningElement","endLine":865,"endColumn":16,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":856,"column":15,"nodeType":"JSXOpeningElement","endLine":865,"endColumn":16,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":895,"column":11,"nodeType":"JSXOpeningElement","endLine":908,"endColumn":13,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":895,"column":11,"nodeType":"JSXOpeningElement","endLine":908,"endColumn":13,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummariesReport/GeneratePdfReport.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummariesReport/PasswordInputModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummariesReport/SelectTeamPieChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummariesReport/TeamChart.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummariesReport/TotalValidSummaries.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":25,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":27,"endColumn":8,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummariesReport/WeeklySummariesReport.jsx","messages":[],"suppressedMessages":[{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must have accessible text.","line":1232,"column":17,"nodeType":"JSXOpeningElement","endLine":1232,"endColumn":96,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must have accessible text.","line":1332,"column":25,"nodeType":"JSXOpeningElement","endLine":1335,"endColumn":26,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must have accessible text.","line":1366,"column":19,"nodeType":"JSXOpeningElement","endLine":1366,"endColumn":96,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must have accessible text.","line":1383,"column":19,"nodeType":"JSXOpeningElement","endLine":1383,"endColumn":92,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must have accessible text.","line":1400,"column":19,"nodeType":"JSXOpeningElement","endLine":1400,"endColumn":96,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummariesReport/WeeklySummaryRecepientsPopup.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummariesReport/__mocks__/weeklySummariesReportData.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummariesReport/__tests__/BioFunction.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":32,"column":31,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummariesReport/__tests__/FormattedReport.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummariesReport/__tests__/GeneratePdfReport.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummariesReport/__tests__/PasswordInputModal.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummariesReport/__tests__/WeeklySummariesReport.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummariesReport/__tests__/WeeklySummaryRecepientsPopup.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummariesReport/components/SlideToggle.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummariesReport/components/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummariesReport/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummary/CountdownTimer.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummary/CurrentPromptModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummary/DueDateTime.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummary/WeeklySummary.jsx","messages":[],"suppressedMessages":[{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":362,"column":7,"nodeType":"CallExpression","messageId":"unexpected","endLine":362,"endColumn":60,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":683,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":683,"endColumn":69,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":686,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":686,"endColumn":62,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":706,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":706,"endColumn":69,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-alert","severity":1,"message":"Unexpected alert.","line":709,"column":9,"nodeType":"CallExpression","messageId":"unexpected","endLine":709,"endColumn":62,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummary/WeeklySummaryModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummary/WeeklySummaryTooltips.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummary/WriteForMeModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummary/__mocks__/weeklySummaryMockData.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummary/__tests__/CurrentPromptModal.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummary/__tests__/DueDateTime.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummary/__tests__/WeeklySummary.test.js","messages":[],"suppressedMessages":[{"ruleId":"import/named","severity":2,"message":"rest not found in 'msw'","line":2,"column":10,"nodeType":"Identifier","endLine":2,"endColumn":14,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummary/__tests__/WeeklySummary.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-render-in-lifecycle","severity":2,"message":"Forbidden usage of `render` within testing framework `beforeEach` setup","line":120,"column":7,"nodeType":"Identifier","messageId":"noRenderInSetup","endLine":120,"endColumn":13,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-render-in-lifecycle","severity":2,"message":"Forbidden usage of `render` within testing framework `beforeEach` setup","line":228,"column":7,"nodeType":"Identifier","messageId":"noRenderInSetup","endLine":228,"endColumn":13,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-render-in-lifecycle","severity":2,"message":"Forbidden usage of `render` within testing framework `beforeEach` setup","line":279,"column":7,"nodeType":"Identifier","messageId":"noRenderInSetup","endLine":279,"endColumn":13,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummary/__tests__/WeeklySummaryContentTooltip.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummary/__tests__/WeeklySummaryModal.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/WeeklySummary/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/__tests__/App.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/BMDashboard/BMProtectedRoute/BMProtectedRoute.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/BMDashboard/BMProtectedRoute/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/CPDashboard/CPProtectedRoute/CPProtectedRoute.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/CPDashboard/CPProtectedRoute/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Checkbox/Checkbox.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Checkbox/__tests__/Checkbox.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Checkbox/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/CheckboxCollection/CheckboxCollection.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/CheckboxCollection/__tests__/CheckboxCollection.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/CheckboxCollection/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Clipboard/CopyToClipboard.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Clipboard/CopyToClipboard_2.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Clipboard/__tests__/CopyToClipBoard.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"import/named","severity":2,"message":"__mocked_toast not found in 'react-toastify'","line":29,"column":10,"nodeType":"Identifier","endLine":29,"endColumn":24,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/DragAndDrop/DragAndDrop.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Dropdown/Dropdown.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Dropdown/__tests__/Dropdown.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Dropdown/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/EPDashboard/EPProtectedRoute/EPProtectedRoute.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/EPDashboard/EPProtectedRoute/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/EmailComp.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/EmailSender/EmailSender.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/FileUpload/FileUpload.jsx","messages":[],"suppressedMessages":[{"ruleId":"jsx-a11y/label-has-associated-control","severity":2,"message":"A form label must have accessible text.","line":35,"column":7,"nodeType":"JSXOpeningElement","endLine":41,"endColumn":9,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/FileUpload/__tests__/FileUpload.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/FileUpload/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Form/Form.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Form/__tests__/Form.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Form/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/GoogleDocIcon/GoogleDocIcon.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/GoogleDocIcon/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Image/Image.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Image/Image.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Image/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Input/Input.jsx","messages":[],"suppressedMessages":[{"ruleId":"jsx-a11y/click-events-have-key-events","severity":2,"message":"Visible, non-interactive elements with click handlers must have at least one keyboard listener.","line":41,"column":11,"nodeType":"JSXOpeningElement","endLine":41,"endColumn":88,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"jsx-a11y/no-static-element-interactions","severity":2,"message":"Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.","line":41,"column":11,"nodeType":"JSXOpeningElement","endLine":41,"endColumn":88,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Input/__tests__/Input.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Input/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/LBDashboard/LBProtectedRoute/LBProtectedRoute.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/LBDashboard/LBProtectedRoute/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Loading/Loading.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Loading/__tests__/Loading.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Loading/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Modal/CustomModalHeader.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Modal/Modal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Modal/__tests__/Modal.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Modal/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/NewModal/NewModal.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/NewModal/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Paging/Paging.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Paging/__tests__/Paging.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Paging/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/PhoneInput/PhoneInput.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/PieChart/PieChart.jsx","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":53,"column":8,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":55,"column":8,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":99,"column":8,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":125,"column":18,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":128,"column":10,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":154,"column":12,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":173,"column":12,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":182,"column":16,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":187,"column":10,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/PieChart/ProjectPieChart.jsx","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":59,"column":8,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":98,"column":8,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":113,"column":18,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":116,"column":10,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":140,"column":12,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":160,"column":12,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":169,"column":16,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":174,"column":10,"nodeType":"CallExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/PieChart/__tests__/colorsGenerator.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/PieChart/colorsGenerator.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/PieChart/constants.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/PieChart/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/ProtectedRoute/ProtectedRoute.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/ProtectedRoute/__tests__/ProtectedRoute.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/ProtectedRoute/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Radio/Radio.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Radio/__tests__/Radio.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Radio/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/ShowSaveWarning.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/ShowSaveWarning.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/SkeletonLoading/SkeletonLoading.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/SkeletonLoading/__tests__/SkeletonLoading.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/SkeletonLoading/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Stub/Stub.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Stub/__tests__/Stub.test.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/Stub/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/TinyceEditor/__tests__/TinymceEditor.test.jsx","messages":[],"suppressedMessages":[{"ruleId":"testing-library/no-node-access","severity":2,"message":"Avoid direct Node access. Prefer using the methods from Testing Library.","line":43,"column":20,"nodeType":"MemberExpression","messageId":"noNodeAccess","suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/TinyceEditor/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/TinyceEditor/tinymceEditor.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/common/TwoWayToggleSwitch/TwoWayToggleSwitch.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/components/mouseoverText/MouseoverTextTotalTimeEditButton.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/BluequareEmailBccConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/WBS.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/WeeklySummaryEmailBccConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/allTeamsConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/allUsersTimeEntries.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/auth.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/badge.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/bmdashboard/consumableConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/bmdashboard/equipmentConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/bmdashboard/inventoryTypeConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/bmdashboard/issueConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/bmdashboard/lessonConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/bmdashboard/materialsConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/bmdashboard/projectConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/bmdashboard/projectMemberConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/bmdashboard/rentalChartConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/bmdashboard/reusableConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/bmdashboard/timeLoggerConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/bmdashboard/toolsConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/bmdashboard/weeklyProjectSummaryConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/colors.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/communityPortal/NoShowVizConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/errors.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/followUpConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/form.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/hgnFormConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/information.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/lbdashboard/messagingConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/lbdashboard/userPreferenceConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/leaderBoardData.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/mouseoverTextConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/notification.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/ownerMessageConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/ownerStandardMessageConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/popupEditorConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/popupId.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/project.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/projectMembership.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/projects.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/role.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/rolePermissionPresets.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/task.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/team.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/teams.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/timeEntries.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/timeOffRequestConstants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/timeZones.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/totalOrgSummary.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/userManagement.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/userProfile.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/userProjects.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/warning.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/weeklySummaries.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/weeklySummariesAIPrompt.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/constants/weeklySummariesReport.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/context/ModalContext.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/handlers/LBDashboard/messagingHandlers.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/hooks/useCountdown.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/index.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/languages/en/messages.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/languages/en/ui.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/WeeklySummaryEmailAssignment.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/actionItemsReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/allProjectsReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/allTasksReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/allTeamsReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/allTimeEntriesReducer.test.js","messages":[],"suppressedMessages":[{"ruleId":"import/no-named-as-default","severity":1,"message":"Using exported name 'allTimeEntriesReducer' as identifier for default import.","line":2,"column":8,"nodeType":"ImportDefaultSpecifier","endLine":2,"endColumn":29,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/allUserProfilesReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/authReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/bagdeReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/errorsReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/handleSuccessReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/leaderboardDataReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/managingTeamsReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/monthlyDashboardDataReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/notificationReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/ownerMessageReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/popupEditorReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/projectByIdReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/projectMembershipReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/projectReportReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/rolePresetReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/roleReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/teamByIdReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/teamMembershipReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/teamsTeamMembersReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/timeEntriesForSpecifiedPeriodReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/timeEntriesReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/totalOrgSummaryReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/userProfileByIdReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/userProjectMembersReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/userProjectsReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/userTeamMembersReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/wbsReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/weeklyDashboardDataReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/weeklySummariesReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/weeklySummariesReportReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/__tests__/weeklySummaryRecipientsReducer.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/actionItemsReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/allProjectsReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/allTasksReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/allTeamsReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/allTimeEntriesReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/allUserProfilesBasicInfoReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/allUserProfilesReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/allUsersTimeEntriesReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/authReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/badgeReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/blueSquareEmailBcc.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/bmdashboard/consumablesReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/bmdashboard/equipmentReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/bmdashboard/inventoryTypeReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/bmdashboard/inventoryUnitReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/bmdashboard/issueReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/bmdashboard/lessonsReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/bmdashboard/materialsReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/bmdashboard/projectByIdReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/bmdashboard/projectMemberReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/bmdashboard/projectReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/bmdashboard/rentalChartReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/bmdashboard/reusablesReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/bmdashboard/timeLoggerReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/bmdashboard/toolReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/bmdashboard/weeklyProjectSummaryReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/communityPortal/noShowVizReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/dashboardReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/errorsReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/followUpReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/formReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/handleSuccessReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/hgnFormReducers.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/index.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/informationReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/lbdashboard/messagingReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/lbdashboard/userPreferencesReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/lbdashboard/wishListItemReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/leaderboardDataReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/managingTeamsReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/monthlyDashboardDataReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/mouseoverTextReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/notificationReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/ownerMessageReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/popupEditorReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/projectByIdReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/projectMembershipReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/projectReportReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/rolePresetReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/roleReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/teamByIdReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/teamCodesReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/teamMembershipReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/teamsTeamMembersReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/themeReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/timeEntriesForSpecifiedPeriodReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/timeEntriesReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/timeOffRequestReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/totalOrgSummaryReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/userProfileByIdReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/userProjectMembersReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/userProjectsByUserNameReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/userProjectsReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/userTeamMembersReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/warningsReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/wbsReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/weeklyDashboardDataReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/weeklySummariesAIPromptReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/weeklySummariesReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/weeklySummariesReportReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/reducers/weeklySummaryRecipientsReducer.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/registerServiceWorker.js","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":30,"column":15,"nodeType":"MemberExpression","messageId":"unexpected","endLine":30,"endColumn":26,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1359,1416],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":33,"column":15,"nodeType":"MemberExpression","messageId":"unexpected","endLine":33,"endColumn":26,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[1505,1555],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":41,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":41,"endColumn":20,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"error"},"fix":{"range":[1682,1748],"text":""},"desc":"Remove the console.error()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":67,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":67,"endColumn":18,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[2565,2642],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":93,"column":11,"nodeType":"MemberExpression","messageId":"unexpected","endLine":93,"endColumn":22,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[3748,3912],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/routes.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/services/__mocks__/loginService.js","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":24,"column":3,"nodeType":"MemberExpression","messageId":"unexpected","endLine":24,"endColumn":14,"suggestions":[{"messageId":"removeConsole","data":{"propertyName":"log"},"fix":{"range":[582,640],"text":""},"desc":"Remove the console.log()."}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/services/__mocks__/userProfileService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/services/authorizationService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/services/dashBoardService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/services/httpService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/services/informationService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/services/logService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/services/mapLocationsService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/services/projectService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/services/teamService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/services/userProfileService.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/setupTests.js","messages":[],"suppressedMessages":[{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":112,"column":26,"nodeType":"MemberExpression","messageId":"unexpected","endLine":112,"endColumn":39,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":128,"column":7,"nodeType":"MemberExpression","messageId":"unexpected","endLine":128,"endColumn":20,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":129,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":129,"endColumn":18,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"no-console","severity":1,"message":"Unexpected console statement.","line":131,"column":5,"nodeType":"MemberExpression","messageId":"unexpected","endLine":131,"endColumn":18,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/store.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/styles.js","messages":[],"suppressedMessages":[{"ruleId":"prettier/prettier","severity":2,"message":"Replace `(darkMode)·=>·darkMode·?·'text-light'·:·''` with `darkMode·=>·(darkMode·?·'text-light'·:·'')`","line":10,"column":29,"nodeType":null,"messageId":"replace","endLine":10,"endColumn":71,"fix":{"range":[193,235],"text":"darkMode => (darkMode ? 'text-light' : '')"},"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"prettier/prettier","severity":2,"message":"Replace `(darkMode)·=>·darkMode·?·boxStyleDark·:·boxStyle;` with `darkMode·=>·(darkMode·?·boxStyleDark·:·boxStyle);⏎`","line":11,"column":30,"nodeType":null,"messageId":"replace","endLine":11,"endColumn":79,"fix":{"range":[266,315],"text":"darkMode => (darkMode ? boxStyleDark : boxStyle);\n"},"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/utils/URL.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/utils/__tests__/authInit.test.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/utils/anniversaryPermissions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/utils/authInit.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/utils/checkValidURL.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/utils/constants.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/utils/effortColors.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/utils/enums.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/utils/formatDate.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/utils/formatDateFromDescriptionString.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/utils/leaderboardPermissions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/utils/messagingSocket.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/utils/permissions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/utils/routePermissions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/utils/search.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/utils/totalOrgSummary.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/utils/useIsInViewPort.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/utils/userTableDataPermissions.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/src/utils/viewWBSpermissionsRequired.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/vite.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/suparshwapatil/Desktop/Personal/One_Community/HighestGoodNetworkApp/vitest.config.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]