name: Test React App

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js & cache Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn

      - name: Install dependencies
        run: yarn install

      - name: Run tests
        run: yarn test

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results # Adjust the path to your test results if necessary

      - name: Frontend Tests with 60% Coverage
        runs-on: ubuntu-latest
        needs: lint  # Only run if lint passes
        steps:
          - name: Checkout repository
            uses: actions/checkout@v4

      - name: Set up Node.js & cache Yarn
        uses: actions/setup-node@v4
        with:
        node-version: 20
        cache: yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run tests with coverage enforcement
        run: yarn test:ci
        env:
        CI: true

      - name: Print Coverage Summary
        if: always()
        run: |
          echo "üìä Frontend Coverage Report (60% Required):"
          if [ -f coverage/coverage-summary.json ]; then
            node -e "
              const coverage = require('./coverage/coverage-summary.json');
              const { lines, statements, functions, branches } = coverage.total;
              
              console.log('üìà CURRENT COVERAGE:');
              console.log(\`üìÑ Lines: \${lines.pct}% \${lines.pct >= 60 ? '‚úÖ PASS' : '‚ùå FAIL'}\`);
              console.log(\`üìù Statements: \${statements.pct}% \${statements.pct >= 60 ? '‚úÖ PASS' : '‚ùå FAIL'}\`);
              console.log(\`üîß Functions: \${functions.pct}% \${functions.pct >= 60 ? '‚úÖ PASS' : '‚ùå FAIL'}\`);
              console.log(\`üåø Branches: \${branches.pct}% \${branches.pct >= 60 ? '‚úÖ PASS' : '‚ùå FAIL'}\`);
              
              const allPass = [lines, statements, functions, branches].every(metric => metric.pct >= 60);
              console.log('================================');
              console.log(\`üéØ RESULT: \${allPass ? '‚úÖ ALL REQUIREMENTS MET' : '‚ùå COVERAGE REQUIREMENTS FAILED'}\`);
              console.log('================================');
              
              if (!allPass) {
                console.log('\\n‚ùå COVERAGE TOO LOW - PR CANNOT BE MERGED');
                process.exit(1);
              }
            "
          else
            echo "‚ùå No coverage report found"
            exit 1
          fi
